Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/torchrl.trainers.loggers.CSVLogger", "reference/generated/torchrl.trainers.loggers.Logger", "reference/generated/torchrl.trainers.loggers.MLFlowLogger", "reference/generated/torchrl.trainers.loggers.TensorboardLogger", "reference/generated/torchrl.trainers.loggers.WandbLogger", "reference/generated/torchrl.trainers.loggers.generate_exp_name", "reference/generated/torchrl.trainers.loggers.get_logger", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/torchrl.trainers.loggers.CSVLogger.rst", "reference/generated/torchrl.trainers.loggers.Logger.rst", "reference/generated/torchrl.trainers.loggers.MLFlowLogger.rst", "reference/generated/torchrl.trainers.loggers.TensorboardLogger.rst", "reference/generated/torchrl.trainers.loggers.WandbLogger.rst", "reference/generated/torchrl.trainers.loggers.generate_exp_name.rst", "reference/generated/torchrl.trainers.loggers.get_logger.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Using pretrained models", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 39, 42, 44, 45, 63, 66, 72, 75, 78, 80, 83, 86, 89, 97, 99, 100, 101, 102, 108, 110, 111, 113, 114, 118, 119, 124, 125, 131, 132, 134, 135, 137, 138, 139, 144, 148, 149, 150, 152, 153, 154, 156, 160, 165, 166, 167, 168, 178, 182, 206, 208, 209, 211, 213, 214, 215, 223, 225, 229, 231, 232, 233, 234], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 22, 26, 27, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 71, 72, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 108, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 176, 178, 182, 185, 186, 191, 194, 196, 199, 201, 204, 219, 223, 225, 226, 227, 228, 229, 230, 231, 233], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 208, 209, 210, 223, 225, 226, 231, 232, 233], "ha": [0, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 40, 42, 44, 45, 83, 86, 89, 128, 130, 135, 156, 225, 226, 228, 229, 231, 232, 233, 234], "been": [0, 4, 6, 7, 11, 12, 15, 39, 42, 44, 45, 85, 226, 228, 233], "move": [0, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 90, 109, 134, 184, 226, 233, 234], "out": [0, 3, 4, 22, 39, 42, 44, 45, 112, 113, 131, 134, 135, 163, 164, 223, 231, 232, 233, 234], "dedic": [0, 125, 126, 127, 225, 228], "librari": [0, 4, 5, 6, 7, 8, 9, 94, 219, 220, 224, 225, 233], "take": [0, 1, 3, 7, 16, 39, 42, 44, 45, 63, 81, 82, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 146, 169, 170, 171, 172, 173, 174, 175, 178, 187, 223, 225, 226, 231, 233], "look": [0, 4, 6, 7, 22, 39, 42, 44, 45, 75, 135, 136, 137, 226, 229, 231, 233, 234], "find": [0, 5, 128, 130, 231], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 225, 226, 227, 228, 229, 231, 232, 233, 234], "code": [0, 3, 4, 6, 7, 75, 137, 227, 228, 229, 230, 231, 233, 234], "github": [0, 2, 4, 5, 6, 9, 229, 234], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 49, 59, 60, 61, 62, 63, 64, 66, 71, 72, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 119, 120, 121, 122, 124, 125, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 188, 189, 191, 194, 199, 201, 204, 206, 210, 220, 223, 225, 226, 228, 229, 231, 233, 234], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 62, 67, 71, 72, 75, 76, 84, 85, 86, 90, 92, 98, 99, 100, 101, 102, 108, 109, 110, 112, 116, 125, 126, 127, 131, 134, 135, 136, 139, 142, 143, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 167, 168, 177, 182, 183, 186, 189, 194, 207, 208, 209, 210, 216, 220, 225, 226, 228, 229, 231, 232, 233, 234], "open": [0, 4, 6, 10, 234], "reinforc": [0, 2, 3, 8, 60, 99, 100, 101, 102, 131, 140, 147, 151, 155, 159, 160, 161, 194, 219, 226, 234], "learn": [0, 2, 3, 6, 7, 8, 22, 60, 99, 100, 101, 102, 111, 113, 131, 140, 147, 151, 155, 158, 159, 160, 161, 194, 225, 226, 228, 233, 234], "rl": [0, 1, 2, 4, 7, 9, 11, 12, 14, 15, 43, 113, 124, 132, 138, 147, 157, 178, 220, 223, 225, 229, 231, 232, 233], "pytorch": [0, 1, 2, 7, 84, 186, 223, 225, 229, 232, 233, 234], "It": [0, 2, 3, 6, 22, 26, 39, 42, 43, 44, 45, 53, 72, 86, 99, 101, 105, 118, 119, 131, 135, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 183, 201, 220, 225, 229, 231, 232, 233, 234], "provid": [0, 2, 3, 4, 7, 8, 14, 22, 24, 25, 26, 39, 42, 43, 44, 45, 61, 71, 72, 75, 79, 83, 86, 89, 90, 98, 108, 109, 110, 124, 128, 130, 132, 140, 165, 166, 167, 168, 177, 178, 189, 191, 199, 201, 204, 206, 217, 220, 223, 225, 226, 228, 229, 231, 233, 234], "python": [0, 3, 4, 5, 6, 9, 223, 225, 226, 227, 228, 229, 231, 233, 234], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 42, 61, 68, 72, 75, 84, 86, 89, 109, 112, 116, 134, 135, 153, 176, 185, 225, 226, 228, 229, 231, 232, 233, 234], "low": [0, 64, 225, 226, 234], "high": [0, 8, 64, 166, 169, 170, 173, 225, 226, 234], "level": [0, 19, 156, 225, 226, 234], "abstract": [0, 7, 18, 19, 20, 28, 29, 38, 39, 73, 110, 223, 232, 234], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 63, 65, 67, 75, 79, 83, 85, 86, 89, 90, 96, 97, 102, 103, 108, 110, 113, 117, 119, 131, 134, 135, 136, 137, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 206, 210, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234], "intend": [0, 6, 11, 12, 14, 15, 64, 234], "effici": [0, 2, 7, 113, 225, 226, 228, 229, 232, 234], "modular": [0, 137, 234], "properli": [0, 232, 234], "test": [0, 3, 4, 92, 108, 183, 206, 231, 234], "aim": [0, 3, 6, 75, 89, 109, 188, 220, 225, 226, 234], "support": [0, 3, 19, 36, 85, 94, 129, 134, 137, 140, 151, 166, 167, 168, 213, 223, 231, 232, 234], "research": [0, 6, 8, 234], "most": [0, 3, 6, 7, 22, 64, 225, 234], "written": [0, 3, 33, 39, 42, 44, 45, 79, 131, 134, 135, 147, 148, 156, 157, 165, 176, 177, 223, 225, 228, 231, 234], "highli": [0, 2, 233, 234], "wai": [0, 157, 226, 228, 229, 233, 234], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 24, 26, 28, 39, 40, 42, 44, 45, 60, 63, 71, 72, 75, 79, 83, 85, 86, 89, 90, 97, 107, 110, 111, 113, 114, 121, 122, 128, 134, 135, 136, 137, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 183, 191, 199, 201, 204, 208, 209, 210, 220, 223, 225, 226, 228, 229, 231, 233, 234], "easili": [0, 3, 6, 44, 45, 191, 199, 201, 204, 226, 232, 233, 234], "swap": [0, 3, 229, 234], "compon": [0, 2, 3, 33, 34, 35, 36, 140, 141, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 182, 186, 228, 229, 231, 234], "transform": [0, 7, 22, 24, 25, 26, 27, 40, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 99, 105, 140, 141, 144, 146, 177, 191, 194, 196, 199, 201, 204, 210, 219, 226, 229], "them": [0, 6, 24, 25, 26, 27, 39, 40, 42, 44, 45, 46, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 156, 177, 225, 226, 228, 229, 231, 232, 233, 234], "write": [0, 7, 22, 42, 74, 134, 135, 137, 149, 150, 158, 160, 165, 177, 223, 225, 226, 228, 229, 231, 232, 234], "new": [0, 3, 7, 11, 12, 14, 15, 22, 26, 30, 39, 42, 44, 45, 79, 85, 90, 96, 131, 134, 135, 139, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 225, 226, 231, 232, 233, 234], "ones": [0, 19, 22, 39, 42, 44, 45, 61, 63, 65, 72, 75, 83, 86, 89, 134, 225, 232, 233, 234], "littl": [0, 3, 233, 234], "effort": [0, 3, 234], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 53, 60, 61, 63, 64, 67, 69, 72, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 139, 140, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 176, 178, 180, 183, 186, 187, 188, 189, 191, 199, 201, 204, 206, 210, 220, 223, 225, 226, 228, 229, 231, 233, 234], "repo": [0, 5, 220, 234], "attempt": [0, 128, 130, 234], "align": [0, 234], "exist": [0, 22, 39, 42, 44, 45, 61, 86, 89, 189, 210, 231, 233, 234], "ecosystem": [0, 234], "dataset": [0, 24, 25, 26, 90, 229, 232, 233, 234], "pillar": [0, 234], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 22, 23, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 64, 65, 69, 71, 72, 75, 82, 85, 86, 89, 90, 92, 97, 108, 110, 111, 152, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 183, 188, 189, 191, 192, 193, 194, 196, 199, 201, 204, 206, 207, 208, 209, 210, 220, 227, 229, 230], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 22, 39, 42, 43, 44, 45, 75, 89, 91, 98, 109, 110, 111, 125, 126, 127, 134, 139, 147, 152, 153, 154, 157, 158, 160, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 219, 220, 223, 227, 230, 231, 233], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 72, 92, 97, 108, 111, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 149, 158, 160, 166, 167, 168, 178, 186, 187, 192, 206, 208, 209, 210, 219, 223, 226, 229, 231, 232, 233], "util": [0, 3, 11, 12, 14, 15, 16, 22, 39, 42, 44, 45, 75, 89, 92, 93, 94, 95, 96, 98, 144, 145, 146, 206, 219, 224, 225, 226, 231, 233, 234], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 22, 23, 33, 34, 39, 40, 42, 44, 45, 61, 63, 75, 79, 83, 85, 86, 89, 92, 107, 111, 114, 121, 122, 134, 135, 141, 165, 166, 167, 168, 178, 188, 209, 225, 226, 229, 232, 233, 234], "g": [0, 1, 3, 7, 9, 10, 22, 23, 39, 40, 42, 44, 45, 61, 63, 75, 79, 83, 85, 86, 89, 92, 107, 111, 121, 122, 134, 135, 165, 171, 172, 174, 175, 209, 225, 226, 229, 233, 234], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 131, 186, 187, 192, 193, 206, 208, 209, 219, 223, 226, 233, 234], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 22, 24, 25, 26, 27, 28, 30, 36, 37, 38, 39, 42, 43, 44, 45, 46, 63, 75, 83, 86, 89, 90, 96, 97, 98, 109, 111, 134, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 178, 188, 191, 194, 196, 199, 201, 204, 206, 207, 208, 209, 210, 217, 223, 226, 229, 231, 233, 234], "etc": [0, 3, 6, 22, 29, 39, 42, 44, 45, 86, 109, 225, 232, 233, 234], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 22, 36, 39, 42, 44, 45, 46, 60, 71, 72, 85, 86, 90, 92, 98, 108, 109, 136, 137, 148, 156, 157, 162, 178, 186, 223, 225, 226, 228, 229, 231, 232, 233, 234], "few": [0, 2, 7, 178, 226, 233, 234], "depend": [0, 3, 6, 7, 138, 157, 233, 234], "possibl": [0, 3, 20, 22, 23, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 183, 186, 225, 231, 232, 233, 234], "standard": [0, 72, 78, 90, 97, 105, 111, 112, 113, 128, 166, 167, 168, 225, 226, 234], "numpi": [0, 14, 17, 18, 19, 20, 21, 23, 28, 29, 84, 186, 225, 226, 233, 234], "common": [0, 3, 7, 42, 44, 45, 125, 126, 127, 142, 143, 206, 220, 223, 225, 228, 229, 231, 232, 233, 234], "openai": [0, 6, 51, 52, 233, 234], "gym": [0, 3, 7, 10, 11, 12, 14, 40, 42, 51, 52, 72, 83, 90, 191, 194, 196, 199, 201, 204, 206, 220, 225, 226, 229, 234], "onli": [0, 1, 6, 11, 12, 15, 19, 22, 26, 39, 42, 44, 45, 46, 61, 63, 75, 83, 86, 89, 90, 108, 134, 135, 136, 137, 189, 223, 225, 226, 228, 231, 233, 234], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 39, 40, 42, 43, 44, 45, 46, 49, 56, 58, 59, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 89, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 149, 150, 152, 153, 154, 158, 159, 160, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 213, 225, 226, 234], "On": [0, 6, 226, 232], "end": [0, 22, 24, 25, 26, 27, 39, 42, 44, 45, 86, 98, 110, 169, 170, 171, 172, 173, 174, 175, 225, 228, 229, 233, 234], "come": [0, 1, 3, 7, 44, 45, 124, 125, 126, 127, 132, 138, 225, 231, 233, 234], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 22, 23, 24, 25, 26, 27, 36, 39, 41, 42, 43, 44, 45, 61, 63, 75, 82, 83, 86, 89, 95, 110, 128, 134, 178, 183, 193, 210, 220, 224, 225, 226, 228, 229, 233, 234], "re": [0, 3, 7, 22, 39, 42, 44, 45, 135, 223, 226, 228, 231, 233, 234], "usabl": [0, 223, 234], "function": [0, 3, 7, 10, 16, 22, 33, 34, 35, 36, 39, 40, 42, 44, 45, 63, 81, 85, 86, 87, 88, 90, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 122, 125, 126, 127, 128, 130, 131, 134, 135, 137, 138, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 191, 194, 196, 199, 201, 204, 206, 219, 225, 226, 228, 231, 232, 233], "cost": [0, 2, 20, 226], "return": [0, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 96, 97, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 114, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 133, 134, 135, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 171, 172, 174, 175, 186, 188, 191, 192, 194, 196, 199, 201, 204, 206, 207, 208, 209, 210, 219, 223, 225, 226, 228, 229, 231, 232, 233, 234], "process": [0, 1, 2, 3, 4, 11, 12, 15, 40, 44, 45, 90, 131, 223, 225, 226, 229, 233, 234], "good": [0, 1, 8, 233, 234], "runtim": [0, 3, 22, 39, 42, 44, 45], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 63, 71, 81, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 118, 119, 128, 130, 131, 144, 153, 157, 183, 186, 225, 226, 228, 232, 233], "introduct": [0, 227, 230, 233], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 22, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 110, 111, 134, 176, 189, 191, 192, 193, 194, 196, 199, 201, 204, 206, 208, 209, 210, 219, 225, 226, 227, 228, 229, 230], "modul": [0, 3, 7, 10, 22, 39, 42, 43, 44, 45, 63, 75, 81, 83, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 155, 158, 159, 161, 163, 166, 167, 168, 186, 190, 195, 197, 198, 200, 203, 206, 219, 223, 225, 226, 228, 229, 231], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 24, 25, 26, 27, 30, 39, 40, 42, 43, 44, 45, 49, 61, 62, 64, 72, 75, 83, 84, 85, 86, 89, 90, 92, 95, 96, 97, 98, 99, 100, 105, 107, 109, 110, 111, 113, 114, 121, 122, 131, 134, 135, 139, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 173, 183, 186, 187, 189, 192, 193, 194, 202, 206, 210, 216, 217, 220, 223, 224, 227, 228, 230, 232, 233], "object": [0, 3, 5, 11, 12, 14, 15, 19, 22, 33, 34, 35, 36, 39, 42, 44, 45, 75, 85, 86, 90, 111, 124, 125, 132, 134, 135, 136, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 189, 192, 193, 205, 206, 210, 219, 223, 226, 231, 233], "state": [0, 1, 3, 11, 12, 14, 15, 22, 39, 42, 43, 44, 45, 48, 55, 60, 61, 63, 66, 80, 82, 83, 85, 86, 88, 90, 91, 97, 105, 108, 109, 111, 115, 118, 119, 125, 134, 139, 158, 165, 166, 167, 168, 210, 225, 226, 233], "contribut": 0, "instal": [0, 4, 9, 186, 220, 233], "pretrain": [0, 227, 230], "improv": [0, 2, 69, 147], "structur": [0, 3, 6, 131, 166, 167, 168, 229], "dictionari": [0, 11, 12, 14, 15, 19, 22, 39, 42, 44, 45, 86, 135, 208, 209, 210, 223, 225, 233], "featur": [0, 3, 11, 12, 14, 15, 23, 39, 42, 44, 45, 60, 98, 105, 106, 109, 112, 113, 135, 166, 167, 168, 210, 225, 226, 231, 233], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 60, 61, 63, 64, 68, 72, 75, 78, 83, 84, 85, 86, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 117, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 144, 145, 149, 150, 153, 154, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 191, 194, 196, 199, 201, 204, 223, 225, 226, 228, 229, 231, 233, 234], "tensordictmodul": [0, 11, 12, 14, 15, 111, 134, 136, 225, 226, 227, 228, 229, 230], "exampl": [0, 3, 8, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 63, 64, 65, 72, 75, 83, 84, 86, 89, 90, 96, 97, 98, 108, 109, 111, 114, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 143, 166, 167, 168, 178, 179, 180, 181, 182, 184, 185, 187, 191, 194, 196, 199, 201, 204, 206, 223, 225, 226, 227, 228, 229, 232, 233, 234], "do": [0, 3, 6, 11, 12, 14, 15, 42, 71, 96, 112, 126, 223, 225, 226, 228, 233, 234], "": [0, 1, 3, 5, 6, 7, 22, 24, 25, 26, 39, 42, 44, 45, 63, 75, 83, 86, 89, 90, 92, 98, 113, 128, 134, 135, 160, 166, 167, 168, 201, 204, 225, 226, 228, 229, 232, 233, 234], "don": [0, 5, 6, 17, 18, 19, 20, 21, 23, 28, 29, 39, 225, 232, 233, 234], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 39, 40, 42, 44, 45, 75, 89, 90, 96, 134, 143, 149, 166, 167, 168, 186, 187, 210, 220, 225, 226, 228, 229, 233, 234], "showcas": 0, "implement": [0, 2, 3, 8, 10, 22, 36, 39, 42, 44, 45, 90, 107, 120, 121, 122, 147, 157, 160, 191, 199, 201, 204, 223, 225, 226, 234], "deepmind": [0, 6, 8, 49, 50], "control": [0, 1, 3, 4, 44, 45, 49, 50, 64, 99, 100, 101, 102, 110, 111, 119, 131, 134, 135, 136, 148, 156, 157, 161, 166, 169, 170, 173, 194, 223, 225], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 33, 34, 39, 41, 42, 43, 44, 45, 48, 55, 56, 57, 58, 63, 74, 75, 83, 84, 86, 89, 97, 98, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 125, 126, 127, 129, 131, 132, 133, 134, 137, 138, 140, 141, 149, 187, 191, 194, 196, 199, 201, 202, 204, 225, 226, 228, 229, 231, 234], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 22, 39, 42, 43, 44, 45, 49, 50, 63, 71, 72, 81, 85, 86, 87, 88, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 136, 137, 144, 183, 208, 209, 210, 220, 223, 225, 226, 228, 229, 231, 232, 234], "parallel": [0, 1, 3, 7, 11, 12, 15, 92, 147, 207, 208, 209, 210, 226], "vecnorm": [0, 40, 210, 219], "task": [0, 8, 44, 45, 49, 75, 89, 225, 226, 227, 230, 233, 234], "specif": [0, 4, 7, 26, 27, 42, 186, 219, 223, 227, 230], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 39, 42, 43, 44, 45, 64, 95, 96, 113, 125, 126, 127, 128, 130, 131, 134, 135, 140, 141, 147, 148, 149, 156, 157, 158, 160, 183, 187, 191, 192, 193, 194, 196, 199, 206, 208, 209, 223, 226, 227, 229, 230, 231, 233, 234], "multi": [0, 3, 6, 8, 22, 39, 42, 44, 45, 108, 109, 225, 226, 227, 230, 234], "execut": [0, 1, 3, 5, 6, 7, 14, 22, 24, 25, 26, 27, 39, 40, 42, 43, 44, 45, 136, 137, 189, 210, 223, 226, 230, 231, 233], "divers": [0, 44, 45], "rollout": [0, 1, 3, 11, 12, 14, 15, 39, 42, 43, 44, 45, 56, 57, 92, 97, 111, 131, 147, 189, 225, 226, 229, 234], "ddpg": [0, 99, 100, 101, 102, 149, 155, 161, 194, 195, 219, 227, 230], "normal": [0, 72, 90, 98, 107, 109, 114, 121, 122, 128, 135, 183, 184, 210, 223, 226, 233], "observ": [0, 2, 3, 7, 11, 12, 14, 28, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 55, 56, 57, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 76, 79, 80, 82, 83, 84, 85, 86, 87, 90, 96, 99, 100, 101, 102, 108, 115, 116, 118, 124, 125, 126, 127, 129, 130, 131, 132, 133, 138, 139, 140, 141, 153, 166, 167, 168, 177, 191, 194, 196, 199, 201, 204, 206, 223, 226, 228, 231, 232, 233, 234], "build": [0, 3, 6, 16, 19, 22, 39, 42, 44, 45, 90, 97, 111, 135, 186, 190, 195, 197, 198, 200, 202, 203, 205, 223, 229, 231, 232, 233, 234], "evalu": [0, 22, 39, 42, 44, 45, 86, 103, 117, 122, 158, 192, 193, 226], "your": [0, 2, 3, 6, 7, 9, 22, 39, 42, 44, 45, 90, 210, 220, 226, 232, 234], "record": [0, 22, 39, 42, 44, 45, 157, 176, 177, 206, 219, 223, 226], "replai": [0, 7, 14, 24, 25, 26, 27, 30, 31, 32, 36, 37, 44, 45, 149, 150, 158, 160, 186, 202, 206, 219, 223, 226, 229], "buffer": [0, 3, 7, 14, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 63, 75, 83, 86, 89, 134, 137, 149, 150, 158, 160, 186, 202, 206, 219, 223, 226, 229, 231, 233], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 22, 39, 42, 44, 45, 72, 75, 83, 85, 86, 91, 97, 111, 112, 113, 128, 130, 131, 156, 158, 160, 191, 194, 196, 199, 201, 204, 210, 226, 233], "time": [0, 3, 6, 7, 11, 12, 14, 15, 22, 39, 40, 42, 44, 45, 61, 83, 90, 96, 105, 108, 131, 153, 158, 166, 167, 168, 186, 226, 228, 229, 231, 232, 233, 234], "train": [0, 1, 11, 12, 14, 15, 22, 39, 42, 44, 45, 69, 75, 86, 89, 99, 101, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 186, 187, 206, 223, 229, 232, 233], "experi": [0, 3, 24, 30, 211, 213, 214, 215, 216, 217, 220], "result": [0, 1, 3, 6, 11, 12, 14, 15, 22, 24, 25, 26, 27, 39, 40, 42, 44, 45, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 72, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 92, 96, 109, 141, 166, 169, 170, 171, 172, 173, 174, 175, 176, 187, 226, 229, 232, 233, 234], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 39, 43, 93, 95, 97, 103, 107, 111, 117, 118, 121, 122, 128, 130, 131, 134, 135, 148, 149, 150, 156, 157, 178, 186, 188, 226, 229, 231, 233, 234], "trajectori": [0, 1, 11, 12, 14, 15, 16, 22, 39, 42, 44, 45, 85, 97, 111, 131, 157, 166, 168, 169, 170, 171, 172, 173, 174, 175, 178, 226, 233, 234], "td": [0, 19, 47, 48, 49, 50, 51, 52, 54, 55, 61, 64, 65, 72, 84, 86, 90, 96, 97, 110, 111, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 167, 168, 171, 172, 174, 175, 176, 178, 185, 191, 194, 196, 199, 201, 204, 231, 232, 233, 234], "lambda": [0, 11, 12, 14, 15, 40, 152, 154, 168, 171, 172, 174, 175, 206, 231, 232, 233, 234], "pixel": [0, 3, 6, 19, 70, 75, 76, 84, 89, 99, 115, 116, 177, 191, 196, 199, 201, 204, 225, 227, 229, 230, 233, 234], "dqn": [0, 129, 133, 140, 150, 151, 155, 161, 196, 197, 219, 227, 230], "problem": [0, 6, 7, 14, 233], "deep": [0, 8, 60, 99, 100, 101, 102, 104, 131, 147, 155, 160, 161, 194, 225], "q": [0, 99, 100, 101, 102, 104, 106, 140, 141, 149, 150, 151, 155, 158, 160, 201, 204, 231], "network": [0, 1, 7, 22, 39, 42, 44, 45, 98, 99, 100, 101, 102, 104, 105, 106, 109, 113, 115, 116, 118, 119, 125, 126, 127, 134, 149, 150, 151, 155, 158, 160, 161, 163, 166, 167, 168, 191, 194, 199, 205, 206, 223, 225, 228, 231, 233], "regular": [0, 15, 134, 135, 141, 151, 187, 223, 225, 231, 232, 233], "conclus": 0, "api": [0, 3, 4, 75, 89, 223, 233, 234], "packag": [0, 5, 6, 9, 219, 220, 233], "helper": [0, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 225, 234], "compos": [0, 3, 22, 24, 25, 26, 31, 32, 37, 39, 42, 44, 45, 85, 86, 90, 153, 191, 194, 196, 199, 201, 204, 219, 226, 228, 233, 234], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 23, 29, 39, 43, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 119, 124, 128, 130, 131, 132, 134, 135, 136, 219], "envbas": [0, 3, 11, 12, 14, 15, 40, 42, 44, 45, 46, 71, 85, 86, 90, 92, 97, 110, 111, 183, 189, 191, 192, 193, 194, 196, 199, 201, 204, 206, 208, 209, 210, 219], "gymlikeenv": [0, 219], "envmetadata": [0, 219], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 23, 28, 29, 39, 41, 42, 43, 44, 45, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 92, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 191, 194, 196, 199, 201, 204, 219, 225, 226, 228, 234], "vector": [0, 7, 17, 23, 44, 45, 64, 99, 101, 109, 168, 174, 175, 219, 225, 226, 228, 229, 231, 233], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 23, 28, 29, 83, 134, 135, 136, 137, 219, 233, 234], "hook": [0, 22, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 129, 130, 131, 133, 140, 141, 144, 180, 181, 183, 184, 186, 187, 219], "explor": [0, 1, 91, 113, 128, 130, 131, 134, 135, 147, 183, 192, 193, 206, 219, 225, 226], "planner": [0, 97, 111, 219], "distribut": [0, 2, 3, 8, 9, 72, 97, 103, 104, 105, 107, 111, 114, 117, 118, 119, 120, 121, 122, 128, 129, 135, 136, 140, 148, 151, 156, 157, 219, 223, 225, 226, 231, 233, 234], "sac": [0, 158, 160, 203, 204, 219], "redq": [0, 158, 200, 201, 219], "ppo": [0, 7, 135, 148, 156, 157, 191, 198, 199, 219], "a2c": [0, 147, 190, 219], "dreamer": [0, 58, 105, 152, 153, 154, 219], "trainer": [0, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 225], "checkpoint": [0, 219, 229], "builder": [0, 219, 226, 233], "logger": [0, 177, 181, 183, 186, 206, 210, 211, 213, 214, 215, 216, 217, 219], "_util": [0, 10, 219], "implement_for": [0, 219], "work": [0, 3, 6, 7, 22, 39, 42, 44, 45, 61, 75, 90, 98, 109, 186, 220, 226, 228, 229, 231, 232, 233, 234], "what": [0, 7, 28, 39, 42, 44, 45, 83, 220, 226, 229, 231, 233, 234], "version": [0, 1, 5, 10, 22, 39, 42, 44, 45, 168, 220, 225, 226, 229, 233], "habitat": [0, 53, 220, 229], "lab": [0, 3, 49, 50, 220], "up": [0, 1, 2, 3, 7, 8, 20, 220, 225, 226, 231, 233], "issu": [0, 4, 7, 134, 135, 220, 234], "about": [0, 4, 220, 225, 226, 233, 234], "mujoco": [0, 5, 220], "prerequisit": 0, "render": [0, 7, 183, 220, 225, 226], "all": [0, 3, 7, 11, 12, 14, 15, 22, 39, 40, 42, 43, 44, 45, 46, 63, 67, 72, 75, 79, 81, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 134, 135, 137, 144, 153, 182, 186, 188, 208, 209, 210, 220, 223, 225, 226, 227, 228, 231, 232, 233, 234], "bindindg": 0, "2": [0, 1, 7, 9, 11, 12, 14, 21, 22, 39, 40, 42, 44, 45, 56, 57, 61, 63, 64, 72, 75, 83, 86, 89, 90, 98, 99, 100, 101, 106, 108, 109, 114, 129, 130, 131, 134, 138, 140, 148, 149, 156, 158, 160, 165, 166, 167, 168, 171, 172, 174, 175, 177, 178, 225, 226, 228, 229, 232, 233, 234], "1": [0, 1, 2, 3, 7, 9, 11, 12, 14, 15, 20, 21, 22, 23, 29, 39, 40, 42, 43, 44, 45, 48, 55, 56, 57, 59, 61, 63, 64, 65, 69, 71, 72, 75, 83, 84, 86, 89, 90, 96, 97, 98, 99, 100, 102, 106, 107, 109, 111, 112, 113, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 140, 144, 147, 148, 153, 156, 157, 158, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 183, 184, 191, 194, 196, 199, 201, 204, 206, 210, 220, 223, 225, 226, 228, 229, 232, 233, 234], "old": [0, 156, 233], "bind": [0, 5], "py": [0, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234], "when": [0, 1, 3, 4, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 33, 34, 35, 36, 39, 40, 42, 44, 45, 63, 71, 72, 75, 79, 83, 85, 86, 89, 90, 95, 97, 109, 110, 111, 112, 121, 134, 135, 137, 144, 148, 156, 157, 165, 176, 177, 210, 220, 223, 225, 226, 229, 231, 232, 233], "pro": [0, 6, 220], "tip": [0, 6, 220], "debug": [0, 5, 220, 233], "gradient": [0, 22, 39, 42, 44, 45, 86, 107, 113, 121, 122, 147, 159, 165, 166, 167, 168, 186, 225, 226], "relat": [0, 9, 225], "error": [0, 1, 3, 6, 9, 10, 22, 39, 42, 44, 45, 92, 143, 225, 226, 232, 233], "newcom": 0, "my": 0, "too": [0, 6, 107, 121, 122, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 167, 168, 225, 226, 233], "slow": [0, 3], "intermedi": [0, 229], "resourc": [0, 220], "functorch": [0, 7, 9, 134, 137, 142, 226, 234], "blog": 0, "websit": 0, "index": [0, 6, 7, 9, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 64, 96, 225, 226, 228, 232, 234], "search": [0, 226], "page": [0, 6], "somewhat": [1, 233], "equival": [1, 11, 12, 14, 15, 22, 39, 42, 44, 45, 86, 233, 234], "dataload": [1, 232], "except": [1, 17, 18, 19, 20, 21, 23, 28, 29, 39, 67, 117, 143, 225, 226, 232, 233], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 65, 67, 85, 86, 89, 108, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 186, 223, 225, 226, 228, 229, 231, 232, 233, 234], "collect": [1, 3, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 72, 75, 89, 92, 131, 149, 158, 160, 178, 186, 187, 188, 189, 206, 223, 225, 226, 229, 232, 233, 234], "over": [1, 2, 3, 7, 11, 12, 14, 15, 22, 39, 42, 44, 45, 64, 72, 137, 151, 153, 188, 223, 225, 231, 232, 233], "non": [1, 7, 22, 39, 42, 44, 45, 59, 63, 75, 83, 86, 89, 134, 135, 153, 166, 167, 168, 225, 231, 233], "static": [1, 90], "like": [1, 6, 22, 39, 42, 44, 45, 53, 84, 92, 158, 225, 229, 232, 233], "being": [1, 3, 7, 15, 22, 39, 42, 44, 45, 64, 86, 95, 131, 177, 187, 208, 209, 210, 225, 226, 229], "accept": [1, 11, 12, 14, 15, 22, 39, 42, 43, 44, 45, 63, 75, 79, 83, 86, 89, 134, 135, 136, 223, 231, 233], "two": [1, 7, 9, 22, 39, 42, 44, 45, 72, 102, 135, 156, 160, 162, 183, 186, 191, 199, 201, 204, 225, 226, 228, 231, 232, 233, 234], "main": [1, 2, 4, 40, 89, 135, 186, 225, 226, 228, 233], "argument": [1, 3, 11, 12, 14, 15, 19, 22, 39, 42, 44, 45, 63, 75, 83, 85, 86, 89, 98, 109, 112, 134, 135, 136, 138, 176, 180, 188, 191, 194, 196, 199, 201, 204, 206, 207, 210, 225, 226, 231, 233], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 39, 42, 43, 44, 45, 60, 75, 79, 86, 89, 109, 137, 138, 164, 166, 168, 176, 183, 208, 209, 225, 226, 228, 229, 231, 232, 233, 234], "constructor": [1, 14, 85, 166, 167, 168, 191, 194, 196, 199, 201, 204, 207, 210, 231], "iter": [1, 12, 14, 21, 22, 24, 25, 26, 27, 39, 42, 44, 45, 66, 72, 80, 90, 98, 109, 134, 135, 136, 137, 142, 164, 183, 185, 186, 191, 199, 201, 204, 223, 225], "step": [1, 3, 7, 11, 12, 14, 15, 22, 39, 40, 42, 43, 44, 45, 46, 48, 55, 71, 72, 82, 86, 96, 97, 105, 108, 110, 111, 128, 130, 131, 135, 147, 152, 157, 165, 176, 178, 183, 186, 223, 225, 226, 228, 229, 232, 234], "queri": [1, 11, 12, 14, 15, 22, 39, 42, 44, 45, 75, 85, 90, 137, 231, 234], "defin": [1, 2, 17, 18, 19, 20, 21, 23, 28, 29, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 166, 167, 168, 176, 207, 226, 231, 232, 233], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 22, 23, 24, 25, 26, 30, 33, 34, 35, 39, 42, 43, 44, 45, 60, 64, 69, 71, 72, 78, 82, 90, 97, 98, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 118, 119, 120, 121, 122, 128, 130, 131, 134, 135, 146, 152, 158, 160, 178, 180, 183, 186, 187, 188, 189, 208, 209, 210, 225, 226, 229, 233], "befor": [1, 3, 5, 6, 9, 11, 12, 14, 15, 22, 39, 42, 44, 45, 46, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 76, 77, 78, 80, 82, 83, 84, 85, 87, 89, 109, 112, 113, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 167, 168, 225, 226, 231, 232, 233], "deliv": [1, 226, 234], "stack": [1, 6, 7, 44, 45, 89, 90, 96, 136, 137, 176, 178, 226, 228, 231, 232, 234], "user": [1, 2, 4, 7, 22, 39, 42, 44, 45, 82, 86, 108, 207, 223, 226, 231, 233, 234], "reset": [1, 3, 7, 11, 12, 14, 15, 39, 40, 42, 43, 44, 45, 48, 55, 60, 63, 66, 71, 75, 79, 80, 82, 83, 85, 88, 90, 91, 96, 123, 131, 176, 191, 194, 196, 199, 201, 204, 225, 226, 228, 234], "whenev": [1, 3, 187], "reach": [1, 11, 12, 14, 15, 39, 42, 44, 45, 128, 130, 131, 233, 234], "done": [1, 3, 6, 7, 11, 12, 14, 19, 22, 39, 40, 42, 43, 44, 45, 48, 55, 56, 57, 72, 78, 80, 82, 83, 90, 96, 97, 111, 149, 150, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 191, 194, 196, 199, 201, 204, 225, 226, 228, 229, 232, 233, 234], "after": [1, 7, 19, 22, 39, 42, 44, 45, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 96, 112, 128, 130, 153, 225, 226, 229, 231, 232, 233], "predifin": 1, "becaus": [1, 6, 85, 102, 108, 134, 135, 225, 226, 228, 232, 233], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 22, 39, 42, 44, 45, 63, 72, 81, 85, 86, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 118, 119, 121, 122, 125, 128, 130, 131, 135, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 189, 225, 226, 228, 229, 231], "heavi": [1, 7], "crucial": [1, 225, 226, 233], "configur": [1, 7, 11, 12, 14, 15, 157, 191, 199, 201, 204], "appropri": [1, 6, 11, 12, 14, 15, 37, 38, 207, 210], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 49, 50, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 199, 201, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 225, 226, 229, 231, 234], "consider": [1, 3, 7, 225], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 42, 43, 44, 45, 86, 89, 98, 109, 138, 149, 150, 151, 158, 160, 168, 226, 233], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 36, 39, 42, 43, 44, 45, 63, 72, 79, 80, 81, 85, 86, 87, 88, 90, 92, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 134, 135, 144, 155, 156, 157, 158, 161, 165, 166, 167, 168, 177, 182, 183, 186, 206, 208, 209, 210, 223, 225, 226, 228, 229, 233, 234], "occur": [1, 7, 12, 61, 134, 135, 153, 233], "serial": [1, 3, 22, 39, 42, 44, 45, 90], "optim": [1, 7, 22, 39, 42, 44, 45, 97, 111, 112, 113, 157, 160, 182, 186, 191, 199, 206, 223, 225, 226, 232], "syncdatacollector": [1, 11, 12, 15, 206, 209, 219], "worker": [1, 11, 12, 14, 15, 40, 44, 45, 90, 208, 209, 210, 233, 234], "multisyncdatacollector": [1, 209, 219, 234], "split": [1, 11, 12, 14, 15, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 223, 234], "workload": 1, "across": [1, 90, 131, 187, 232], "aggreg": [1, 98, 99, 100, 137, 232], "final": [1, 128, 130, 131, 136, 166, 183, 225, 226, 233], "multiasyncdatacollector": [1, 15, 208, 219, 225, 226, 234], "sever": [1, 7, 22, 39, 42, 44, 45, 61, 86, 157, 233], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 39, 42, 43, 44, 45, 72, 86, 89, 103, 104, 108, 112, 117, 120, 131, 134, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 185, 186, 187, 208, 209, 210, 223, 225, 226, 228, 229, 231, 233, 234], "gather": [1, 165, 189, 220, 231, 233], "continu": [1, 8, 18, 29, 99, 100, 101, 102, 131, 135, 137, 161, 166, 169, 170, 173, 194, 225, 233, 234], "concomittantli": 1, "impli": [1, 233], "weight": [1, 8, 11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 113, 134, 147, 148, 153, 187, 205, 223, 225, 226, 228, 234], "mai": [1, 3, 4, 6, 7, 11, 12, 14, 15, 22, 39, 42, 44, 45, 72, 80, 86, 90, 109, 223, 225, 229, 233, 234], "slightli": [1, 225, 229, 231, 233], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 157, 232, 233], "although": [1, 7, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 223, 225, 226], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 24, 25, 26, 27, 33, 34, 39, 42, 43, 44, 45, 75, 79, 85, 89, 128, 130, 134, 135, 146, 147, 148, 149, 151, 155, 156, 157, 158, 160, 161, 165, 166, 167, 168, 176, 177, 186, 187, 223, 225, 226, 228, 231, 233], "asynchron": [1, 8, 12, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 147, 208], "off": [1, 2, 107, 121, 122, 160, 183, 192, 223, 226, 229, 233], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 22, 39, 42, 44, 45, 72, 112, 140, 147, 151, 157, 183, 194, 223, 225, 229, 231, 233], "remot": [1, 44, 45, 233], "necessari": [1, 5, 7, 11, 12, 14, 15, 80, 158, 166, 167, 168, 225], "synchronis": [1, 40], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 61, 64, 66, 72, 75, 80, 82, 83, 84, 85, 86, 89, 90, 96, 97, 99, 100, 101, 102, 107, 109, 110, 111, 112, 114, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 148, 149, 150, 156, 157, 158, 160, 165, 166, 167, 168, 176, 177, 178, 186, 188, 189, 191, 194, 196, 199, 201, 202, 204, 206, 207, 210, 220, 223, 225, 226, 228, 229, 231, 232, 233, 234], "either": [1, 4, 22, 39, 42, 44, 45, 139, 194, 217, 223, 229, 232, 233, 234], "update_policy_weights_": [1, 11, 12, 14, 15, 225, 226, 234], "update_at_each_batch": [1, 11, 12, 15, 225], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 56, 57, 61, 63, 71, 72, 75, 78, 82, 83, 84, 86, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 111, 112, 113, 121, 122, 125, 126, 127, 128, 131, 134, 135, 136, 137, 143, 147, 148, 152, 153, 154, 156, 157, 158, 160, 162, 166, 167, 168, 171, 172, 174, 175, 176, 177, 180, 181, 183, 186, 196, 210, 223, 225, 226, 228, 229, 231, 232, 233, 234], "second": [1, 7, 185, 225, 226, 228, 229, 231, 232, 233, 234], "consid": [1, 7, 22, 39, 42, 44, 45, 64, 103, 120, 225, 232], "oper": [1, 3, 6, 7, 11, 12, 15, 22, 39, 42, 44, 45, 85, 114, 125, 126, 127, 134, 139, 140, 147, 148, 149, 150, 151, 156, 157, 165, 166, 167, 168, 186, 194, 196, 201, 204, 223, 225, 226, 228, 231, 233], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 22, 28, 39, 40, 42, 43, 44, 45, 50, 60, 63, 72, 81, 83, 85, 87, 88, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 114, 115, 116, 118, 119, 128, 130, 131, 135, 136, 137, 144, 177, 183, 189, 191, 192, 193, 194, 196, 199, 201, 204, 206, 208, 209, 217, 223, 226, 231, 232, 233], "cpu": [1, 3, 7, 9, 11, 12, 14, 22, 28, 33, 34, 39, 42, 43, 44, 45, 48, 55, 56, 57, 58, 63, 75, 83, 86, 89, 97, 111, 113, 132, 134, 137, 191, 194, 196, 199, 201, 204, 225, 226, 228, 229, 231, 232, 233, 234], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 89, 102, 109, 114, 128, 130, 134, 187, 220, 225, 226, 231, 232, 233, 234], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 21, 23, 24, 25, 26, 27, 36, 37, 38, 39, 40, 42, 44, 45, 46, 63, 64, 71, 72, 75, 81, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 133, 134, 135, 140, 141, 144, 146, 147, 148, 149, 150, 156, 157, 158, 180, 182, 183, 186, 189, 191, 199, 201, 204, 210, 220, 223, 225, 226, 228, 229, 231, 232, 233], "cuda": [1, 3, 6, 22, 39, 42, 44, 45, 63, 74, 75, 83, 86, 89, 134, 179, 225, 226, 229, 232, 233], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 44, 45, 61, 64, 79, 85, 90, 108, 112, 113, 134, 135, 158, 201, 210, 223, 226, 232, 234], "infer": [1, 44, 45, 90, 112, 160, 225, 231, 232], "dispatch": 1, "avail": [1, 5, 135, 140, 141, 208, 209, 225, 226, 233], "speed": [1, 2, 7, 20, 225, 226], "avoid": [1, 22, 39, 42, 44, 45, 86, 90, 134, 188, 231], "oom": 1, "choic": [1, 2, 114], "size": [1, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 39, 41, 42, 43, 44, 45, 48, 55, 56, 57, 58, 61, 75, 81, 83, 84, 86, 87, 89, 97, 98, 103, 108, 109, 111, 114, 117, 118, 119, 120, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 165, 166, 167, 168, 177, 178, 191, 194, 196, 199, 201, 204, 225, 226, 228, 229, 231, 233, 234], "pass": [1, 3, 14, 19, 22, 26, 39, 40, 41, 42, 44, 45, 63, 81, 85, 87, 88, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 112, 114, 115, 116, 118, 119, 128, 130, 131, 134, 135, 137, 143, 144, 166, 167, 168, 208, 209, 210, 225, 226, 228, 233], "ie": 1, "store": [1, 7, 11, 12, 14, 15, 19, 22, 26, 27, 33, 34, 35, 39, 42, 44, 45, 90, 97, 108, 111, 191, 194, 196, 199, 201, 204, 223, 225, 226, 229, 232, 233], "while": [1, 3, 6, 7, 22, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 156, 157, 225, 226, 229, 234], "wait": [1, 226], "also": [1, 2, 3, 7, 22, 26, 39, 42, 44, 45, 79, 80, 86, 119, 136, 137, 147, 149, 150, 166, 223, 225, 226, 228, 231, 232, 233], "impact": 1, "memori": [1, 7, 20, 22, 33, 39, 40, 42, 44, 45, 63, 75, 83, 86, 89, 90, 134, 210, 223, 225, 234], "manag": [1, 7, 163, 164, 183, 225, 231], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 39, 42, 44, 45, 46, 60, 61, 66, 72, 75, 79, 80, 83, 85, 86, 89, 90, 96, 97, 110, 111, 128, 130, 131, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 177, 182, 183, 185, 186, 189, 191, 199, 201, 204, 223, 225, 226, 228, 231, 233, 234], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 22, 23, 27, 39, 42, 44, 45, 46, 60, 61, 69, 71, 72, 75, 85, 86, 92, 107, 121, 122, 125, 126, 127, 134, 135, 137, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 166, 178, 182, 191, 194, 196, 199, 201, 204, 223, 225, 226, 228, 229, 231, 232, 233], "passing_devic": [1, 11, 12, 14, 15, 225, 226, 234], "dure": [1, 11, 12, 14, 15, 39, 42, 44, 45, 69, 86, 183, 186, 225, 233], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 53, 69, 75, 83, 85, 86, 88, 90, 91, 92, 96, 97, 98, 109, 111, 113, 114, 128, 130, 135, 136, 137, 140, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 180, 186, 187, 191, 196, 199, 201, 204, 206, 211, 212, 213, 226, 232, 233], "heurist": [1, 17, 18, 19, 20, 21, 23, 28, 29, 131, 225, 233], "usual": [1, 3, 5, 6, 7, 39, 42, 44, 45, 113, 176, 191, 199, 201, 204, 220, 223, 233], "same": [1, 3, 14, 22, 39, 40, 42, 44, 45, 64, 69, 71, 72, 85, 86, 90, 98, 109, 131, 225, 226, 228, 229, 231, 232, 233], "storag": [1, 2, 7, 22, 24, 25, 26, 27, 33, 34, 35, 39, 41, 42, 44, 45, 219, 223, 225, 226, 229], "default": [1, 3, 9, 11, 12, 14, 15, 19, 20, 22, 23, 24, 25, 26, 33, 34, 39, 42, 44, 45, 46, 49, 60, 61, 71, 72, 75, 78, 83, 84, 86, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 128, 130, 131, 132, 134, 135, 138, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 180, 181, 183, 184, 186, 191, 194, 199, 201, 204, 206, 210, 223, 225, 226, 229, 231, 232, 233, 234], "behaviour": [1, 3, 42, 61, 107, 121, 122, 183, 226], "besid": 1, "those": [1, 4, 6, 44, 45, 72, 135, 136, 137, 187, 208, 209, 225, 226, 233], "choos": [1, 225], "follow": [1, 2, 3, 5, 6, 7, 22, 39, 42, 43, 44, 45, 75, 98, 109, 146, 148, 156, 159, 186, 201, 204, 223, 225, 226, 228, 231, 232, 233, 234], "max_frames_per_traj": [1, 11, 12, 14, 15, 188, 225, 234], "frame": [1, 11, 12, 14, 15, 22, 42, 60, 69, 128, 130, 131, 176, 177, 180, 183, 186, 188, 189, 225, 226, 233, 234], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 27, 33, 34, 35, 36, 39, 42, 44, 45, 60, 63, 65, 74, 75, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 118, 119, 128, 130, 131, 134, 135, 137, 144, 165, 176, 183, 223, 225, 226, 231, 232, 233], "frames_per_batch": [1, 11, 12, 14, 15, 188, 225, 226, 234], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 26, 39, 40, 42, 44, 45, 75, 79, 82, 83, 89, 90, 128, 137, 140, 141, 171, 172, 174, 175, 183, 208, 209, 225, 226, 229, 231, 233, 234], "init_random_fram": [1, 11, 12, 14, 15, 188, 225, 226], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 29, 31, 39, 42, 43, 44, 45, 64, 71, 72, 83, 92, 134, 135, 158, 183, 189, 225, 226, 229, 233, 234], "rand_step": [1, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 90, 233, 234], "reset_at_each_it": [1, 11, 12, 14, 15, 225], "split_traj": [1, 11, 12, 14, 15, 225], "pad": [1, 16, 98, 99, 100, 108, 225, 226], "along": [1, 60, 61, 72, 79, 84, 89, 109, 113, 134, 135, 226, 232], "mask": [1, 11, 12, 14, 225, 226, 232, 233, 234], "point": [1, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 37, 38, 39, 42, 44, 45, 60, 63, 75, 83, 84, 86, 89, 110, 134, 146, 151, 186, 220, 228, 233], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 128, 169, 170, 171, 172, 173, 174, 175, 223], "repres": [1, 3, 11, 12, 14, 15, 26, 39, 42, 44, 45, 69, 135, 140, 141, 162, 166, 231, 232], "valid": [1, 86, 98, 109, 128, 130, 156, 223, 233], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 39, 42, 44, 45, 46, 59, 61, 64, 71, 72, 75, 77, 79, 83, 84, 85, 86, 89, 90, 99, 100, 101, 102, 103, 105, 106, 107, 109, 111, 112, 113, 114, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 186, 191, 194, 199, 201, 204, 206, 223, 225, 226, 228, 231, 233, 234], "exploration_mod": [1, 11, 14, 183, 219, 225, 226, 231], "strategi": [1, 223, 225], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 22, 39, 42, 44, 45, 72, 79, 138, 178, 210, 225, 226, 231, 233], "algorithm": [2, 7, 8, 11, 12, 43, 69, 147, 157, 158, 159, 178, 191, 192, 199, 223, 225, 226, 229, 232, 234], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 22, 39, 40, 42, 44, 45, 75, 89, 90, 97, 108, 220, 223, 225, 226, 228, 229, 231, 232, 233, 234], "give": [2, 6, 43, 220, 225, 226, 229, 234], "abil": 2, "veri": [2, 3, 225, 226, 233, 234], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 61], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 219, 225, 226, 229], "advis": [2, 233], "share": [2, 5, 7, 33, 34, 35, 36, 40, 44, 45, 90, 125, 126, 127, 210, 228, 231, 233, 234], "due": [2, 3, 4, 229, 233], "lower": [2, 11, 12, 14, 15, 18, 90, 118, 119, 232], "serialis": 2, "memmaptensor": [2, 229], "well": [2, 3, 7, 11, 12, 15, 22, 36, 39, 42, 44, 45, 118, 119, 225, 226, 229, 231, 232, 233, 234], "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 79, 81, 87, 97, 134, 135, 225, 231], "file": [2, 5, 6, 176, 223, 230], "locat": [2, 6, 42, 72, 78, 107, 114, 121, 122, 232], "node": [2, 191, 194, 196, 199, 201, 204], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 72, 90, 97, 103, 105, 108, 111, 120, 128, 135, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 225, 226, 233, 234], "liststorag": [2, 24, 25, 26, 219], "were": [2, 6, 44, 45, 225], "found": [2, 5, 6, 9, 19, 22, 26, 39, 42, 44, 45, 90, 135, 149, 157, 225, 226, 231], "rough": 2, "benchmark": [2, 8], "http": [2, 4, 5, 6, 9, 24, 30, 60, 75, 99, 100, 101, 102, 105, 106, 111, 113, 115, 116, 118, 119, 131, 140, 147, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 166, 169, 170, 173, 191, 194, 199, 201, 204, 229, 234], "com": [2, 4, 5, 6, 9, 229, 234], "tree": 2, "type": [2, 22, 24, 26, 28, 39, 42, 43, 44, 45, 63, 75, 83, 86, 89, 90, 98, 109, 113, 128, 130, 134, 135, 142, 191, 194, 196, 199, 201, 204, 208, 225, 226, 232, 233], "1x": 2, "lazytensorstorag": [2, 219], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 39, 42, 44, 45, 60, 63, 72, 75, 83, 84, 86, 89, 97, 98, 99, 100, 106, 108, 109, 111, 114, 124, 125, 126, 127, 129, 132, 134, 137, 138, 140, 143, 153, 166, 167, 168, 171, 172, 174, 175, 177, 185, 196, 223, 225, 226, 229, 232, 233, 234], "44x": 2, "parent": [2, 3, 28, 39, 61, 69, 72, 75, 85, 89, 125, 157, 226, 232, 233, 234], "subclass": [2, 3, 39, 42, 44, 45, 63, 81, 85, 87, 88, 92, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 129, 130, 131, 133, 134, 135, 136, 144, 157, 225], "basic": [2, 43, 233], "properti": [2, 39, 42, 43, 44, 45, 86, 89, 103, 107, 112, 117, 120, 121, 122, 231, 232], "action": [2, 3, 7, 8, 11, 12, 14, 20, 23, 28, 39, 42, 43, 44, 45, 46, 48, 55, 56, 57, 64, 65, 69, 71, 80, 86, 96, 97, 99, 100, 101, 102, 104, 105, 109, 110, 111, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 140, 141, 150, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 191, 194, 196, 199, 201, 204, 206, 210, 223, 225, 226, 228, 229, 231, 232, 233, 234], "shape": [2, 3, 17, 18, 19, 20, 21, 23, 28, 29, 39, 42, 44, 45, 46, 61, 72, 84, 92, 103, 104, 109, 112, 114, 117, 120, 132, 134, 137, 162, 177, 178, 186, 206, 225, 226, 228, 229, 231, 232, 233, 234], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 39, 42, 43, 44, 45, 48, 55, 56, 57, 58, 63, 64, 65, 72, 75, 83, 84, 86, 89, 92, 97, 111, 112, 113, 125, 126, 127, 129, 131, 132, 133, 134, 137, 138, 140, 141, 166, 167, 168, 191, 194, 196, 199, 201, 204, 225, 226, 228, 229, 231, 232, 233, 234], "import": [2, 3, 5, 6, 9, 11, 12, 14, 24, 26, 30, 40, 42, 43, 44, 45, 72, 83, 90, 97, 109, 111, 114, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 148, 166, 167, 168, 180, 183, 191, 194, 196, 199, 201, 204, 206, 225, 226, 228, 229, 231, 232, 233, 234], "match": [2, 3, 5, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 40, 42, 44, 45, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 98, 103, 109, 120, 134, 135, 156, 158, 160, 187, 226, 228, 231, 232, 233, 234], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 43, 44, 45, 61, 63, 64, 65, 66, 75, 79, 80, 85, 87, 89, 92, 96, 98, 99, 100, 101, 102, 108, 109, 112, 113, 118, 119, 131, 134, 135, 136, 137, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 188, 206, 223, 226, 232, 233, 234], "output": [2, 3, 11, 12, 14, 15, 22, 24, 25, 26, 39, 42, 43, 44, 45, 75, 85, 89, 92, 98, 99, 100, 104, 105, 108, 109, 114, 125, 128, 130, 131, 134, 135, 136, 137, 140, 141, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 177, 178, 225, 228, 229, 232, 233, 234], "send": [2, 3, 226, 232, 234], "receiv": [2, 3, 22, 39, 42, 44, 45, 85, 109, 226, 228], "parallelenv": [2, 3, 11, 12, 14, 15, 45, 207, 219, 225, 226, 228, 233, 234], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 22, 24, 25, 26, 39, 40, 42, 44, 45, 46, 75, 79, 85, 86, 90, 96, 98, 99, 100, 101, 102, 106, 109, 110, 135, 150, 151, 158, 177, 189, 192, 193, 206, 208, 209, 225, 226, 229, 231, 232, 233, 234], "commun": [2, 3, 220, 233], "spawn": [2, 3], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 40, 42, 43, 44, 45, 61, 67, 92, 134, 135, 142, 225, 226, 228, 229, 233], "check_env_spec": [2, 3, 219], "method": [2, 3, 11, 12, 14, 15, 22, 26, 33, 34, 35, 36, 39, 42, 44, 45, 60, 63, 72, 75, 76, 83, 86, 89, 97, 108, 125, 126, 127, 134, 135, 136, 142, 147, 176, 207, 223, 224, 225, 231, 232, 233], "saniti": [2, 3, 6, 92], "offer": [3, 6, 233], "handl": [3, 22, 39, 42, 44, 45, 90, 109, 186, 208, 209], "differ": [3, 11, 12, 14, 15, 22, 39, 42, 44, 45, 64, 86, 109, 111, 140, 141, 157, 162, 166, 167, 183, 186, 187, 208, 209, 223, 225, 226, 228, 229, 232, 233], "backend": [3, 6, 223, 225], "dm": [3, 233], "base": [3, 7, 8, 11, 12, 14, 15, 32, 38, 43, 88, 125, 152, 186, 191, 199, 201, 204, 223, 225, 227, 230, 233], "custom": [3, 4, 22, 39, 42, 44, 45, 210], "goal": [3, 225, 226], "abl": [3, 228, 232, 234], "even": [3, 7, 12, 33, 34, 35, 36, 40, 225, 232, 233], "simul": [3, 4, 6, 7, 57, 58, 97, 111, 225], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 75, 92, 99, 135, 136, 137, 178, 188, 223, 225, 226, 231, 233, 234], "box": [3, 17, 18, 19, 20, 21, 23, 28, 29], "wrapper": [3, 15, 26, 27, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 114, 128, 130, 131, 135, 139, 166, 210, 213, 214, 215, 225, 229, 233], "under": [3, 22, 39, 42, 44, 45, 134, 135, 225, 233], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 72, 83, 90, 191, 194, 196, 199, 201, 204, 206, 225, 226, 228, 229, 233, 234], "hope": 3, "imit": 3, "other": [3, 6, 7, 22, 33, 34, 35, 36, 39, 42, 43, 44, 45, 80, 90, 113, 114, 135, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 191, 199, 201, 204, 208, 209, 223, 225, 226, 229, 231, 233, 234], "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 33, 34, 39, 40, 42, 43, 44, 45, 48, 55, 56, 57, 61, 63, 64, 65, 72, 75, 78, 83, 84, 86, 89, 90, 96, 97, 98, 103, 105, 107, 108, 109, 111, 112, 113, 114, 117, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 149, 166, 167, 168, 178, 185, 191, 194, 196, 199, 201, 204, 206, 223, 225, 226, 228, 229, 231, 232, 233, 234], "nn": [3, 11, 12, 14, 22, 39, 42, 43, 44, 45, 63, 75, 83, 86, 89, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 111, 114, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 150, 151, 166, 167, 168, 201, 204, 206, 225, 226, 228, 229, 231, 234], "typic": [3, 7, 22, 39, 42, 44, 45, 223], "organis": 3, "allow": [3, 11, 12, 14, 15, 22, 23, 39, 42, 44, 45, 46, 96, 109, 162, 223, 225, 231, 232, 233], "gener": [3, 6, 7, 14, 25, 32, 40, 43, 72, 79, 80, 103, 117, 124, 132, 135, 138, 139, 158, 166, 169, 170, 173, 186, 216, 225, 226, 227, 228, 229, 231, 232, 233, 234], "arbitrari": [3, 23, 44, 45, 225, 226], "nest": [3, 19, 22, 39, 42, 44, 45, 46, 166, 167, 168, 223, 226, 232, 234], "attribut": [3, 22, 39, 42, 44, 45, 75, 82, 135, 226, 231], "batch_siz": [3, 7, 11, 12, 14, 19, 24, 25, 26, 27, 39, 41, 43, 48, 55, 56, 57, 58, 83, 97, 111, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 178, 191, 194, 196, 199, 201, 204, 225, 226, 228, 229, 231, 232, 233, 234], "togeth": [3, 11, 12, 14, 15, 125, 126, 127, 139, 231], "expect": [3, 6, 19, 22, 28, 39, 42, 43, 44, 45, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 92, 131, 134, 137, 147, 148, 156, 157, 189, 220, 223, 225, 233], "live": [3, 11, 12, 14, 15, 22, 24, 25, 26, 27, 39, 42, 43, 44, 45], "doe": [3, 24, 26, 30, 36, 112, 136, 137, 148, 156, 157, 165, 186, 223, 225, 232, 233], "actual": [3, 6, 11, 12, 15, 39, 42, 44, 45, 188, 225, 226], "respons": [3, 7, 186, 231, 233], "just": [3, 178, 223, 226, 231, 232, 233, 234], "retriev": [3, 24, 25, 26, 27, 39, 42, 44, 45, 46, 61, 72, 96, 97, 111, 135, 148, 156, 157, 166, 167, 168, 191, 194, 196, 199, 201, 204, 210, 223, 232, 233], "care": [3, 7, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 225, 226], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 39, 42, 44, 45, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 114, 125, 126, 127, 134, 135, 137, 139, 140, 219, 225, 226, 229, 231, 232], "desir": [3, 22, 39, 42, 44, 45, 46, 63, 75, 83, 86, 89, 95, 98, 109, 134, 135, 225, 226, 232], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 91, 98, 107, 109, 112, 121, 122, 134, 135, 225, 226, 231, 232, 233], "below": [3, 6, 11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 98, 107, 109, 121, 122, 134], "parametr": [3, 113, 135, 160, 225, 231], "hardwar": 3, "observation_spec": [3, 39, 43, 60, 61, 62, 63, 65, 66, 68, 70, 72, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 97, 111, 189, 206, 225, 228, 233], "compositespec": [3, 39, 41, 43, 82, 83, 97, 111, 124, 128, 130, 132, 137, 219, 225, 233], "pair": [3, 22, 39, 42, 44, 45, 46, 125, 135, 225, 226, 228, 232, 233], "input_spec": [3, 39, 43, 44, 45, 63, 65, 80, 85, 86, 87, 97, 111, 233], "action_spec": [3, 13, 39, 42, 43, 44, 45, 48, 55, 86, 119, 124, 126, 129, 132, 133, 140, 141, 206, 225, 226, 228, 229, 233, 234], "reward_spec": [3, 39, 43, 59, 63, 65, 77, 78, 79, 85, 86, 87, 97, 111, 233], "reward": [3, 11, 12, 14, 22, 28, 39, 42, 43, 44, 45, 46, 48, 55, 56, 57, 59, 63, 65, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 96, 97, 111, 139, 149, 150, 153, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 183, 184, 210, 223, 225, 226, 228, 229, 232, 233, 234], "importantli": [3, 135], "4": [3, 6, 11, 12, 14, 20, 23, 43, 49, 50, 51, 54, 60, 89, 90, 97, 98, 99, 100, 105, 106, 108, 109, 111, 114, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 143, 176, 225, 226, 228, 229, 232, 233, 234], "action_s": 3, "simpli": [3, 5, 66, 80, 225, 226, 233], "With": [3, 223, 232, 233], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 39, 42, 44, 45, 63, 75, 83, 86, 89, 109, 134, 136, 137, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 223, 225, 226, 231, 233], "stateless": [3, 44, 45, 85, 233], "set_se": [3, 11, 12, 14, 15, 39, 42, 43, 44, 45, 48, 55, 72, 86, 225, 233, 234], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 36, 39, 42, 44, 45, 69, 72, 82, 98, 109], "seed": [3, 11, 12, 14, 15, 39, 42, 43, 44, 45, 49, 56, 57, 86, 186, 225], "next": [3, 7, 11, 12, 14, 19, 22, 24, 25, 26, 39, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 90, 96, 97, 111, 119, 139, 158, 165, 166, 167, 168, 225, 226, 228, 229, 233, 234], "determinist": [3, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 105, 115, 119, 124, 130, 134, 135, 225, 226, 233], "preced": [3, 108, 231], "without": [3, 6, 8, 22, 39, 42, 44, 45, 126, 158, 165, 206, 220, 225, 226, 233], "risk": 3, "overlap": 3, "consecut": [3, 131, 226, 233], "still": [3, 8, 82, 128, 156, 225, 226, 228, 233], "reproduc": 3, "max_step": [3, 39, 42, 43, 44, 45, 56, 57, 82, 96, 225, 226, 233, 234], "maximum": [3, 11, 12, 14, 15, 18, 22, 33, 34, 35, 39, 42, 44, 45, 64, 77, 82, 120, 121, 122, 132, 160, 225, 226, 233, 234], "safemodul": [3, 43, 58, 97, 110, 125, 126, 127, 128, 130, 131, 132, 135, 137, 139, 142, 143, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 183, 192, 193, 206, 219, 234], "ani": [3, 4, 7, 19, 22, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 75, 86, 90, 92, 98, 109, 113, 134, 135, 136, 137, 157, 186, 213, 220, 225, 226, 233, 234], "compat": [3, 6, 10, 22, 36, 39, 42, 44, 45, 53, 90, 142, 162, 226, 234], "better": [3, 7, 226], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 109, 112, 231], "simultan": [3, 44, 45], "often": [3, 7, 155, 186, 233], "competit": 3, "advantag": [3, 7, 106, 147, 148, 156, 157, 159, 166, 167, 168, 169, 170, 171, 173, 174, 223, 225, 226, 233], "scale": [3, 72, 78, 105, 107, 114, 118, 119, 121, 122, 125, 126, 127, 132, 135, 137, 184, 189, 191, 199, 201, 204, 210, 225, 226, 231, 234], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 22, 26, 39, 42, 43, 44, 45, 60, 85, 86, 90, 98, 128, 129, 130, 135, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 186, 206, 223, 225, 226, 229, 231, 233], "own": [3, 11, 12, 15, 22, 39, 42, 44, 45, 226, 231], "As": [3, 39, 42, 44, 45, 135, 225, 226, 229, 233, 234], "inherit": [3, 110, 223, 231, 232], "enjoi": 3, "exact": 3, "Of": [3, 6, 220, 233], "cours": [3, 220, 233], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 39, 42, 43, 44, 45, 83, 86, 90, 131, 135, 226, 229], "count": [3, 40, 82, 131, 183, 188, 233], "def": [3, 10, 22, 39, 40, 42, 43, 44, 45, 97, 111, 138, 140, 143, 223, 225, 226, 228, 231, 232, 233, 234], "make_env": [3, 57, 90, 96, 192, 193, 225, 226, 233], "gymenv": [3, 4, 11, 12, 14, 15, 40, 53, 63, 72, 83, 86, 90, 191, 194, 196, 199, 201, 204, 206, 219, 225, 226, 229, 233, 234], "pendulum": [3, 11, 12, 14, 15, 40, 51, 52, 63, 72, 83, 86, 90, 206, 226, 233, 234], "v1": [3, 11, 12, 14, 40, 72, 83, 162, 171, 172, 174, 175, 226, 233, 234], "from_pixel": [3, 49, 50, 191, 199, 201, 204, 225, 226, 229, 233, 234], "9": [3, 6, 22, 90, 225, 226, 229, 232], "81": [3, 229], "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 26, 30, 39, 42, 43, 44, 45, 48, 55, 59, 61, 63, 64, 71, 72, 75, 83, 84, 86, 89, 90, 96, 97, 98, 99, 100, 102, 105, 107, 109, 111, 112, 113, 114, 118, 119, 120, 121, 122, 128, 130, 131, 134, 137, 144, 147, 148, 152, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 178, 184, 186, 206, 210, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234], "must": [3, 6, 11, 12, 14, 15, 19, 22, 33, 34, 35, 36, 39, 40, 42, 44, 45, 69, 72, 83, 86, 89, 98, 109, 134, 135, 140, 141, 169, 170, 171, 172, 173, 174, 175, 178, 183, 186, 187, 191, 194, 196, 199, 201, 204, 225, 226, 228, 231, 232, 234], "print": [3, 5, 6, 11, 12, 14, 19, 20, 22, 23, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 64, 65, 72, 83, 84, 90, 96, 98, 109, 114, 124, 125, 126, 127, 129, 130, 131, 133, 134, 137, 138, 140, 141, 143, 191, 194, 196, 199, 201, 204, 206, 223, 225, 226, 228, 229, 231, 232, 233, 234], "b": [3, 6, 16, 19, 112, 113, 166, 167, 168, 177, 229, 231, 232], "c": [3, 5, 6, 19, 72, 191, 194, 196, 199, 201, 204, 232], "d": [3, 24, 30, 135, 232, 234], "get": [3, 5, 6, 7, 36, 40, 44, 45, 61, 64, 65, 72, 84, 90, 124, 130, 135, 169, 170, 173, 217, 225, 226, 231, 233, 234], "forc": [3, 5, 6, 226], "variou": [3, 11, 12, 14, 15, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 208, 209, 225, 226, 233], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 42, 43, 44, 45, 46, 48, 49, 52, 55, 56, 57, 61, 63, 71, 72, 75, 78, 83, 84, 86, 89, 90, 92, 97, 98, 99, 109, 111, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 158, 159, 160, 162, 166, 167, 168, 171, 172, 174, 175, 180, 181, 183, 184, 186, 191, 194, 196, 199, 201, 204, 210, 223, 225, 226, 228, 229, 231, 232, 233, 234], "field": [3, 11, 12, 14, 15, 19, 22, 39, 42, 43, 44, 45, 48, 55, 56, 57, 83, 86, 97, 111, 125, 126, 127, 129, 131, 132, 133, 134, 137, 138, 140, 141, 189, 191, 194, 196, 199, 201, 204, 220, 226, 228, 229, 231, 232, 233, 234], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 55, 56, 57, 61, 71, 72, 75, 78, 83, 84, 86, 89, 90, 92, 96, 97, 98, 99, 100, 107, 109, 111, 112, 113, 121, 122, 128, 131, 134, 135, 136, 137, 142, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 166, 167, 168, 171, 172, 174, 175, 176, 177, 180, 181, 183, 184, 186, 191, 194, 196, 199, 201, 204, 210, 226, 228, 229, 233, 234], "500": [3, 186, 225, 226, 233, 234], "uint8": [3, 84, 226, 229, 233, 234], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 70, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 117, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 153, 154, 159, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 182, 183, 186, 189, 191, 192, 193, 194, 196, 199, 201, 204, 206, 208, 209, 210, 211, 212, 213, 214, 223, 225, 226, 231, 232, 233, 234], "is_shar": [3, 11, 12, 14, 19, 43, 48, 55, 56, 57, 83, 90, 97, 111, 125, 126, 127, 129, 131, 132, 133, 134, 137, 138, 140, 141, 191, 194, 196, 199, 201, 204, 226, 228, 229, 231, 232, 233, 234], "note": [3, 11, 12, 14, 15, 22, 39, 42, 44, 45, 90, 131, 135, 225, 226, 228, 231, 232, 233], "launch": 3, "quit": [3, 225, 226, 233], "mani": [3, 148, 156, 157, 158, 232, 233], "start": [3, 4, 11, 40, 96, 182, 225, 226, 233], "bottleneck": [3, 7], "why": [3, 225, 233], "so": [3, 5, 6, 9, 22, 39, 42, 44, 45, 90, 136, 137, 225, 233], "onc": [3, 6, 11, 12, 14, 15, 22, 39, 42, 44, 45, 86, 128, 130, 223, 225, 226, 233], "great": [3, 6, 7, 232, 234], "speedup": [3, 7, 233], "anoth": [3, 7, 39, 42, 44, 45, 85, 109, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 225, 228, 232, 233], "thing": [3, 6, 7, 226, 233], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 22, 39, 42, 44, 45, 63, 75, 80, 83, 85, 86, 89, 107, 109, 119, 121, 122, 134, 137, 146, 187, 208, 209, 210, 225, 226, 228, 229, 232, 233], "obj": [3, 134, 135, 136], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 67, 86, 92, 143, 225], "assert": [3, 5, 17, 18, 19, 20, 21, 23, 28, 29, 42, 90, 92, 96, 114, 166, 167, 168, 178, 185, 225, 226, 228, 231, 232, 233], "mismatch": [3, 232], "serialenv": [3, 219, 233], "mostli": [3, 15, 233], "purpos": [3, 6, 206, 229, 232, 233], "want": [3, 5, 6, 7, 72, 225, 229, 232, 233, 234], "assess": [3, 225], "subprocess": [3, 40], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 24, 26, 30, 39, 42, 44, 45, 86, 92, 109, 134, 135, 137, 146, 178, 187, 208, 209, 210, 223, 225, 231, 232, 233], "raw": [3, 107, 121, 122], "treat": 3, "To": [3, 5, 6, 22, 24, 25, 26, 39, 42, 44, 45, 90, 125, 126, 127, 131, 186, 225, 226, 229, 231, 233, 234], "logic": 3, "torchvis": [3, 233, 234], "transformedenv": [3, 40, 63, 71, 72, 83, 85, 90, 191, 194, 196, 199, 201, 204, 219, 225, 226, 228, 229, 233, 234], "primit": [3, 225, 226], "built": [3, 4, 6, 202, 206, 207, 210, 233], "base_env": [3, 83, 225, 226, 229, 233, 234], "totensorimag": [3, 196, 219, 226, 233, 234], "in_kei": [3, 11, 12, 14, 43, 59, 60, 61, 62, 65, 68, 70, 72, 73, 75, 76, 77, 78, 79, 84, 85, 89, 90, 97, 111, 124, 125, 126, 127, 132, 134, 135, 137, 138, 142, 143, 149, 150, 166, 167, 168, 176, 177, 201, 204, 206, 225, 226, 228, 229, 231, 233, 234], "resiz": [3, 219, 226, 233], "64": [3, 99, 100, 106, 225, 226, 228, 229, 233, 234], "By": [3, 23, 42, 44, 45, 135, 183, 210, 229, 232, 233], "now": [3, 6, 225, 228, 229, 231, 232, 233], "appar": [3, 180], "bring": [3, 233], "signific": [3, 4, 7, 233], "kind": [3, 28, 96], "consult": 3, "achiev": [3, 22, 39, 42, 44, 45, 223, 231, 232, 233], "interest": [3, 44, 45, 135, 233], "abov": [3, 6, 22, 39, 42, 44, 45, 107, 121, 122, 146, 223, 225, 226, 233], "resize_par": 3, "sinc": [3, 4, 6, 22, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 225, 226, 229, 233, 234], "out_kei": [3, 11, 12, 14, 43, 44, 45, 59, 61, 68, 73, 75, 76, 77, 79, 84, 85, 89, 97, 111, 124, 125, 126, 127, 132, 134, 135, 137, 138, 140, 141, 142, 143, 166, 167, 168, 183, 206, 225, 228, 229, 231, 233, 234], "keyword": [3, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 135, 207, 225, 231, 233], "easi": [3, 4, 226, 229, 232, 233], "root": [3, 107, 121, 122, 233], "graph": [3, 7, 163, 164], "inv": [3, 64], "appli": [3, 22, 24, 25, 26, 27, 39, 42, 44, 45, 64, 69, 86, 121, 166, 182, 223, 225, 226, 231, 233, 234], "revers": 3, "order": [3, 14, 22, 23, 24, 25, 26, 27, 39, 42, 44, 45, 86, 134, 136, 137, 231], "chain": [3, 24, 25, 26, 63, 98, 137, 233], "taken": [3, 39, 42, 44, 45, 226], "includ": [3, 6, 8, 22, 33, 34, 35, 36, 39, 42, 43, 44, 45, 86, 90, 188, 223, 225, 226, 232, 233], "invers": [3, 145], "through": [3, 4, 7, 14, 44, 45, 109, 135, 136, 137, 144, 225, 226, 228, 229, 231, 233], "in_keys_inv": [3, 65, 85, 225, 228, 233], "append_transform": [3, 24, 25, 26, 27, 75, 83, 225, 233, 234], "doubletofloat": [3, 191, 194, 199, 201, 204, 219, 225, 228], "float32": [3, 11, 12, 14, 19, 24, 28, 30, 43, 48, 55, 56, 57, 65, 72, 83, 84, 97, 111, 125, 126, 127, 129, 131, 132, 133, 134, 137, 138, 140, 141, 191, 194, 196, 199, 201, 204, 226, 228, 229, 231, 232, 233, 234], "float64": [3, 22, 39, 42, 44, 45, 56, 57, 63, 75, 83, 86, 89, 134, 228, 233], "regist": [3, 22, 23, 39, 42, 44, 45, 63, 81, 85, 86, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 223, 231], "log": [3, 7, 103, 117, 122, 135, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 180, 181, 183, 186, 206, 223, 226, 231, 234], "tool": [4, 233], "context": [4, 7, 22, 39, 40, 42, 44, 45, 112, 163, 164, 166, 169, 170, 173, 183, 225, 226, 229, 231], "real": [4, 135], "world": [4, 43, 139, 153, 233], "system": 4, "robot": [4, 6, 75, 89], "game": 4, "adopt": [4, 225, 233], "interact": [4, 6, 7, 14, 135, 233], "histor": 4, "wa": [4, 6, 39, 42, 44, 45, 86, 155, 161, 225, 226, 228, 234], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": 4, "farama": 4, "foundat": 4, "document": [4, 6, 22, 39, 42, 44, 45, 86, 234], "further": 4, "detail": [4, 5, 6, 22, 39, 42, 44, 45, 86, 140, 147, 151, 157, 194, 220, 228, 232], "usag": [4, 6, 89, 160], "known": [4, 6, 7, 225], "gone": 4, "bc": [4, 234], "break": [4, 11, 12, 14, 22, 39, 42, 44, 45, 90, 225, 226, 231, 234], "chang": [4, 6, 22, 33, 34, 35, 36, 39, 42, 44, 45, 86, 90, 225, 229, 232, 233], "face": [4, 7, 8, 226, 233], "modif": [4, 19, 22, 39, 42, 44, 45, 225, 232], "practic": [4, 7, 107, 121, 122, 146, 220, 226, 229, 233], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 227, 228, 229, 230, 231, 232], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 92, 134, 135], "13": [4, 9, 10, 226, 231], "between": [4, 11, 12, 14, 15, 22, 39, 42, 44, 45, 64, 71, 77, 84, 86, 92, 98, 109, 135, 153, 154, 156, 162, 166, 183, 186, 225, 226, 231, 232, 233], "howev": [4, 6, 22, 39, 42, 44, 45, 79, 82, 86, 225, 226, 232, 233], "around": [4, 6, 15, 26, 27, 43, 135, 166, 233], "construct": [4, 22, 39, 42, 44, 45, 119, 135, 186, 191, 199, 231, 233], "automat": [4, 39, 42, 44, 45, 72, 124, 132, 226, 234], "wrap": [4, 11, 12, 14, 15, 22, 39, 42, 44, 45, 92, 125, 126, 127, 139, 225, 226, 231, 233], "best": [4, 8, 226, 234], "gymwrapp": [4, 42, 219, 234], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 42, 43, 44, 45, 46, 61, 62, 64, 66, 71, 75, 79, 80, 82, 85, 86, 89, 90, 98, 108, 109, 128, 130, 131, 134, 135, 136, 137, 143, 144, 146, 153, 165, 166, 167, 168, 174, 175, 182, 186, 187, 189, 191, 199, 201, 204, 206, 210, 220, 225, 226, 228, 231, 232, 233, 234], "you": [4, 5, 6, 7, 9, 22, 39, 42, 44, 45, 90, 220, 225, 226, 228, 229, 232, 233, 234], "feel": [4, 220, 234], "free": [4, 6, 147, 153, 157, 223, 234], "gladli": 4, "instruct": [5, 6, 9], "prepar": 5, "conda": [5, 6, 220], "assum": [5, 19, 23, 27, 42, 44, 45, 75, 79, 83, 89, 108, 171, 172, 174, 175, 177, 225, 226, 228], "let": [5, 6, 22, 39, 42, 44, 45, 183, 225, 226, 228, 229, 231, 232, 233, 234], "n": [5, 6, 17, 20, 22, 23, 39, 42, 44, 45, 60, 64, 111, 135, 147, 165, 223, 225, 226, 232, 233], "7": [5, 9, 20, 23, 97, 98, 108, 109, 111, 225, 226, 229, 234], "cmake": 5, "14": [5, 10, 72, 226, 229], "activ": [5, 6, 8, 98, 105, 109, 157, 234], "sim": 5, "bullet": 5, "physic": [5, 6, 223, 225], "headless": [5, 6], "mode": [5, 14, 22, 39, 42, 44, 45, 86, 90, 93, 95, 103, 107, 117, 120, 121, 122, 135, 183, 225, 226, 233, 234], "cluster": [5, 6, 7, 220], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 108, 143], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 22, 39, 42, 44, 45, 81, 225, 233], "command": [5, 6, 9, 233], "more": [5, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 39, 42, 44, 45, 89, 91, 109, 112, 114, 128, 130, 134, 140, 147, 151, 157, 166, 169, 170, 173, 182, 194, 220, 223, 225, 226, 228, 229, 231, 232, 233], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 219], "_has_habitat": 5, "_env": [5, 233], "available_env": [5, 47, 48, 49, 50, 51, 52, 54, 55, 233], "startswith": 5, "oserror": 5, "could": [5, 226, 229, 232, 233], "load": [5, 11, 12, 14, 15, 24, 25, 26, 50, 210, 223, 226], "libllvmlit": 5, "solut": [5, 6, 7, 8, 220, 223, 234], "ionstal": 5, "miss": [5, 6, 10, 19, 22, 39, 42, 44, 45, 86, 136, 137, 220], "add": [5, 22, 24, 25, 26, 27, 37, 38, 39, 42, 44, 45, 112, 147, 182, 225, 226, 232, 234], "pointer": [5, 40, 232], "replac": [5, 6, 22, 64, 226], "path": [5, 6, 22, 33, 39, 42, 44, 45, 75, 89, 111, 186, 223], "env_nam": [5, 47, 49, 51, 53, 54, 225, 233], "llvmlite": 5, "config": [5, 6, 189, 191, 192, 193, 194, 196, 199, 201, 202, 204, 207], "var": [5, 6, 22, 39, 42, 44, 45, 86], "ld_preload": [5, 6], "python3": [5, 6, 9], "8": [5, 6, 48, 98, 99, 100, 106, 109, 125, 126, 127, 132, 134, 137, 226, 229, 231, 233, 234], "site": [5, 6], "deactiv": [5, 6], "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 22, 39, 42, 44, 45, 86], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "link": [5, 6], "right": [5, 6, 108, 225, 226, 233], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 22, 39, 42, 44, 45, 49, 66, 79, 80, 86, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 181, 182, 191, 194, 196, 199, 201, 204, 211, 213, 214, 215, 217, 223, 225, 226, 231, 233], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 125, 126, 127, 228, 233], "joint": [6, 226], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 74, 75, 89, 125, 126, 127, 225], "develop": [6, 234], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 22], "area": 6, "demand": [6, 233], "fast": [6, 8, 48, 158, 225, 226], "accur": [6, 225], "articul": 6, "recent": [6, 233], "acquir": [6, 225], "access": [6, 7, 22, 39, 42, 44, 45, 46, 75, 210, 220, 232], "whomev": 6, "licenc": 6, "incorpor": [6, 225], "make": [6, 22, 36, 39, 42, 44, 45, 52, 55, 72, 75, 92, 96, 112, 135, 157, 193, 210, 225, 226, 228, 229, 231, 232, 233, 234], "relianc": 6, "obsolet": 6, "seri": [6, 7, 23, 37, 38, 45, 71, 85, 177, 233], "keep": [6, 12, 72, 75, 89, 90, 131, 180, 186, 226, 232, 233, 234], "legaci": 6, "capabl": [6, 223, 225, 228, 229, 233], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 225], "gpu": [6, 7, 22, 39, 42, 44, 45, 233], "our": [6, 7, 225, 226, 228, 229, 231, 232, 234], "advic": [6, 233], "sudo": [6, 220], "enabl": [6, 7, 131, 183], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 44, 85, 89, 149, 223, 225, 233], "awar": [6, 33, 34, 35, 36], "fact": [6, 7, 226, 229, 233], "indent": 6, "workflow": [6, 125, 126, 127], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 22, 39, 40, 42, 44, 45, 86, 98, 109, 125, 126, 127, 183, 225, 229, 231, 233], "tell": 6, "variabl": [6, 7, 20, 23, 111, 125, 126, 127, 158, 223, 231], "mujoco_gl": 6, "pyopengl_platform": 6, "pre": [6, 22, 34, 39, 42, 44, 45, 75, 89, 233], "binari": [6, 17, 23, 59, 140, 141], "releas": [6, 9, 22, 39, 42, 44, 45, 86, 234], "need": [6, 7, 9, 22, 36, 39, 42, 44, 45, 63, 81, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 112, 114, 115, 116, 118, 119, 128, 130, 131, 134, 144, 146, 158, 165, 177, 186, 210, 225, 231, 232, 233, 234], "These": [6, 233], "instead": [6, 7, 20, 22, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 210, 225, 226, 231, 233], "refer": [6, 22, 39, 42, 44, 45, 86, 90, 97, 105, 111, 115, 116, 118, 119, 140, 147, 151, 152, 153, 154, 157, 166, 169, 170, 173, 194], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 225, 226, 228, 229, 231, 232, 233, 234], "tag": [6, 177, 210, 213], "earlier": [6, 11, 12, 14, 15, 225], "roboti": 6, "u": [6, 9, 225, 229, 231, 233, 234], "download": [6, 9, 75, 89, 225, 226, 227, 228, 229, 231, 232, 233, 234], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 42, 97, 225, 226], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": [6, 229], "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 232], "hard": [6, 155, 226, 233], "later": [6, 102, 135, 225, 226], "try": [6, 7, 143, 226, 232, 233, 234], "nativ": [6, 8, 39, 42, 44, 45, 60, 231], "local": [6, 9, 14, 22, 39, 42, 44, 45, 86, 213], "modifi": [6, 7, 22, 39, 42, 44, 45, 63, 75, 83, 85, 86, 89, 131, 134, 188, 191, 199, 201, 204, 225, 231], "nvidia": 6, "driver": 6, "older": 6, "hack": 6, "line": [6, 22, 39, 42, 44, 45], "adatp": 6, "script": [6, 191, 194, 196, 199, 201, 204, 206, 210, 223, 225, 226, 228, 229, 231, 232, 233, 234], "go": [6, 229, 231, 233], "unnot": 6, "until": 6, "complet": [6, 8, 42, 220, 226, 228], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "troubleshoot": 6, "gl": 6, "h": [6, 62, 76, 84, 111, 177], "eglshim": 6, "10": [6, 19, 40, 43, 56, 57, 84, 97, 108, 111, 130, 131, 158, 159, 160, 166, 167, 168, 178, 223, 225, 226, 229, 230, 231, 232, 233, 234], "fatal": 6, "No": 6, "directori": [6, 33, 213, 223], "sure": [6, 36, 96, 210, 225, 231, 232, 233, 234], "glu": 6, "38": [6, 226, 229], "disappear": [6, 228], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "__init__": [6, 43, 97, 111, 138, 140, 143, 223, 231, 233], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 22, 39, 42, 44, 45, 86, 225, 232, 233], "job": [6, 232], "schedul": [6, 183], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": [6, 92], "opengl": 6, "global": [6, 135, 223, 225, 231], "cuda_visible_devic": 6, "id": [6, 16, 131, 158, 201, 216], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 49, 62, 75, 84, 89, 109, 226, 229, 232, 233], "black": 6, "read": [6, 11, 12, 14, 15, 33, 34, 35, 36, 42, 44, 45, 46, 85, 117, 125, 126, 127, 134, 135, 137, 139, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 167, 168, 177, 186, 191, 199, 201, 204, 225, 226, 228, 229, 231, 233], "onscreen": 6, "101": 6, "displai": [6, 186, 223, 226], "correctli": [6, 22, 39, 42, 44, 45], "cannot": [6, 19, 232], "scratch": [7, 225, 226], "loop": [7, 11, 12, 14, 15, 42, 96, 186, 223, 225, 228, 232], "sketch": [7, 223], "ob": [7, 19, 65, 72, 84, 138, 166, 167, 168, 225, 228, 233, 234], "_": [7, 40, 61, 64, 65, 72, 84, 90, 134, 146, 166, 167, 168, 225, 226, 231, 234], "rang": [7, 10, 20, 40, 90, 96, 156, 223, 225, 226, 231, 232, 234], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 147, 157, 178, 210], "n_data_per_train": 7, "no_grad": [7, 22, 39, 42, 44, 45, 225, 226], "append": [7, 24, 25, 26, 27, 40, 96, 225, 226, 229, 232, 234], "replay_buff": [7, 30, 31, 32, 33, 34, 35, 36, 37, 38, 206, 225, 226], "extend": [7, 24, 25, 26, 27, 37, 38, 223, 225, 226, 229, 234], "loss": [7, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 182, 186, 190, 195, 197, 198, 200, 201, 203, 206, 223, 225, 226, 232, 234], "offlin": [7, 11, 12, 14, 15, 223, 229, 234], "loss_fn": [7, 234], "backward": [7, 22, 39, 42, 44, 45, 90, 225, 226, 232], "zero_grad": [7, 22, 39, 42, 44, 45, 223, 225, 226, 232], "backpropag": [7, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160], "decor": [7, 10], "differenti": [7, 166, 167, 168, 225], "pai": [7, 226], "attent": [7, 226, 231], "understand": [7, 225, 226], "denomin": 7, "probabl": [7, 103, 117, 122, 135, 226, 231, 234], "artifact": 7, "numer": [7, 90, 107, 121, 122, 134, 135, 232, 233], "misconcept": 7, "directli": [7, 43, 210, 226], "save": [7, 22, 39, 42, 44, 45, 176, 186, 223, 226], "alreadi": [7, 22, 39, 42, 44, 45, 135, 225, 226], "freed": 7, "appear": [7, 23], "compuat": 7, "twice": [7, 160], "fix": [7, 83, 160, 233], "retain_graph": 7, "lead": [7, 9, 10, 19, 107, 121, 122, 234], "discuss": [7, 8], "inplac": [7, 22, 39, 42, 44, 45, 225], "flag": [7, 24, 25, 26, 27, 169, 170, 171, 172, 173, 174, 175, 229], "reason": [7, 22, 39, 42, 44, 45, 75, 225, 226], "updat": [7, 11, 12, 14, 15, 22, 30, 39, 42, 43, 44, 45, 86, 88, 90, 97, 111, 131, 134, 135, 147, 155, 157, 161, 166, 167, 168, 183, 186, 187, 192, 193, 205, 206, 223, 225, 226, 231, 233, 234], "critic": [7, 125, 147, 148, 156, 157, 159, 160, 231], "accumul": 7, "onto": [7, 23, 128, 130, 134, 135], "separ": [7, 11, 12, 15, 16, 75, 89, 149, 158, 160, 225, 233], "exclud": [7, 44, 45, 66, 225], "forward": [7, 22, 39, 42, 44, 45, 63, 75, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 114, 115, 116, 118, 119, 128, 130, 131, 134, 135, 138, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 167, 168, 225, 226, 231, 234], "submodul": [7, 22, 39, 42, 44, 45], "param": [7, 22, 39, 42, 43, 44, 45, 103, 120, 132, 133, 134, 137, 138, 140, 141, 161, 164, 166, 167, 168, 194, 225, 226, 229, 231, 234], "grad": [7, 22, 39, 42, 44, 45, 226], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 63, 75, 83, 86, 89, 114, 134, 225], "norm": [7, 186, 226], "strictli": [7, 22, 39, 42, 44, 45, 86], "neg": [7, 11, 12, 14, 15, 24, 26, 30, 152, 225], "ask": [7, 229, 233], "core": [7, 191, 194, 196, 199, 201, 204, 223, 234], "much": [7, 24, 26, 30, 156, 157, 232, 233], "upon": 7, "factor": [7, 22, 107, 113, 121, 122, 131, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 225, 226, 233], "fit": [7, 10, 72, 223], "everi": [7, 11, 12, 15, 19, 22, 23, 36, 39, 42, 44, 45, 63, 81, 85, 87, 88, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 186, 223, 225, 226, 232], "bottlneck": 7, "affect": [7, 22, 39, 42, 44, 45, 85, 86], "brax": [7, 47, 48, 233], "jax": 7, "improperli": 7, "item": [7, 11, 67, 149, 150, 178, 223, 225, 226, 232], "underli": 7, "manipul": [7, 75, 233], "tedeiou": 7, "priorit": [7, 24, 26, 30, 149, 150, 158, 160, 225, 226], "amount": [7, 44, 45, 131], "isn": [7, 134], "contigu": [7, 232, 234], "costli": 7, "concaten": [7, 21, 60, 61, 72, 85, 109, 137, 225, 226, 232, 233], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 42, 44, 45, 61, 82, 83, 98, 109, 131, 144, 189, 210, 220, 223, 225, 231, 232, 233], "fulli": [7, 22, 39, 42, 44, 45, 226], "frequent": 7, "techniqu": [7, 226], "target": [7, 22, 39, 40, 42, 44, 45, 85, 134, 135, 149, 150, 151, 154, 155, 156, 158, 160, 161, 165, 166, 167, 168, 188, 205, 206, 223, 225, 226], "program": [7, 233], "spin": [8, 233], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 232], "curat": 8, "succinct": 8, "summari": [8, 72, 90], "reddit": 8, "reagent": 8, "product": [8, 208, 209], "orient": [8, 233], "stabl": [8, 9, 225], "baselines3": 8, "tf": 8, "agent": [8, 113], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 43, 233, 234], "dopamin": 8, "prototyp": 8, "salina": 8, "flexibl": [8, 223, 231, 233], "simpl": [8, 22, 23, 39, 42, 44, 45, 99, 135, 159, 166, 225, 226, 232, 233], "sequenti": [8, 22, 39, 42, 44, 45, 136, 137, 229, 231, 232, 233], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 234], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 23, 28, 64, 116, 128, 130, 131, 134, 135, 137, 140, 141, 225, 233, 234], "mbrl": [8, 43], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 226], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 225, 226, 227, 228, 229, 231, 232, 233, 234], "24": [9, 226], "11": [9, 20, 23, 40, 84, 97, 111, 226, 229], "2022": [9, 234], "12": [9, 226, 232], "pip": [9, 233, 234], "solv": [9, 220, 225, 226], "pip3": 9, "extra": [9, 22, 39, 42, 44, 45, 90], "url": 9, "org": [9, 24, 30, 60, 75, 99, 100, 101, 102, 105, 106, 111, 113, 115, 116, 118, 119, 131, 140, 147, 151, 152, 153, 154, 155, 157, 159, 160, 161, 166, 169, 170, 173, 191, 194, 199, 204, 229], "whl": 9, "latest": [9, 234], "There": [9, 223, 226, 233], "upgrad": 9, "previou": [9, 22, 119, 225, 231, 233], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 33, 39, 41, 42, 44, 45, 49, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 84, 85, 86, 89, 90, 93, 95, 97, 98, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 113, 114, 124, 128, 129, 130, 131, 132, 134, 135, 138, 140, 141, 142, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 176, 177, 181, 182, 183, 185, 189, 191, 194, 199, 201, 202, 204, 210, 211, 212, 213, 214, 215, 216, 217, 225], "from_vers": 10, "to_vers": 10, "explicit": [10, 108, 225, 226], "intersect": 10, "longer": [10, 226], "fun": [10, 231, 232], "self": [10, 22, 39, 42, 43, 44, 45, 63, 75, 83, 86, 89, 97, 111, 128, 130, 134, 138, 140, 143, 223, 231, 232, 234], "x": [10, 16, 19, 22, 84, 98, 104, 106, 108, 109, 111, 140, 143, 144, 146, 169, 170, 171, 172, 173, 174, 175, 177, 186, 226, 231, 234], "doesn": 10, "create_env_fn": [11, 12, 14, 15, 40, 44, 45, 225, 234], "sequenc": [11, 12, 14, 15, 19, 21, 24, 25, 37, 38, 59, 60, 61, 62, 65, 68, 70, 72, 73, 76, 77, 78, 79, 84, 85, 90, 98, 103, 109, 117, 124, 132, 135, 136, 137, 138, 176, 177, 182, 185, 186, 191, 199, 201, 204, 226, 228, 231, 233], "callabl": [11, 12, 14, 15, 22, 24, 25, 26, 39, 40, 42, 43, 44, 45, 146, 192, 193, 208, 209, 210], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 39, 42, 44, 45, 58, 63, 72, 75, 78, 86, 89, 90, 98, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 120, 121, 122, 131, 132, 134, 135, 136, 142, 143, 145, 150, 151, 155, 158, 160, 161, 166, 167, 168, 191, 192, 193, 194, 199, 201, 202, 204, 206, 207, 208, 209, 210], "tensordictbas": [11, 12, 14, 15, 16, 19, 22, 26, 27, 39, 41, 42, 44, 45, 46, 60, 63, 66, 71, 79, 80, 81, 82, 83, 85, 87, 88, 90, 91, 96, 97, 110, 111, 128, 130, 131, 134, 135, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 165, 166, 167, 168, 186], "total_fram": [11, 12, 14, 15, 186, 188, 206, 223, 225, 226, 234], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 49, 56, 58, 60, 61, 62, 63, 64, 68, 69, 71, 72, 75, 76, 81, 82, 86, 87, 89, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 128, 130, 131, 133, 134, 135, 140, 141, 147, 148, 149, 152, 153, 154, 156, 157, 158, 160, 176, 177, 178, 179, 180, 183, 186, 187, 191, 194, 199, 201, 202, 204, 208, 209, 210], "create_env_kwarg": [11, 12, 14, 15, 40, 44, 45, 225], "dict": [11, 12, 14, 15, 19, 20, 22, 39, 40, 42, 44, 45, 86, 90, 98, 99, 100, 101, 102, 106, 108, 109, 135, 183, 192, 193, 194, 201, 204, 208, 209, 210, 213, 217, 233], "200": [11, 12, 14, 15, 22, 39, 42, 44, 45, 56, 57, 99, 100, 105, 118, 119, 225], "postproc": [11, 12, 14, 15, 225, 226], "pin_memori": [11, 14, 15, 24, 25, 26, 44, 45, 74, 225, 234], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 43, 44, 45, 63, 64, 72, 75, 83, 86, 89, 96, 97, 105, 111, 131, 134, 135, 136, 137, 140, 141, 146, 149, 150, 165, 166, 167, 168, 179, 183, 206, 223, 225, 226, 231, 233], "datacollector": [11, 12, 14, 15, 135], "synchron": [11, 208, 209], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 23, 28, 29, 128, 131, 134, 135, 142, 225, 234], "env_mak": [11, 12, 14, 206, 233], "linear": [11, 12, 14, 22, 39, 42, 43, 44, 45, 63, 75, 83, 86, 89, 97, 98, 109, 111, 112, 113, 114, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 143, 166, 167, 168, 206, 228, 229, 231, 234], "2000": [11, 12, 14, 225], "50": [11, 12, 14], "enumer": [11, 12, 14, 22, 39, 42, 44, 45, 225, 226, 234], "step_count": [11, 12, 14, 82, 225, 226, 234], "traj_id": [11, 12, 14, 16, 225, 226, 234], "shutdown": [11, 12, 14, 15, 225, 234], "del": [11, 12, 14, 225, 234], "bound": [11, 12, 14, 15, 18, 19, 22, 39, 42, 44, 45, 90, 118, 119, 131, 134, 135, 233], "total": [11, 12, 14, 15, 42, 148, 156, 157, 178, 180, 183, 186, 188, 189, 225, 226, 228, 229, 230, 231, 232, 233, 234], "greater": [11, 12, 15, 225, 226, 234], "close": [11, 12, 14, 15, 42, 148, 156, 157, 225, 234], "signal": [11, 12, 15, 225], "sent": [11, 12, 15, 33, 34, 44, 45, 90, 226, 232], "server": [11, 12, 15], "per": [11, 12, 14, 15, 44, 105, 186, 208, 209, 225, 226, 234], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 231], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 22, 225], "track": [11, 12, 14, 15, 79, 90, 131, 180, 213, 225, 226, 232], "independ": [11, 12, 14, 15, 85, 160, 223, 225, 234], "ignor": [11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 66, 80, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 231, 232, 233], "length": [11, 12, 14, 15, 17, 44, 45, 97, 98, 99, 101, 104, 109, 111, 134, 178, 225, 226, 232, 233], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 233], "accord": [11, 12, 14, 15, 46, 72, 78, 107, 112, 118, 121, 122, 231, 232], "split_trajectori": [11, 12, 14, 15, 219], "inform": [11, 12, 14, 15, 22, 39, 40, 42, 44, 45, 98, 109, 223, 226], "place": [11, 12, 14, 15, 19, 22, 39, 40, 42, 44, 45, 46, 63, 75, 83, 86, 89, 90, 134, 187, 188, 226, 231], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 44, 45, 64, 85, 96, 107, 121, 122], "origin": [11, 12, 14, 15, 75, 86, 89, 134, 135, 155, 157, 201, 204, 228, 232, 233], "long": [11, 12, 14, 15, 20, 23, 64, 226, 232], "truncat": [11, 12, 14, 15, 122, 233], "help": [11, 12, 14, 15, 22, 39, 42, 44, 45, 220, 225], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 22, 39, 42, 44, 45, 86, 90, 223], "state_dict": [11, 12, 14, 15, 22, 39, 42, 44, 45, 86, 90, 210, 223, 233], "ordereddict": [11, 12, 14, 15, 22, 39, 42, 44, 45, 86, 90], "form": [11, 12, 15, 22, 24, 25, 26, 39, 42, 44, 45, 90, 146, 148, 156, 157, 186], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 39, 42, 44, 45, 86], "increment": [11, 12, 14, 15, 39, 42, 44, 45, 82, 156], "last": [11, 12, 14, 15, 22, 68, 72, 98, 108, 109, 115, 128, 130, 226, 229, 233, 234], "env_fn": [11, 12, 14, 15, 40, 208, 209], "v0": [11, 12, 15, 42, 51, 52, 54, 55, 63, 86, 90, 206], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 55, 72, 98, 103, 108, 109, 120, 138, 191, 194, 196, 199, 201, 204, 225, 226, 229, 231, 232, 233, 234], "out_se": [11, 12, 14, 15, 233], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 22, 33, 34, 39, 40, 42, 43, 44, 45, 75, 81, 86, 87, 88, 89, 98, 109, 124, 125, 129, 133, 180, 186, 210, 215], "kwarg": [12, 14, 15, 19, 22, 33, 34, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 75, 81, 83, 86, 87, 88, 89, 98, 99, 100, 101, 102, 106, 107, 109, 110, 117, 120, 122, 124, 125, 129, 132, 133, 135, 148, 156, 165, 177, 180, 186, 191, 192, 193, 194, 199, 201, 204, 207, 208, 209, 213, 215, 217], "envcreat": [14, 206, 207, 210, 219, 225, 226, 233, 234], "return_same_td": 14, "stop": [14, 39, 42, 44, 45, 233, 234], "equat": [14, 131, 146, 148, 161], "exce": 14, "batcher": 14, "cautious": [14, 157], "ad": [14, 22, 24, 25, 26, 27, 30, 39, 42, 44, 45, 46, 79, 86, 112, 113, 131, 148, 156, 157, 225, 233], "whole": [14, 22, 39, 42, 44, 45, 86, 178, 226], "content": [14, 98, 109, 226, 232, 234], "ident": [14, 44, 45, 208, 209, 225, 231, 232], "yield": [14, 22, 39, 42, 44, 45], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 22, 24, 25, 26, 27, 39, 42, 44, 45, 46, 60, 61, 75, 84, 89, 98, 108, 109, 137, 151, 158, 171, 172, 174, 175, 201, 210, 225, 226, 228, 229, 231], "paradigm": 15, "prefer": [15, 80], "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 61, 64, 72, 97, 108, 130, 131, 144, 166, 167, 168, 231, 232, 234], "max": [16, 23, 64, 120, 121, 122, 148, 158, 160, 225], "durat": [16, 226], "int64": [17, 20, 21, 23, 129, 131, 133, 140, 141, 196, 226, 233, 234], "discret": [17, 20, 21, 23, 64, 117, 140, 141, 151], "assert_is_in": [17, 18, 19, 20, 21, 23, 28, 29], "belong": [17, 18, 19, 20, 21, 23, 28, 29], "otherwis": [17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 64, 72, 83, 86, 90, 107, 121, 122, 153, 160, 183, 223, 225, 233], "encod": [17, 18, 19, 20, 21, 23, 28, 29, 64, 116, 117, 118, 129, 133, 140, 141, 146, 231], "val": [17, 18, 19, 20, 21, 23, 28, 29, 234], "ndarrai": [17, 18, 19, 20, 21, 23, 28, 29, 42, 131], "np": [17, 18, 19, 20, 21, 23, 28, 29, 42, 225], "slice": [17, 18, 19, 20, 21, 23, 28, 29, 232], "tensor_to_index": [17, 18, 19, 20, 21, 23, 28, 29], "is_in": [17, 18, 19, 20, 21, 23, 28, 29, 233], "project": [17, 18, 19, 20, 21, 23, 28, 29, 64, 128, 130, 131, 134, 135, 226, 233, 234], "back": [17, 18, 19, 20, 21, 23, 28, 29, 134, 135, 225], "rand": [17, 18, 19, 20, 21, 23, 28, 29, 43, 48, 55, 97, 111, 233, 234], "uniform": [17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30], "unbound": [17, 18, 19, 20, 21, 23, 28, 29, 232], "to_numpi": [17, 18, 19, 20, 21, 23, 28, 29], "transformed_in": [17, 18, 19, 20, 21, 23, 28, 29, 85, 86, 114, 120, 210], "type_check": [17, 18, 19, 20, 21, 23, 28, 29], "fill": [17, 18, 19, 20, 21, 23, 28, 29, 83, 229, 232], "minimum": [18, 77, 105, 114, 120, 121, 122, 132, 144, 146, 160, 178, 225, 233, 234], "float": [18, 20, 22, 23, 24, 26, 29, 30, 39, 42, 44, 45, 63, 65, 72, 75, 77, 78, 83, 84, 86, 89, 90, 103, 105, 107, 111, 112, 113, 118, 119, 120, 122, 128, 130, 131, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 225, 226, 233], "upper": 18, "composit": 19, "unnam": 19, "tupl": [19, 22, 24, 25, 26, 27, 39, 42, 44, 45, 58, 72, 99, 108, 109, 114, 149, 152, 166, 167, 168, 195, 197, 200, 203, 232], "effect": [19, 22, 39, 42, 44, 45, 79, 86, 186, 226, 233], "pixels_spec": 19, "boundedtensorspec": [19, 125, 126, 127, 130, 131, 132, 219, 233, 234], "32": [19, 56, 57, 98, 99, 100, 106, 109, 115, 116, 225, 226, 229, 230, 233, 234], "observation_vector_spec": 19, "33": [19, 22, 39, 42, 44, 45, 98, 109], "composite_spec": 19, "observation_vector": [19, 61, 191, 194, 199, 201, 204, 225], "within": [19, 22, 27, 39, 42, 44, 45, 63, 81, 85, 87, 88, 90, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 234], "randn": [19, 72, 108, 114, 124, 125, 126, 127, 129, 132, 133, 134, 137, 138, 140, 141, 166, 167, 168, 185, 231, 232, 233, 234], "td_project": 19, "yield_nesting_kei": 19, "keysview": 19, "selected_kei": [19, 44, 45, 80, 225], "altern": [20, 146, 226, 232], "onehottensorspec": 20, "categor": [20, 23, 117, 140, 141], "larg": 20, "action_valu": [20, 23, 129, 133, 140, 141, 196, 226], "arang": [20, 23, 129, 140, 178], "view": [20, 22, 23, 39, 42, 44, 45, 109, 140, 225, 232, 233, 234], "argmax": [20, 129, 133, 140, 141], "dim": [20, 61, 89, 108, 210, 225, 231, 232], "chosen_action_valu": [20, 23, 133, 196, 226], "outcom": [20, 23, 103, 120], "nvec": 21, "use_regist": [21, 23], "hot": [21, 23, 64, 117, 129, 133, 140, 141], "cardin": [21, 140, 141], "element": [21, 23, 24, 25, 26, 27, 30, 33, 34, 35, 98, 128, 134, 135, 178, 225, 233], "gamma": [22, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 206, 225, 226, 234], "present": [22, 24, 30, 39, 42, 44, 45, 46, 66, 79, 80, 99, 100, 101, 102, 106, 113, 131, 134, 135, 136, 137, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 210, 223, 225, 228, 234], "sutton": 22, "r": [22, 72, 135, 146, 165, 233], "1988": 22, "predict": [22, 105, 110, 111, 139, 151, 153, 154, 160, 165], "tempor": [22, 111, 167], "44": 22, "discount": [22, 40, 147, 148, 149, 150, 151, 152, 154, 156, 157, 160, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 225, 226], "ahead": [22, 233], "add_modul": [22, 39, 42, 44, 45], "child": [22, 39, 42, 44, 45, 232], "current": [22, 39, 42, 44, 45, 46, 53, 86, 93, 105, 108, 119, 131, 140, 141, 191, 199, 216, 223, 225, 233, 234], "fn": [22, 39, 42, 44, 45, 114, 208, 209], "recurs": [22, 39, 42, 44, 45], "children": [22, 39, 42, 44, 45], "init": [22, 39, 42, 44, 45, 225, 226], "init_weight": [22, 39, 42, 44, 45], "m": [22, 39, 42, 44, 45, 64, 135, 225, 226], "fill_": [22, 39, 42, 44, 45, 226, 232, 233], "net": [22, 39, 42, 44, 45, 108, 158, 201, 206, 226, 229, 231, 234], "in_featur": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 98, 99, 100, 101, 102, 108, 109, 112, 113, 125, 134, 231, 234], "out_featur": [22, 39, 42, 43, 44, 45, 63, 75, 83, 86, 89, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 112, 113, 125, 129, 134, 225, 226, 231, 234], "bia": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 98, 105, 109, 112, 113, 114, 130, 131, 134, 144, 145, 146, 226, 234], "requires_grad": [22, 39, 42, 44, 45, 225], "bfloat16": [22, 39, 42, 44, 45], "cast": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 90, 134, 191, 194, 196, 199, 201, 204, 232, 233], "datatyp": [22, 39, 42, 44, 45], "direct": [22, 39, 42, 44, 45, 226], "member": [22, 39, 42, 44, 45], "xdoctest": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "skip": [22, 39, 42, 44, 45, 69, 86, 92, 135, 176, 177, 180, 183, 231], "buf": [22, 39, 42, 44, 45], "20l": [22, 39, 42, 44, 45], "1l": [22, 39, 42, 44, 45], "5l": [22, 39, 42, 44, 45], "immedi": [22, 39, 42, 44, 45, 165], "associ": [22, 39, 42, 44, 45, 118, 210, 231], "copi": [22, 39, 42, 44, 45, 86, 225, 226, 232], "doubl": [22, 24, 26, 29, 39, 42, 44, 45, 63, 65, 75, 83, 84, 86, 89, 134, 150, 151, 155, 158, 161, 225, 233], "eval": [22, 39, 42, 44, 45, 86, 90, 225, 226], "certain": [22, 39, 42, 44, 45, 69, 82, 86, 156, 225, 226, 232, 233], "particular": [22, 39, 42, 44, 45, 86, 223, 226, 228], "behavior": [22, 39, 42, 44, 45, 86], "dropout": [22, 39, 42, 44, 45, 86, 231], "batchnorm": [22, 39, 42, 44, 45, 86], "disabl": [22, 39, 42, 44, 45, 86, 107, 121, 122, 225], "comparison": [22, 39, 42, 44, 45, 86], "similar": [22, 39, 42, 44, 45, 63, 75, 83, 86, 88, 89, 90, 96, 134, 135, 225, 231, 233], "mechan": [22, 39, 42, 44, 45, 86], "confus": [22, 39, 42, 44, 45, 86], "extra_repr": [22, 39, 42, 44, 45], "represent": [22, 39, 42, 44, 45, 75, 89, 225, 226, 229, 233], "string": [22, 39, 42, 44, 45, 135, 146, 176, 185, 191, 199, 201, 204], "tennsordict": 22, "dimens": [22, 60, 61, 68, 72, 81, 84, 87, 89, 98, 109, 112, 113, 120, 121, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 166, 167, 168, 210, 225, 232], "shift": [22, 144], "nontermin": [22, 225], "termin": [22, 136, 225, 226, 231, 234], "original_reward": [22, 225], "newli": 22, "get_buff": [22, 39, 42, 44, 45], "throw": [22, 39, 42, 44, 45, 233], "docstr": [22, 39, 42, 44, 45], "get_submodul": [22, 39, 42, 44, 45], "explan": [22, 39, 42, 44, 45], "how": [22, 24, 26, 30, 39, 42, 44, 45, 148, 155, 156, 157, 186, 220, 225, 226, 228, 229, 233, 234], "qualifi": [22, 39, 42, 44, 45], "referenc": [22, 39, 42, 44, 45], "attributeerror": [22, 39, 42, 44, 45], "invalid": [22, 39, 42, 44, 45], "resolv": [22, 39, 42, 44, 45], "someth": [22, 39, 42, 44, 45, 220, 233], "get_extra_st": [22, 39, 42, 44, 45, 90], "set_extra_st": [22, 39, 42, 44, 45, 90], "pickleabl": [22, 39, 42, 44, 45, 90], "ensur": [22, 24, 26, 30, 39, 42, 44, 45, 75, 90, 142, 225], "guarante": [22, 33, 34, 35, 36, 39, 42, 44, 45, 90, 234], "pickl": [22, 39, 42, 44, 45, 90], "get_paramet": [22, 39, 42, 44, 45], "sai": [22, 39, 42, 44, 45, 229, 233], "net_b": [22, 39, 42, 44, 45], "net_c": [22, 39, 42, 44, 45], "conv": [22, 39, 42, 44, 45, 98], "conv2d": [22, 39, 42, 44, 45, 98, 234], "16": [22, 39, 42, 44, 45, 226], "kernel_s": [22, 39, 42, 44, 45, 98, 99, 100, 226, 234], "stride": [22, 39, 42, 44, 45, 98, 99, 100, 106, 226, 234], "100": [22, 39, 42, 44, 45, 72, 179, 186, 206, 225, 226, 228, 229, 233, 234], "diagram": [22, 39, 42, 44, 45], "show": [22, 39, 42, 44, 45, 226, 231, 234], "itself": [22, 39, 42, 44, 45, 82], "would": [22, 39, 42, 44, 45, 109, 223, 226, 231, 232, 233], "degre": [22, 39, 42, 44, 45], "named_modul": [22, 39, 42, 44, 45], "o": [22, 39, 42, 44, 45], "transit": [22, 39, 42, 44, 45, 139, 225, 226], "alwai": [22, 39, 42, 44, 45, 71, 226], "half": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 225], "ipu": [22, 39, 42, 44, 45], "strict": [22, 39, 42, 44, 45, 86], "descend": [22, 39, 42, 44, 45, 86], "exactli": [22, 39, 42, 44, 45, 53, 86], "persist": [22, 39, 42, 44, 45, 86], "enforc": [22, 39, 42, 44, 45, 86, 136], "missing_kei": [22, 39, 42, 44, 45, 86], "unexpected_kei": [22, 39, 42, 44, 45, 86], "unexpect": [22, 39, 42, 44, 45, 86, 233], "namedtupl": [22, 39, 42, 44, 45, 86], "duplic": [22, 39, 42, 44, 45, 150, 151, 232], "l": [22, 39, 42, 44, 45, 165], "idx": [22, 39, 42, 44, 45, 232], "named_buff": [22, 39, 42, 44, 45, 226], "prefix": [22, 39, 42, 44, 45, 86, 176, 233], "prepend": [22, 39, 42, 44, 45], "running_var": [22, 39, 42, 44, 45], "named_children": [22, 39, 42, 44, 45], "conv4": [22, 39, 42, 44, 45], "conv5": [22, 39, 42, 44, 45], "memo": [22, 39, 42, 44, 45], "remove_dupl": [22, 39, 42, 44, 45], "named_paramet": [22, 39, 42, 44, 45, 226], "register_backward_hook": [22, 39, 42, 44, 45], "removablehandl": [22, 39, 42, 44, 45], "deprec": [22, 39, 42, 44, 45, 86, 233], "favor": [22, 39, 42, 44, 45], "register_full_backward_hook": [22, 39, 42, 44, 45], "futur": [22, 39, 42, 44, 45, 75, 86, 89, 109, 220, 234], "register_buff": [22, 39, 42, 44, 45], "running_mean": [22, 39, 42, 44, 45], "alongsid": [22, 39, 42, 44, 45], "latter": [22, 39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 208, 209], "num_featur": [22, 39, 42, 44, 45], "register_forward_hook": [22, 39, 42, 44, 45, 140, 141], "signatur": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 143], "posit": [22, 24, 25, 26, 27, 39, 42, 44, 45, 69, 81, 82, 86, 87, 114, 231], "won": [22, 39, 40, 42, 44, 45, 75, 89, 186, 210, 225], "register_forward_pre_hook": [22, 39, 42, 44, 45], "invok": [22, 39, 42, 44, 45], "respect": [22, 39, 42, 44, 45, 59, 63, 75, 83, 86, 89, 119, 134, 138, 182], "grad_input": [22, 39, 42, 44, 45], "grad_output": [22, 39, 42, 44, 45], "subsequ": [22, 39, 42, 44, 45], "entri": [22, 39, 42, 44, 45, 75, 89, 166, 167, 168, 229, 231], "technic": [22, 39, 42, 44, 45], "similarli": [22, 39, 42, 44, 45, 136, 137, 225, 231, 233], "caller": [22, 39, 42, 44, 45], "register_load_state_dict_post_hook": [22, 39, 42, 44, 45], "post": [22, 39, 42, 44, 45, 226], "incompatible_kei": [22, 39, 42, 44, 45], "consist": [22, 39, 42, 44, 45, 98, 109, 225, 226, 229, 233], "addit": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 128, 134, 146, 166, 226], "thrown": [22, 39, 42, 44, 45], "clearn": [22, 39, 42, 44, 45], "register_modul": [22, 39, 42, 44, 45, 223], "alia": [22, 39, 42, 44, 45], "register_paramet": [22, 39, 42, 44, 45], "requires_grad_": [22, 39, 42, 44, 45, 225], "autograd": [22, 39, 42, 44, 45, 86], "freez": [22, 39, 42, 44, 45], "finetun": [22, 39, 42, 44, 45], "individu": [22, 39, 42, 44, 45], "gan": [22, 39, 42, 44, 45], "share_memori": [22, 39, 40, 42, 44, 45, 225], "share_memory_": [22, 39, 42, 44, 45, 232, 234], "destin": [22, 39, 42, 44, 45, 86, 96], "keep_var": [22, 39, 42, 44, 45, 86], "averag": [22, 39, 42, 44, 45, 86, 90, 131, 152, 153, 184, 225, 231], "shallow": [22, 39, 42, 44, 45, 86], "pleas": [22, 39, 42, 44, 45, 86, 220], "design": [22, 23, 39, 42, 44, 45, 86, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 225, 226, 228, 232, 233], "detach": [22, 39, 42, 44, 45, 86, 225, 226], "non_block": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 226], "memory_format": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "channels_last": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "Its": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "complex": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 231], "integr": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 102, 111, 134, 229], "unchang": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "tri": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "convert": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 90, 134, 146, 232], "host": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "pin": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "4d": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "ignore_w": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "1913": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "3420": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "5113": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "2325": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "torch_doctest_cuda1": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "gpu1": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "1914": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "5112": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "2324": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "float16": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "cdoubl": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "3741": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "j": [22, 24, 30, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134, 223, 226], "2382": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "5593": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "4443": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "complex128": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "6122": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "1150": [22, 39, 42, 44, 45, 63, 75, 83, 86, 89, 134], "to_empti": [22, 39, 42, 44, 45], "dst_type": [22, 39, 42, 44, 45], "xpu": [22, 39, 42, 44, 45], "set_to_non": [22, 39, 42, 44, 45], "unidimension": [23, 232], "keepdim": 23, "sum": [23, 42, 153, 165, 225, 226, 233], "user_regist": 23, "experiment": [23, 135], "priori": 23, "definit": [23, 36], "uniqu": 23, "discretebox": 23, "alpha": [24, 26, 30, 98, 158, 160, 225, 226, 234], "beta": [24, 26, 30, 156, 225, 226, 234], "ep": [24, 26, 30, 90, 131, 148, 161, 184], "1e": [24, 26, 30, 90, 103, 105, 114, 120], "08": [24, 26, 30, 226], "collate_fn": [24, 25, 26, 232, 234], "prefetch": [24, 25, 26, 225, 226], "schaul": [24, 30], "quan": [24, 30], "antonogl": [24, 30], "silver": [24, 30], "2015": [24, 30], "arxiv": [24, 30, 60, 75, 99, 100, 101, 102, 105, 106, 111, 113, 115, 116, 118, 119, 131, 140, 147, 151, 152, 153, 154, 155, 157, 160, 161, 166, 169, 170, 173, 191, 194, 199, 204, 229], "ab": [24, 30, 75, 90, 105, 106, 111, 113, 115, 116, 118, 119, 147, 152, 153, 154, 155, 157, 191, 199, 229], "1511": [24, 30, 106], "05952": [24, 30], "expon": [24, 26, 30], "\u03b1": [24, 26, 30], "determin": [24, 26, 30, 75, 89, 131, 226], "delta": [24, 26, 30, 120, 135, 219], "prioriti": [24, 26, 27, 30, 33, 34, 35, 36, 149, 150, 158, 160, 223, 225, 226], "null": [24, 26, 30, 59, 225], "max_siz": [24, 25, 26, 33, 35, 36, 226], "1_000": [24, 25, 26], "merg": [24, 25, 26], "mini": [24, 25, 26], "style": [24, 25, 26], "rb": [24, 25, 26, 226, 229, 234], "multithread": [24, 25, 26], "insert_transform": [24, 25, 26, 27], "insert": [24, 25, 26, 27, 37, 38, 87, 226], "return_info": [24, 25, 26, 27], "sampler": [24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 219, 225], "info": [24, 25, 26, 27, 39, 42, 44, 45, 56, 57, 91, 231], "select": [24, 25, 26, 27, 44, 45, 71, 80, 97, 185, 225, 226], "writer": [25, 37, 219], "randomsampl": [25, 219, 225], "roundrobinwrit": [25, 219], "priority_kei": [26, 27, 150, 151, 160, 234], "td_error": [26, 27, 149, 150, 151, 158, 160, 225, 234], "prioritizedreplaybuff": [26, 219, 234], "update_tensordict_prior": [26, 225, 234], "include_info": [26, 27], "kw": [27, 37], "replaybuff": [27, 38, 202, 206, 219, 229, 234], "meta": [28, 41, 223], "describ": [28, 61, 85, 120, 121, 191, 199, 216, 233], "max_capac": [30, 225], "update_prior": [30, 223, 225, 234], "uniformli": [31, 233], "scratch_dir": [33, 225], "memmap": [33, 44, 45, 90], "attach": [33, 34, 35, 36, 226], "entiti": [33, 34, 35, 36], "made": [33, 34, 35, 36, 131, 225, 229], "eg": [33, 34, 35, 36], "alloc": 34, "__len__": 36, "roundrobin": 37, "piec": [37, 38], "_inplace_upd": [39, 44, 45, 86], "_batch_lock": [39, 44, 45, 86], "run_type_check": [39, 43], "compar": [39, 183, 226, 233], "batch_lock": [39, 41, 42, 44, 45, 86], "environn": [39, 42, 43, 44, 45, 86], "immut": [39, 42, 44, 45, 86, 191, 199], "fake_tensordict": [39, 42, 44, 45], "fake": [39, 42, 44, 45], "overridden": [39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144], "recip": [39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144], "afterward": [39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144, 233], "former": [39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144], "silent": [39, 42, 44, 45, 63, 81, 85, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 115, 116, 118, 119, 128, 130, 131, 144], "_step": [39, 42, 44, 45], "privat": [39, 42, 44, 45, 233], "_reset": [39, 42, 43, 44, 45, 97, 111], "overwritten": [39, 42, 44, 45, 96, 225], "callback": [39, 42, 44, 45], "auto_reset": [39, 42, 44, 45, 226], "auto_cast_to_devic": [39, 42, 44, 45], "break_when_any_don": [39, 42, 44, 45], "return_contigu": [39, 42, 44, 45, 92, 228], "soon": [39, 42, 44, 45], "smaller": [39, 42, 44, 45], "lazystackedtensordict": [39, 42, 43, 44, 45, 97, 111, 228, 232, 233, 234], "concomitt": [39, 42, 44, 45], "eras": [39, 42, 44, 45, 46], "workspac": [39, 42, 44, 45, 46], "carri": [39, 42, 44, 45], "creator": [40, 192, 193, 208, 209, 210], "substitut": [40, 90], "multiprocess": [40, 41, 90, 233], "mp": [40, 90], "env_creat": [40, 225], "test_env1": 40, "_td": 40, "observation_count": [40, 233], "test_env2": 40, "sleep": [40, 233], "5": [40, 55, 56, 57, 97, 98, 105, 107, 108, 109, 111, 121, 122, 129, 133, 140, 141, 156, 225, 226, 229, 232, 233, 234], "__name__": [40, 226], "__main__": 40, "p": [40, 226, 231], "p1": [40, 226], "p2": [40, 226], "join": [40, 191, 199], "9934": 40, "env_str": 41, "discard": [42, 96, 176, 233], "info_dict_read": 42, "set_info_dict_read": 42, "put": [42, 90, 210, 232], "f": [42, 146, 166, 167, 168, 225, 226, 231, 232, 233], "read_act": 42, "read_don": 42, "reader": [42, 225, 226], "frame_skip": [42, 49, 50, 51, 54, 69, 180, 183, 188, 223, 225, 234], "broken": [42, 92], "read_ob": 42, "dictat": [42, 135], "inner": [42, 223, 225, 233], "read_reward": 42, "total_reward": 42, "step_reward": 42, "far": [42, 107, 121, 122, 233], "baseinfodictread": 42, "info_dict": 42, "hoc": 42, "manner": [42, 75, 225, 228], "dict_read": 42, "default_info_dict_read": 42, "my_info_kei": 42, "some_env": 42, "meant": 43, "limit": [43, 44, 45, 232], "safeti": 43, "constraint": 43, "behav": [43, 53, 117, 229], "classic": [43, 231, 232], "unboundedcontinuoustensorspec": [43, 83, 97, 124, 125, 126, 127, 134, 137, 138, 219, 233], "mymbenv": [43, 97, 111], "world_model": [43, 58, 97, 111, 153], "super": [43, 97, 111, 138, 140, 143, 231, 234], "hidden_observ": [43, 97, 111], "mlp": [43, 97, 98, 99, 100, 101, 102, 108, 111, 125, 129, 191, 199, 201, 204, 219, 225, 226, 228, 229, 231, 234], "worldmodelwrapp": [43, 97, 111, 219], "activation_class": [43, 97, 98, 99, 100, 101, 102, 105, 106, 109, 111, 225, 226, 234], "relu": [43, 97, 111, 114, 146, 231], "activate_last_lay": [43, 97, 102, 109, 111], "depth": [43, 97, 98, 99, 100, 101, 102, 105, 106, 109, 111, 115, 116, 129, 226, 228], "equal": [44, 45, 71, 72, 98, 104, 109, 162, 178, 208, 209, 229, 232], "my_env_fun": [44, 45], "custom_attribute_list": [44, 45], "custom_attribut": [44, 45], "custom_method_list": [44, 45], "custom_method": [44, 45], "num_work": [44, 45, 225, 226], "deploi": [44, 45], "creation": [44, 45, 225, 233], "slight": [44, 45, 226], "overhead": [44, 45, 231], "env_input_kei": [44, 45], "permit": [44, 45], "drastic": [44, 45], "decreas": [44, 45], "io": [44, 45], "burden": [44, 45], "_batchedenv": [44, 45], "might": [44, 45, 217, 220, 225, 233], "next_pixel": [44, 45], "next_vector": [44, 45], "occupi": [44, 45], "excluded_kei": [44, 45, 66], "share_individual_td": [44, 45], "lazi": [44, 45, 75, 112, 136, 137, 225, 228, 232, 233], "shared_memori": [44, 45], "policy_proof": [44, 45], "ll": [44, 45, 225, 226, 233], "hidden": [44, 45, 105, 108, 115, 116, 118, 119, 125, 126, 127, 134, 137, 191, 199, 228, 231, 234], "instanti": [44, 45, 85, 225, 226, 232, 233], "allow_step_when_don": [44, 45], "encount": [44, 45, 220], "update_kwarg": [44, 45], "build_tensordict": 46, "next_observ": [46, 96, 108, 228], "log_prob": [46, 103, 117, 122], "empti": [46, 75, 86, 89, 225], "popul": [46, 83], "googl": [47, 48], "ant": [47, 48, 229], "categorical_action_encod": [48, 52], "get_environ": 48, "87": 48, "acrobot": [48, 233], "fetch": [48, 229, 233], "dm_control": [49, 50, 225, 228, 233], "task_nam": 49, "cheetah": [49, 50, 225, 233], "suit": [50, 233], "disable_env_check": [51, 53], "serv": [53, 233], "placehold": [53, 86], "secur": 53, "jumanji": [54, 55], "snake": [54, 55], "6x6": [54, 55], "td1": 55, "int32": [55, 232, 234], "12x12": 55, "tsp50": 55, "tsp100": 55, "vma": [56, 57], "scenario_nam": [56, 57], "num_env": [56, 57], "continuous_act": [56, 57], "flock": [56, 57], "scenario": [56, 57], "n_agent": [56, 57], "cohesion_rew": [56, 57], "collision_rew": [56, 57], "separation_rew": [56, 57], "velocity_rew": [56, 57], "18": [56, 57, 226, 233], "model_bas": [58, 97, 111], "prior_shap": 58, "belief_shap": 58, "obs_decod": 58, "transform_reward_spec": [59, 63, 65, 77, 78, 85, 87], "cat_dim": [60, 72], "success": [60, 85, 234], "account": 60, "movement": 60, "veloc": [60, 233], "propos": [60, 110, 155, 161, 201, 204], "plai": [60, 233], "atari": [60, 233], "pdf": [60, 99, 100, 101, 102, 131, 140, 151, 158, 160, 161, 166, 169, 170, 173, 194, 201, 204], "1312": 60, "5602": 60, "tranform": [60, 63, 66, 80, 82, 83, 85, 88, 91], "transform_observation_spec": [60, 61, 62, 63, 65, 66, 68, 70, 72, 76, 79, 80, 82, 83, 84, 85, 87], "del_kei": [61, 226, 228], "unsqueeze_if_oor": 61, "observation_posit": 61, "observation_veloc": 61, "delet": [61, 232], "unsqueez": [61, 84, 87, 89, 108, 232], "key1": [61, 178, 185], "key2": [61, 178, 185], "w": [62, 76, 84, 131, 177], "crop": [62, 177], "center": [62, 177], "width": [62, 76, 226], "height": [62, 76, 226], "squar": [62, 107, 121, 122, 177], "rewardsc": [63, 86, 219, 225], "rewardclip": [63, 219], "transformed_env": [63, 85, 86], "dest": [63, 75, 89, 134], "transform_input_spec": [63, 65, 85, 87], "max_n": 64, "action_kei": [64, 97, 110, 111, 128, 130], "dimension": [64, 166, 169, 170, 173], "action_out": 64, "manual_se": [64, 72, 130, 131, 225, 233, 234], "finit": [67, 225], "first_dim": 68, "last_dim": 68, "flatten": [68, 225, 226], "adjac": 68, "repeatedli": 69, "stabil": 69, "turn": [70, 183, 226, 229], "noop": [71, 234], "30": [71, 118, 119, 226], "op": [71, 128, 130, 187], "randomli": [71, 72, 83, 135], "noop_max": 71, "loc": [72, 78, 107, 114, 121, 122, 125, 126, 127, 132, 135, 137, 189, 191, 199, 201, 204, 210, 225, 226, 231, 234], "standard_norm": [72, 78, 225, 226], "affin": [72, 78], "layer": [72, 90, 98, 99, 100, 105, 109, 112, 113, 115, 116, 123, 225, 226, 229, 231], "set_default_tensor_typ": 72, "doubletensor": 72, "std": [72, 90, 114, 128, 225, 226, 233], "isclos": 72, "next_ob": [72, 166, 167, 168, 225, 234], "normalis": 72, "stat": [72, 189, 210, 225], "rubric": [72, 137], "init_stat": 72, "3752e": 72, "01": [72, 131, 144, 147, 148, 156, 157, 225, 226, 229, 230], "5087e": 72, "03": [72, 225, 226, 229], "9294e": 72, "9636": 72, "5608": 72, "6408": 72, "num_it": 72, "reduce_dim": 72, "keep_dim": 72, "constant": [72, 223, 225, 226, 233], "ideal": [72, 225], "statist": [72, 90, 159, 210, 225, 233], "approach": [72, 233], "gaussian": [72, 97, 111, 112, 113, 128], "empir": [72, 97, 111, 135], "deviat": [72, 90, 97, 105, 111, 112, 113, 128, 157, 225, 226], "3d": 72, "third": 72, "r3m": [75, 229], "resnet": [75, 89], "visual": [75, 89], "embed": [75, 88, 89, 125, 126, 127, 134, 229, 231], "ego4d": [75, 89], "paper": [75, 89, 155, 201, 204, 225], "univers": [75, 89], "suraj": 75, "nair": 75, "aravind": 75, "rajeswaran": 75, "vikash": [75, 89], "kumar": [75, 89], "chelsea": 75, "finn": 75, "abhinav": 75, "gupta": 75, "2203": [75, 111, 229], "12601": [75, 229], "_init": 75, "snippet": [75, 225], "resenet50": 75, "model_nam": [75, 89, 216], "resnet50": [75, 89, 229], "resnet34": 75, "resnet18": 75, "left": [75, 89, 226], "r3m_vec": [75, 229], "feed": [75, 89], "244": [75, 89], "stack_imag": [75, 89], "tread": [75, 89], "separet": [75, 89], "hub": [75, 89, 229], "cach": [75, 86, 89, 179, 229], "download_path": [75, 89], "tensor_pixels_kei": [75, 89], "interpol": [76, 226], "bilinear": 76, "clamp_min": [77, 131], "clamp_max": 77, "clip": [77, 148, 186], "clip_min": 77, "scalar": [77, 100, 102, 112, 113, 128, 130, 131, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "clip_max": 77, "episod": [79, 97, 169, 170, 171, 172, 173, 174, 175, 226], "cumul": [79, 97], "episode_": 79, "reward1": 79, "reward2": 79, "ho": 79, "excludetransform": [80, 219], "squeeze_dim": 81, "squeez": [81, 98, 226, 232], "manual": 82, "default_valu": 83, "primer": 83, "drawn": [83, 135], "rel": [83, 103, 120], "chosen": [83, 191, 199, 201, 204], "mykei": 83, "dtype_or_devic": 83, "255": [84, 233], "precis": [84, 225], "ri": 84, "randint": [84, 225], "out_keys_inv": 85, "principl": 85, "combin": [85, 232], "cattransform": 85, "notabl": 85, "cache_spec": 86, "anymor": [86, 134, 225], "unsqueeze_dim": 87, "vip": [88, 89, 229], "toward": 89, "implicit": 89, "jason": 89, "ma": 89, "shagun": 89, "sodhani": 89, "dinesh": 89, "jayaraman": 89, "osbert": 89, "bastani": 89, "ami": 89, "zhang": 89, "vip_vec": 89, "is_3d": 89, "know": [89, 128, 130, 158, 183, 225, 226], "cat": [89, 138, 225, 232, 234], "shared_td": 90, "lock": 90, "decai": [90, 128, 130, 158, 184, 225, 226, 233], "9999": [90, 233], "0001": [90, 105, 114, 184], "fly": [90, 156, 233], "to_observation_norm": 90, "rate": [90, 165, 225, 226], "99": [90, 111, 147, 148, 152, 154, 156, 157, 158, 159, 160, 165, 206, 225, 226, 234], "underflow": 90, "1000": [90, 128, 130, 131, 135, 155, 225, 226, 229], "build_td_for_shared_vecnorm": 90, "memmori": 90, "memmap_": [90, 232], "queue": 90, "td_share": 90, "v": [90, 108, 160, 226, 231, 234], "observationnorm": [90, 210, 219, 225, 226, 234], "state_dim": [91, 118, 119], "action_dim": [91, 99, 101, 228], "gsde": [91, 158, 210], "nois": [91, 113, 123, 131, 158, 183, 210, 225], "func": [91, 231], "gsdemodul": 91, "check_dtyp": 92, "short": 92, "discrep": [92, 147, 148, 149, 150, 156, 157], "imposs": 92, "heterogen": 92, "probabilistictdmodul": [95, 109, 135, 160, 165, 183], "next_tensordict": [96, 225], "keep_oth": 96, "exclude_reward": 96, "exclude_don": 96, "exclude_act": 96, "_run_check": 96, "reflect": [96, 188], "renam": [96, 225], "next_": 96, "funtion": 96, "td_out": [96, 178, 185], "make_polici": 96, "next_td": 96, "planning_horizon": [97, 111], "optim_step": [97, 111, 232], "num_candid": [97, 111], "top_k": [97, 111], "reward_kei": [97, 111], "cross": 97, "entropi": [97, 147, 148, 156, 157, 158, 160], "botev": 97, "et": [97, 231], "al": [97, 196, 231, 233], "2013": [97, 233], "cem": 97, "plan": [97, 110, 111], "unit": [97, 105, 115, 116, 118, 119], "varianc": [97, 107, 114, 121, 122], "rank": 97, "top": [97, 111], "k": [97, 226, 231, 232], "repeat": 97, "maximis": [97, 99, 101, 111, 225], "horizon": [97, 111], "modelbasedenv": [97, 111], "mpc": [97, 110, 111], "candid": [97, 111], "modelbasedenvbas": [97, 110, 111, 219], "next_hidden_observ": 97, "actor": [97, 99, 101, 105, 111, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 147, 148, 149, 152, 156, 157, 158, 160, 191, 194, 196, 199, 201, 204, 219, 225, 226, 229, 234], "num_cel": [98, 99, 100, 101, 102, 105, 106, 109, 125, 225, 226, 231, 234], "elu": [98, 99, 100, 101, 102, 105, 106, 226, 234], "activation_kwarg": [98, 109], "norm_class": [98, 99, 100, 109], "norm_kwarg": [98, 109], "bias_last_lay": [98, 99, 100, 101, 102, 106, 109], "aggregator_class": [98, 99, 100, 226, 234], "squashdim": [98, 99, 234], "aggregator_kwarg": [98, 99, 100, 226], "squeeze_output": [98, 99, 100, 226], "convolut": [98, 99, 100], "neural": [98, 134, 226, 231, 233], "produc": [98, 109, 117, 125, 127, 177, 233], "len": [98, 109, 225, 226, 229, 231, 232, 234], "cell": [98, 109, 225], "kernel": [98, 106, 108], "tanh": [98, 107, 109, 120, 121, 122, 225, 229, 234], "singleton": [98, 109], "device_typ": [98, 99, 100, 101, 102, 106, 109, 112, 113], "cnet": 98, "34": [98, 109], "35": [98, 109, 226, 229, 230, 234], "possibli": [98, 134, 186, 225, 233], "rectangular": 98, "conv_net_kwarg": [99, 100], "mlp_net_kwarg": [99, 100, 101], "use_avg_pool": [99, 100], "WITH": [99, 100, 101, 102, 131, 161, 194], "1509": [99, 100, 101, 102, 111, 131, 155, 161, 194], "02971": [99, 100, 101, 102, 131, 161, 194], "convnet": [99, 219, 234], "ndims_in": 99, "avgpool": [99, 100], "128": [100, 225, 226, 229], "adaptiveavgpool2d": [100, 226], "400": [101, 102, 226], "300": [101, 102, 191, 199], "mlp_net_kwargs_net1": 102, "mlp_net_kwargs_net2": 102, "atol": [103, 120], "06": [103, 120, 225, 226], "rtol": [103, 120], "batch_shap": [103, 120], "event_shap": [103, 120], "absolut": [103, 120], "toler": [103, 120], "densiti": [103, 117, 122], "mass": [103, 117, 122], "rsampl": [103, 117, 135], "sample_shap": [103, 117], "reparameter": [103, 117], "dqnet": 104, "atom": 104, "std_bia": 105, "std_min_val": 105, "stochast": [105, 113, 115, 119, 158, 160], "belief": [105, 115, 118, 119], "1912": [105, 152, 153, 154], "016034": 105, "softplu": [105, 114, 144, 145, 146], "out_features_valu": 106, "cnn_kwarg": [106, 226], "mlp_kwarg": [106, 108, 226], "duel": [106, 226], "cnn": [106, 226, 234], "06581": 106, "512": 106, "upscal": [107, 121, 122], "tanh_loc": [107, 121, 122], "event_dim": [107, 120, 121], "prevent": [107, 121, 122, 156, 157, 225], "ultim": [107, 121, 122], "unstabl": [107, 121, 122], "poor": [107, 121, 122], "explos": [107, 121, 122], "switch": [107, 121, 122], "sigma": [107, 121, 122, 128, 131], "formula": [107, 121, 122, 148, 156, 157], "lstm_kwarg": 108, "embedd": 108, "lstm": [108, 114], "time_step": 108, "2d": 108, "hidden_s": 108, "input_s": 108, "hidden0_in": 108, "hidden1_in": 108, "hidden0_out": 108, "hidden1_out": 108, "single_bias_last_lay": 109, "layer_class": 109, "layer_kwarg": 109, "perceptron": 109, "seamless": 109, "though": 109, "reshap": [109, 231, 232], "lazylinear": [109, 229, 234], "42": [109, 186], "noisylinear": [109, 112, 219, 226], "noisylazylinear": [109, 219], "At": [110, 228, 229], "mpcplanner": 110, "tensordict_out": [110, 231, 233], "advantage_modul": [111, 147], "temperatur": 111, "mppi": 111, "covari": 111, "william": [111, 159], "aldrich": 111, "theodor": 111, "01149": 111, "hansen": 111, "wang": 111, "su": 111, "04955": 111, "ndunboundedcontinuoustensorspec": [111, 137], "valueoper": [111, 125, 126, 127, 147, 148, 156, 157, 206, 219, 225, 231], "tdlambdaestim": [111, 219], "value_net": [111, 166, 167, 168], "adv": 111, "95": [111, 152, 225, 226, 229], "std_init": [112, 113], "noisi": [112, 113, 123], "term": [112, 113, 146, 147, 187, 226], "matrix": [112, 113], "ax": [112, 113], "initialize_paramet": 112, "isol": 112, "1706": 113, "10295v3": 113, "induc": 113, "aid": 113, "descent": 113, "remain": 113, "emploi": 113, "scale_map": 114, "biased_softplus_1": 114, "scale_lb": [114, 118, 119], "exp": [114, 146], "module_norm": 114, "decod": [115, 231], "1803": [115, 116], "10122": [115, 116], "rnn_hidden": 115, "latent": 116, "logit": 117, "prob": 117, "One": [117, 128, 130, 134, 162, 217, 225, 231, 232, 233], "excacli": 117, "hidden_dim": [118, 119, 231], "posterior": [118, 153], "rssm": [118, 119, 153], "1811": [118, 119], "04551": [118, 119], "obs_embed": 118, "rnn_hidden_dim": 119, "prior": [119, 153], "dream": 119, "recurr": 119, "min": [120, 121, 122, 148, 158, 160, 225, 226], "tanhtransform": 121, "tensordict_modul": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 230, 231], "translat": [124, 132], "td_modul": [124, 125, 126, 127, 132, 134, 135, 137, 138, 231, 234], "get_policy_oper": [125, 126, 127, 191, 199, 231], "alon": [125, 126, 127], "tdmodul": [125, 126, 127, 206], "get_critic_oper": [125, 231], "common_oper": [125, 127], "policy_oper": [125, 126, 127], "value_oper": [125, 126, 127], "probabilisticactor": [125, 126, 127, 160, 219, 225], "tanhnorm": [125, 126, 127, 132, 137, 219, 231, 234], "normalparamwrapp": [125, 126, 127, 132, 137, 219, 231, 234], "spec_hidden": [125, 127], "module_hidden": [125, 127, 231], "td_module_hidden": [125, 127, 231], "spec_act": [125, 127], "module_act": [125, 127, 231], "td_module_act": [125, 126, 127, 231], "dist_in_kei": [125, 126, 127, 132, 137], "sample_out_kei": [125, 127, 137], "distribution_class": [125, 126, 127, 132, 135, 137, 225, 231, 234], "return_log_prob": [125, 126, 127, 135, 137, 231, 234], "module_valu": [125, 126, 127, 231], "td_module_valu": [125, 126, 127, 231], "state_action_valu": [125, 138, 165, 194, 201, 204, 206, 225, 231, 234], "td_clone": [125, 126, 127, 231], "clone": [125, 126, 127, 134, 191, 199, 201, 204, 225, 226, 231, 232, 234], "sample_log_prob": [125, 126, 127, 135, 137, 191, 199, 201, 231, 234], "tensordictmodulewrapp": [125, 192, 193, 206], "estim": [125, 126, 127, 147, 148, 156, 157, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 225, 226], "get_value_oper": [125, 126, 127, 191, 199], "action_modul": 126, "state_valu": [126, 127, 138, 166, 167, 168, 169, 170, 171, 173, 174, 191, 199, 204, 225], "safesequenti": [126, 127, 139, 219], "sigma_init": 128, "sigma_end": 128, "annealing_num_step": [128, 130, 131, 225, 226], "po": [128, 130], "epsilon": [128, 130, 131, 161, 226], "recov": [128, 130, 136, 228], "happen": [128, 229, 233], "action_spac": [129, 133, 140, 141], "one_hot": [129, 133, 140, 141], "onehotdiscretetensorspec": [129, 133, 140, 141, 219], "nbin": [129, 140], "qvalue_actor": [129, 133, 140, 141], "eps_init": [130, 131, 226], "eps_end": [130, 131, 226], "greedi": [130, 141, 226], "explorative_polici": [130, 131], "0000": [130, 234], "6986": 130, "9366": 130, "5837": 130, "8596": 130, "grad_fn": [130, 234], "addbackward0": [130, 234], "theta": 131, "15": [131, 152, 226], "mu": 131, "dt": 131, "x0": 131, "sigma_min": 131, "n_steps_ann": 131, "ornstein": [131, 225], "uhlenbeck": [131, 225], "ou": [131, 225], "introduc": [131, 231, 232], "auto": [131, 158, 160], "correl": 131, "sort": 131, "prev_nois": 131, "current_sigma": 131, "sqrt": [131, 226], "n_step": 131, "ou_prev_nois": 131, "ou_step": 131, "increas": 131, "anneal": 131, "_ou_prev_nois": 131, "_ou_step": 131, "probabilist": [132, 231, 234], "functional_modul": [132, 133, 134, 137, 138, 140, 141], "make_funct": [132, 133, 134, 137, 138, 140, 141, 142, 226, 231, 234], "functionalmodul": [134, 142], "functionalmodulewithbuff": [134, 142], "character": 134, "overflow": [134, 135], "grucel": [134, 231], "td_fmodul": 134, "td_function": 134, "td_state": 134, "vmap": [134, 137, 226, 231, 234], "expand": [134, 137, 231, 234], "ensembl": [134, 158], "params_repeat": 134, "td_vmap": [134, 137], "irrespect": [134, 135], "random_sampl": [134, 135], "tensor_spec": 135, "default_interaction_mod": [135, 231], "distribution_kwarg": [135, 225], "cache_dist": 135, "n_empirical_estim": 135, "probabilistictensordictmodul": [135, 136, 234], "rule": [135, 231], "interaction_mod": 135, "get_dist": [135, 136, 231], "__call__": [135, 223, 231], "median": 135, "suppli": 135, "fist": 135, "set_interaction_mod": 135, "diverg": [135, 153, 156], "partial_toler": [136, 137, 228], "probabilistictensordictsequenti": [136, 231, 234], "tensordictsequenti": [136, 228, 229, 234], "expos": [136, 231], "who": [136, 137], "AND": [136, 137], "scan": [136, 137], "sub": [136, 137, 178, 186, 228, 233, 234], "tensordictsequenci": 137, "tensordictsequ": 137, "safeprobabilisticmodul": [137, 219], "spec1": 137, "net1": 137, "module1": 137, "td_module1": 137, "spec2": 137, "module2": 137, "td_module2": 137, "custommodul": [138, 143], "transition_model": 139, "reward_model": 139, "imaginari": 139, "imagin": 139, "get_reward_oper": 139, "get_transition_model_oper": 139, "var_num": [140, 141], "regard": [140, 147, 151, 157, 232], "perspect": [140, 151], "1707": [140, 151, 157, 191, 199], "06887": [140, 151], "mult_one_hot": [140, 141], "customdistributionalqv": 140, "log_softmax": 140, "_src": 142, "wrapper_typ": 142, "mislead": 143, "other_kei": 143, "typeerror": 143, "min_val": [144, 146], "bias": [144, 225], "_bia": 144, "invert": 145, "surject": 146, "expln": 146, "biased_softplu": [146, 219], "beggin": 146, "biased_softplus_": 146, "syntax": [146, 225], "condit": 146, "met": 146, "safeprobabilisticsequenti": [147, 148, 156, 157, 159, 192, 193, 219], "advantage_kei": [147, 148, 156, 157, 159, 166, 167, 168], "value_target_kei": [147, 157, 159, 166, 167, 168], "value_target": [147, 157, 159, 166, 167, 168], "entropy_bonu": [147, 148, 156, 157], "samples_mc_entropi": [147, 148, 156, 157], "entropy_coef": [147, 148, 156, 157], "critic_coef": [147, 148, 156, 157], "loss_critic_typ": [147, 148, 156, 157, 159], "smooth_l1": [147, 148, 149, 150, 156, 157, 158, 159, 160, 162], "reli": [147, 225, 233], "1602": 147, "01783v2": 147, "advantage_diff_kei": 147, "advantage_diff": 147, "value_error": [147, 166, 167, 168], "loss_function_typ": 147, "l1": [147, 148, 149, 150, 156, 157, 158, 162, 226], "l2": [147, 148, 149, 150, 153, 154, 156, 157, 158, 162], "tha": 147, "throughout": [147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 233], "essenti": [147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 225, 232], "clip_epsilon": 148, "threshold": 148, "bonu": [148, 156, 157], "favour": [148, 156, 157], "exploratori": [148, 156, 157], "mont": [148, 156, 157], "carlo": [148, 156, 157], "multipli": [148, 156, 157, 158, 160, 225], "loss_funct": [148, 149, 150, 157, 158, 160, 162], "actor_network": [149, 158, 159, 160], "value_network": [149, 150, 151, 160, 166, 167, 168], "delay_actor": [149, 160], "delay_valu": [149, 150, 151, 159, 160], "input_tensordict": [149, 150, 151], "assign": [149, 150, 225, 231], "qvalueactor": [150, 219, 226], "distributionalqvalueactor": [151, 219], "unlik": [151, 157, 231, 232, 234], "disctount": 151, "actor_model": 152, "value_model": [152, 154], "model_based_env": 152, "dreamerenv": [152, 219], "imagination_horizon": 152, "lmbda": [152, 166, 168, 169, 171, 172, 173, 174, 175, 225, 226], "discount_loss": [152, 154], "01603": [152, 153, 154], "unrol": 152, "lambda_kl": 153, "lambda_reco": 153, "lambda_reward": 153, "reco_loss": 153, "reward_loss": 153, "free_nat": 153, "delayed_clamp": 153, "global_averag": 153, "kl": [153, 156], "reconstruct": [153, 233], "nat": 153, "clamp": [153, 186], "value_loss": [154, 225], "fake_data": 154, "loss_modul": [155, 161, 186, 205, 206, 223, 232], "dqnloss": [155, 161, 197, 219], "ddpgloss": [155, 161, 195, 206, 219, 234], "sacloss": [155, 161, 203, 219], "td3loss": [155, 161], "value_network_update_interv": 155, "contrast": 155, "soft": [155, 160, 161], "06461": 155, "dtarg": 156, "decrement": 156, "samples_mc_kl": 156, "penalti": 156, "old_polici": 156, "new_polici": 156, "adapt": 156, "thu": 156, "distanc": [156, 162, 165, 166], "apart": 156, "proxim": [157, 191, 199], "optimis": [157, 183], "flavour": [157, 225, 234], "constrain": 157, "clipppoloss": [157, 219], "klpenppoloss": [157, 219], "regularis": 157, "06347": [157, 191, 199], "qvalue_network": [158, 160], "num_qvalue_net": [158, 160], "sub_sample_len": 158, "priotity_kei": [158, 160], "alpha_init": [158, 160], "min_alpha": [158, 160], "max_alpha": [158, 160], "fixed_alpha": [158, 160], "target_entropi": [158, 160], "delay_qvalu": [158, 160], "openreview": [158, 201], "ay8zfzm0tdd": [158, 201], "idea": [158, 223, 226, 232], "subsampl": [158, 178, 223], "connectionist": 159, "1992": 159, "doi": 159, "1007": 159, "bf00992696": 159, "1801": [160, 204], "01290": [160, 204], "qvalue_network_bi": 160, "prod": 160, "n_action": 160, "redqloss": [161, 219], "999": [161, 184, 226], "prev_param": 161, "new_param": 161, "v2": [162, 171, 172, 174, 175, 191, 194, 199, 201, 204], "strict_shap": 162, "view_a": 162, "hold": [163, 164], "next_val_kei": 165, "pred_next_v": 165, "usus": 165, "mse": [165, 226], "q_valu": 165, "target_valu": [165, 234], "n_steps_to_next": 165, "value_next_st": 165, "average_ga": 166, "value_kei": [166, 167, 168], "1506": [166, 169, 170, 173], "02438": [166, 169, 170, 173], "exponenti": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184], "propag": [166, 167, 168], "throught": [166, 167, 168], "advang": 166, "gradient_mod": 166, "sign": 166, "unused_arg": 166, "target_param": [166, 167, 168], "relev": [166, 167, 168], "98": [166, 167, 168, 229], "94": [166, 168, 229], "unpack": [166, 167, 168], "average_reward": [167, 168], "next_state_valu": [169, 170, 171, 172, 173, 174, 175, 219], "old_stat": [169, 170, 171, 173, 174], "timestep": [169, 170, 171, 172, 173, 174, 175, 226], "new_stat": [169, 170, 171, 172, 173, 174, 175], "rolling_gamma": [171, 172, 174, 175], "ti": [171, 172, 174, 175], "event": [171, 172, 174, 175], "g1": [171, 172, 174, 175], "g2": [171, 172, 174, 175], "g3": [171, 172, 174, 175], "g4": [171, 172, 174, 175], "v3": [171, 172, 174, 175], "v4": [171, 172, 174, 175, 225, 229], "upcom": [171, 172, 174, 175, 225], "out_file_bas": 176, "skip_reset": 176, "dump": 176, "interv": [176, 177, 179, 187, 226], "center_crop": 177, "make_grid": 177, "video": [177, 183, 210, 226], "Will": 177, "grid": 177, "sub_traj_len": 178, "min_sub_traj_len": 178, "full": [178, 225, 226, 228, 229, 231, 232, 233, 234], "20": [178, 225, 226, 233, 234], "register_op": [178, 179, 180, 181, 182, 184, 185, 187, 223], "process_optim_batch": [178, 184, 223], "_process_optim_batch_hook": [178, 223], "clear": 179, "clear_cuda": 179, "pre_optim_step": [179, 223], "counter": [180, 223], "log_pbar": [180, 181, 183, 184, 223], "progress": [180, 181, 183, 186, 223, 233], "bar": [180, 181, 183, 186, 223], "count_fram": 180, "pre_steps_log": [180, 181, 223], "lognam": 181, "r_train": 181, "log_reward": 181, "loss_compon": 182, "appl": 182, "omit": [182, 226], "loss_": 182, "optimizer_hook": 182, "loss_actor": [182, 234], "record_interv": [183, 225], "record_fram": [183, 188, 225], "policy_explor": [183, 206, 225], "log_kei": 183, "suffix": 183, "underestim": 183, "suppos": [183, 223, 231, 232, 233], "set_exploration_mod": [183, 219, 225, 226, 234], "reward_evalu": 183, "reward_norm": 184, "batch_process": [184, 185, 223], "update_reward_stat": 184, "normalize_reward": 184, "make_train": [185, 219], "_process_batch_hook": [185, 223], "versatil": 186, "lossmodul": [186, 205, 206], "optim_steps_per_batch": [186, 223, 225], "epoch": 186, "clip_grad_norm": 186, "partial": 186, "deriv": 186, "clip_norm": 186, "progress_bar": 186, "tqdm": [186, 225, 226], "save_trainer_interv": 186, "disk": [186, 223, 226], "10000": [186, 226], "save_trainer_fil": [186, 223], "_datacollector": [187, 192, 193, 206], "update_weights_interv": 187, "sit": [187, 226], "sync": [187, 206, 223, 225, 234], "update_weight": 187, "post_step": [187, 223], "cfg": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210], "dictconfig": [188, 189, 191, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 207, 210], "correct": [188, 226], "divid": 188, "unknowingli": 188, "1m": [188, 229], "annealing_fram": [188, 225], "init_env_step": [188, 189, 225], "proof_environ": [189, 191, 194, 196, 199, 201, 204, 225], "sta": 189, "ot": 189, "a2closs": [190, 219], "in_keys_actor": [191, 199], "observation_kei": [191, 199, 201, 204], "actorvalueoper": [191, 199, 219, 231], "dummi": [191, 194, 196, 199, 201, 204, 233], "actorcriticoper": [191, 199, 219], "parser_env_arg": [191, 199, 201], "make_ppo_model": [191, 219], "parser_model_args_continu": [191, 199, 201, 204], "cattensor": [191, 194, 199, 201, 204, 219, 225, 226, 228, 233], "hydra": [191, 194, 196, 199, 201, 204], "config_stor": [191, 194, 196, 199, 201, 204], "configstor": [191, 194, 196, 199, 201, 204], "dataclass": [191, 194, 196, 199, 201, 204], "halfcheetah": [191, 194, 199, 201, 204, 225], "config_field": [191, 194, 196, 199, 201, 204], "config_cl": [191, 194, 196, 199, 201, 204], "ppomodelconfig": [191, 199], "envconfig": [191, 194, 196, 199, 201, 204], "make_dataclass": [191, 194, 196, 199, 201, 204], "cls_name": [191, 194, 196, 199, 201, 204], "config_path": [191, 194, 196, 199, 201, 204], "config_nam": [191, 194, 196, 199, 201, 204], "actor_valu": [191, 199], "17": [191, 194, 199, 201, 204, 225, 226, 229], "actor_model_explor": [192, 193, 225], "make_env_kwarg": [192, 193], "actor_net_kwarg": [194, 201, 204], "value_net_kwarg": [194, 204], "modulelist": [194, 201, 204, 231, 234], "ddpgcnnactor": [194, 219], "ddpgmlpactor": [194, 219], "ddpgcnnqnet": [194, 219], "ddpgmlpqnet": [194, 219], "ddpgmodelconfig": 194, "targetnetupdat": [195, 197, 200, 203, 205, 206], "discretemodelconfig": 196, "pong": [196, 233], "v5": [196, 233], "pixels_onli": [196, 225, 226, 233, 234], "210": [196, 233], "160": [196, 226, 233], "ppoloss": [198, 219], "redqloss_deprec": 200, "qvalue_net_kwarg": [201, 204], "qvalu": [201, 204, 225, 226], "redqmodelconfig": 201, "replayargsconfig": 202, "sacmodelconfig": 204, "target_net_updat": 206, "constitu": 206, "learnt": [206, 226], "tempfil": 206, "tensorboardlogg": [206, 219], "tensordictreplaybuff": [206, 219, 225, 226], "egreedywrapp": [206, 219, 226], "env_proof": 206, "obs_spec": 206, "net_valu": 206, "dir": [206, 223], "gettempdir": 206, "exp_nam": [206, 211, 212, 213, 214, 215, 225], "argpars": [207, 210], "namespac": [207, 210], "parser": [207, 210], "transformed_env_constructor": [207, 219], "env_kwarg": [208, 209, 225], "num_env_per_collector": [208, 209], "num_collector": [208, 209], "less": [208, 209, 225, 226, 234], "video_tag": 210, "norm_obs_onli": 210, "use_env_cr": 210, "custom_env_mak": 210, "custom_env": 210, "return_transformed_env": 210, "action_dim_gsd": 210, "state_dim_gsd": 210, "batch_dim": [210, 232], "obs_norm_state_dict": 210, "wheter": 210, "maker": [210, 225], "overrid": 210, "exclus": 210, "log_dir": [211, 212, 214, 217], "minim": [211, 231], "dependeci": 211, "csv": [211, 217], "templat": 212, "tracking_uri": 213, "mlflow": [213, 217], "uri": 213, "datastor": 213, "tb_log": 214, "tensoarboard": 214, "tensorboard": [214, 217, 234], "wandb": [215, 217, 234], "experiment_nam": [216, 217], "uuid": [216, 233], "date": 216, "logger_typ": 217, "logger_nam": 217, "wandb_kwarg": 217, "mlflow_kwarg": 217, "randompolici": 219, "asyncdatacollector": 219, "tensordictprioritizedreplaybuff": [219, 234], "prioritizedsampl": [219, 225], "binarydiscretetensorspec": 219, "multonehotdiscretetensorspec": 219, "discretetensorspec": 219, "multistep": [219, 225, 226], "binarizereward": 219, "catfram": [219, 226], "centercrop": 219, "discreteactionproject": 219, "finitetensordictcheck": 219, "flattenobserv": 219, "frameskiptransform": 219, "grayscal": [219, 226, 233], "gsdenois": 219, "noopresetenv": [219, 233, 234], "observationtransform": 219, "pinmemorytransform": 219, "r3mtransform": [219, 229], "rewardsum": 219, "selecttransform": 219, "squeezetransform": 219, "stepcount": [219, 234], "tensordictprim": 219, "unsqueezetransform": 219, "viprewardtransform": 219, "viptransform": 219, "tensordictrecord": 219, "videorecord": 219, "step_mdp": [219, 225, 226, 233, 234], "get_available_librari": 219, "braxenv": 219, "braxwrapp": 219, "dmcontrolenv": [219, 225, 228, 233], "dmcontrolwrapp": 219, "jumanjienv": 219, "jumanjiwrapp": 219, "vmasenv": 219, "vmaswrapp": 219, "actorcriticwrapp": [219, 231], "additivegaussianwrapp": 219, "ornsteinuhlenbeckprocesswrapp": [219, 225], "is_tensordict_compat": 219, "ensure_tensordict_compat": 219, "qvaluehook": 219, "distributionalqvaluehook": 219, "duelingcnndqnet": [219, 226], "distributionaldqnnet": 219, "lstmnet": 219, "dreameractor": 219, "obsencod": 219, "obsdecod": 219, "rssmprior": 219, "rssmposterior": 219, "reset_nois": 219, "cemplann": 219, "mpcplannerbas": 219, "mppiplann": 219, "independentnorm": 219, "truncatednorm": 219, "tanhdelta": [219, 225], "onehotcategor": 219, "inv_softplu": 219, "distributionaldqnloss": [219, 226], "reinforceloss": 219, "dreameractorloss": 219, "dreamermodelloss": 219, "dreamervalueloss": 219, "gae": 219, "tdestim": 219, "generalized_advantage_estim": 219, "vec_generalized_advantage_estim": 219, "vec_td_lambda_return_estim": 219, "vec_td_lambda_advantage_estim": [219, 225, 226], "td_lambda_return_estim": 219, "td_lambda_advantage_estim": 219, "td_advantage_estim": 219, "distance_loss": 219, "hold_out_net": [219, 225], "hold_out_param": 219, "softupd": [219, 225], "hardupd": [219, 225], "batchsubsampl": [219, 223], "clearcudacach": 219, "countframeslog": 219, "logreward": [219, 223], "optimizerhook": 219, "rewardnorm": 219, "selectkei": [219, 223], "updateweight": [219, 223], "make_a2c_loss": 219, "make_a2c_model": 219, "make_collector_offpolici": 219, "make_collector_onpolici": 219, "make_ddpg_actor": [219, 225], "make_ddpg_loss": 219, "make_dqn_actor": 219, "make_dqn_loss": 219, "make_ppo_loss": 219, "make_redq_loss": 219, "make_redq_model": 219, "make_replay_buff": [219, 225], "make_sac_loss": 219, "make_sac_model": 219, "make_target_updat": 219, "parallel_env_constructor": [219, 225], "sync_async_collector": 219, "sync_sync_collector": 219, "correct_for_frame_skip": 219, "get_stats_random_rollout": [219, 225], "csvlogger": 219, "mlflowlogg": 219, "wandblogg": 219, "get_logg": 219, "generate_exp_nam": 219, "journei": 220, "guid": [220, 225, 226], "textbook": 220, "highlight": 220, "readi": [220, 228], "ever": 220, "cover": [220, 234], "bump": 220, "think": [220, 233], "benefit": 220, "submit": [220, 234], "pr": 220, "outer": [223, 225, 233], "believ": 223, "scheme": [223, 233], "substenti": 223, "_pre_steps_log_hook": 223, "_pre_optim_hook": 223, "sub_batch": 223, "_post_loss_hook": 223, "post_loss": 223, "_post_optim_hook": 223, "post_optim": 223, "_post_optim_log": 223, "post_optim_log": 223, "_post_steps_hook": 223, "_post_steps_log_hook": 223, "post_steps_log": 223, "comment": [223, 234], "categori": 223, "extens": 223, "replaybuffertrain": 223, "reserv": 223, "trainerhookbas": 223, "three": [223, 226], "logginghook": 223, "logging_hook": 223, "save_dict": 223, "some_valu": 223, "els": [223, 225, 226, 229], "torchsnapshot": 223, "ckpt_backend": 223, "wherea": [223, 225, 231], "pt": [223, 226, 229], "filepath": 223, "select_kei": 223, "save_train": 223, "load_from_fil": 223, "perfectli": 223, "intern": 224, "click": [225, 226, 228, 229, 231, 232, 233, 234], "tutori": [225, 226, 228, 229, 230, 231, 233], "familiar": [225, 226, 233], "suffici": [225, 226], "transpar": [225, 226], "understood": [225, 226], "sota": [225, 226, 234], "rather": [225, 226], "illustr": [225, 226], "deepcopi": 225, "matplotlib": [225, 226, 233], "pyplot": [225, 226, 233], "plt": [225, 226, 233], "wish": 225, "env_librari": 225, "env_task": 225, "env_arg": 225, "elif": [225, 226], "notimplementederror": 225, "friendli": 225, "rescal": 225, "leav": 225, "make_transformed_env": 225, "reward_sc": 225, "double_to_float_list": 225, "double_to_float_inv_list": 225, "dmcontrol": 225, "downstream": 225, "_stat": 225, "leverag": [225, 233], "env_per_collector": 225, "parallel_env": [225, 233, 234], "td_stat": 225, "_td_stat": 225, "numel": [225, 229], "_td_stats_select": 225, "to_tensordict": [225, 226, 232], "got": [225, 232], "isfinit": 225, "sd": 225, "get_env_stat": 225, "proof_env": 225, "env_spec": 225, "actor_net": 225, "num_lay": 225, "actor_modul": [225, 234], "q_net": 225, "qnet": 225, "frequenc": 225, "make_record": 225, "recorder_obj": 225, "higher": [225, 226, 233], "likelihood": 225, "circular": 225, "special": [225, 231, 233], "arrai": 225, "prb": 225, "buffer_s": [225, 226], "buffer_scratch_dir": 225, "adjust": 225, "device_count": [225, 226, 229, 233], "1000000": 225, "becom": [225, 233], "lr": [225, 226], "5e": 225, "weight_decai": 225, "5000": 225, "warm": 225, "tau": [225, 226], "005": [225, 226], "tmp": [225, 226, 229], "n_steps_forward": 225, "semin": 225, "qnet_target": 225, "9152e": 225, "3728e": 225, "00": [225, 226, 229, 230], "6790e": 225, "02": [225, 226, 229], "8100e": 225, "0432e": 225, "4661e": 225, "7335e": 225, "6330e": 225, "3439e": 225, "04": [225, 226, 230], "3564e": 225, "1885e": 225, "4405e": 225, "1127e": 225, "9993e": 225, "7058e": 225, "7317e": 225, "3022e": 225, "2335": 225, "3836": 225, "3375": 225, "3587": 225, "3461": 225, "4445": 225, "3917": 225, "3489": 225, "5510": 225, "5761": 225, "1731": 225, "4106": 225, "3918": 225, "0521": 225, "4038": 225, "4419": 225, "9479": 225, "coupl": 225, "async": [225, 234], "transmiss": 225, "3018685293": 225, "adam": [225, 226], "optimizer_actor": 225, "optimizer_qnet": 225, "total_collection_step": 225, "scheduler1": 225, "lr_schedul": 225, "cosineannealinglr": 225, "t_max": 225, "scheduler2": 225, "temporarili": 225, "henc": 225, "word": [225, 233], "Then": [225, 228], "fed": 225, "hood": 225, "metadata": [225, 233], "ommit": 225, "earli": [225, 234], "rewards_ev": 225, "norm_factor_train": 225, "collected_fram": 225, "pbar": [225, 226], "r0": 225, "filter": 225, "current_fram": [225, 226], "sampled_tensordict": 225, "backprop": 225, "next_valu": [225, 226], "value_est": 225, "pow": [225, 226], "sampled_tensordict_actor": 225, "actor_loss": 225, "p_in": 225, "p_dest": 225, "zip": [225, 227], "copy_": 225, "b_in": 225, "b_dest": 225, "td_record": 225, "r_evalu": 225, "set_descript": [225, 226], "4f": [225, 226], "2500": 225, "448": [225, 226], "33it": [225, 226], "memmapstorag": [225, 226, 229], "vhovra_c": 225, "057220458984375": 225, "mb": [225, 226, 229, 230], "e6oq0f00": 225, "002384185791015625": 225, "ti6amrov": 225, "0095367431640625": 225, "j5421r_g": 225, "gvaa9juz": 225, "8fm0x_02": 225, "j90beo9b": 225, "1621246337890625": 225, "npm3fb__": 225, "6fmhovbr": 225, "hdml7tpp": 225, "yfu95pnb": 225, "019073486328125": 225, "steps_to_next_ob": [225, 226], "yiwy6sfg": 225, "5ffv6039": 225, "tmphyxvaig2": 225, "2201": 225, "3075": 225, "7550": 225, "40": 225, "222": 225, "39it": [225, 226], "1951": 225, "05": [225, 226], "60": [225, 234], "1500": 225, "266": 225, "08it": 225, "4898": 225, "80": 225, "342": 225, "02it": [225, 226], "6399": 225, "07": [225, 226], "340": 225, "31it": 225, "2226": 225, "09": [225, 226], "plot": [225, 226], "mention": [225, 226, 233], "figur": [225, 226, 231, 233], "label": [225, 226, 232], "legend": [225, 226], "xlabel": [225, 226], "ylabel": [225, 226], "tight_layout": [225, 226], "250": 225, "devid": 225, "100000": [225, 226], "batch_size_traj": 225, "simplic": [225, 229, 231], "td_lambda": 225, "roughli": [225, 234], "four": 225, "big": [225, 226, 233], "inde": [225, 232], "revert": 225, "compli": [225, 232], "incompat": [225, 232], "bit": 225, "rand_idx": 225, "6cd43kgj": 225, "1444091796875": 225, "gcy_m72z": 225, "0476837158203125": 225, "q7yvo0n5": 225, "000762939453125": 225, "m0i5zgvb": 225, "9mvqxtb9": 225, "24249267578125": 225, "233ccffh": 225, "lbu2be_r": 225, "19073486328125": 225, "2lji705q": 225, "3814697265625": 225, "fo50t91h": 225, "tmps8j4588m": 225, "titl": [225, 226], "labmda": 225, "text": 225, "minut": [225, 226, 228, 229, 231, 232, 233, 234], "51": [225, 226, 229, 230], "169": [225, 230], "coding_ddpg": [225, 230], "jupyt": [225, 226, 227, 228, 229, 231, 232, 233, 234], "ipynb": [225, 226, 228, 229, 231, 232, 233, 234], "galleri": [225, 226, 227, 228, 229, 231, 232, 233, 234], "sphinx": [225, 226, 227, 228, 229, 231, 232, 233, 234], "cartpol": [226, 233], "tabl": 226, "pick": 226, "highest": 226, "discretiz": 226, "amort": 226, "seen": 226, "past": 226, "esitm": 226, "ipython": 226, "get_funct": [226, 231], "is_notebook": 226, "shell": 226, "get_ipython": 226, "__class__": 226, "zmqinteractiveshel": 226, "qtconsol": 226, "terminalinteractiveshel": 226, "nameerror": 226, "interpret": 226, "hyperparam": 226, "hopefulli": 226, "sentit": 226, "variat": 226, "2e": 226, "harder": [226, 234], "restrict": [226, 229, 233], "n_optim": 226, "n_worker": 226, "smooth": 226, "loos": 226, "notic": 226, "eps_greedy_v": 226, "eps_greedy_val_env": 226, "predefin": 226, "init_bia": 226, "500000": 226, "techin": 226, "dummy_env": 226, "9920334815979004": 226, "07730115205049515": 226, "pole": 226, "un": 226, "actuat": 226, "cart": 226, "frictionless": 226, "upright": [226, 233], "balanc": [226, 233], "pixels_sav": 226, "eval_rollout": 226, "imageio": 226, "mimwrit": 226, "cartpole_random": 226, "mp4": 226, "fp": 226, "480": [226, 229], "360": 226, "trick": 226, "num_ob": 226, "num_act": 226, "make_model": 226, "output_s": 226, "unflatten_kei": 226, "fairli": 226, "params_target": 226, "actor_explor": 226, "params_flat": 226, "flatten_kei": 226, "params_target_flat": 226, "600": 226, "bootstrap": 226, "value_next_step": 226, "not_termin": 226, "significantli": 226, "data_collector": 226, "traj_lengths_ev": 226, "grad_val": 226, "traj_length": 226, "mavg": 226, "traj_count": 226, "prev_traj_count": 226, "enough": 226, "sampled_data": 226, "sampled_data_out": 226, "tdstep": 226, "exp_valu": 226, "mse_loss": 226, "gv": 226, "clip_grad_value_": 226, "set_": 226, "clear_output": 226, "gcf": 226, "clf": 226, "figsiz": 226, "subplot": [226, 233], "traj": 226, "savefig": 226, "dqn_td0": 226, "png": 226, "43": 226, "73it": 226, "tmpmjnu4ok6": 226, "00762939453125": 226, "tmpgmsjx7zg": 226, "003814697265625": [226, 229], "tmptrq8ox94": 226, "0019073486328125": 226, "tmph9p6_rsq": 226, "000476837158203125": 226, "tmpqtoaxgm9": 226, "tmp6bybauri": 226, "tmpscfj9byw": 226, "31": [226, 230, 233], "25": 226, "tmpofw4e0_i": 226, "tmpoki8oqm4": 226, "tmp5emtpnt6": 226, "tmpa6pz9i1": 226, "19": [226, 230], "22": [226, 229], "46it": 226, "96": [226, 229], "68it": 226, "1215": 226, "0328": 226, "26": [226, 229], "91it": 226, "3781": 226, "6501": 226, "48it": 226, "4770": 226, "2280": 226, "192": 226, "69it": 226, "29": [226, 229], "2135": 226, "4982": 226, "45": [226, 229], "224": 226, "21": [226, 228], "94it": 226, "9057": 226, "5189": 226, "256": 226, "39": 226, "6790": 226, "5613": 226, "58": 226, "288": 226, "23": 226, "32it": 226, "9210": 226, "6904": 226, "320": [226, 233], "34it": 226, "27": [226, 229], "1533": 226, "5537": 226, "70": [226, 229], "352": 226, "56it": 226, "37": 226, "3228": 226, "6805": 226, "77": 226, "384": 226, "23it": 226, "0980": 226, "6028": 226, "83": 226, "416": 226, "52it": 226, "8089": 226, "1153": 226, "90": 226, "5464": 226, "5389": 226, "16it": 226, "5791": 226, "7470": 226, "512it": 226, "1578": 226, "3972": 226, "imshow": [226, 233], "imread": 226, "axi": 226, "1499": 226, "traj_lengths_train": 226, "saved_results_td0": 226, "entir": 226, "capac": 226, "smooth_l1_loss": 226, "clip_grad_norm_": 226, "dqn_tdlambda": 226, "98it": 226, "tmp3jlpvqnu": 226, "0078125": 226, "tmpdwxsopkm": 226, "00390625": 226, "tmpto9wx1qc": 226, "001953125": 226, "tmpw6y3nxd0": 226, "00048828125": 226, "tmps9rax53b": 226, "103515625e": 226, "tmphn7os_u": 226, "tmp5vov5ce5": 226, "tmp6w0lw1zq": 226, "tmphnjrbfqy": 226, "tmpd_o9zb9z": 226, "tmp96i5i4_0": 226, "74it": 226, "35it": 226, "7663": 226, "4627": 226, "22it": 226, "8998": 226, "8549": 226, "10it": 226, "2482": 226, "2060": 226, "18it": 226, "4188": 226, "1839": 226, "07it": 226, "1136": 226, "7623": 226, "67it": 226, "9588": 226, "8870": 226, "88it": 226, "2960": 226, "4173": 226, "13it": 226, "5501": 226, "12it": 226, "2940": 226, "3463": 226, "1548": 226, "0702": 226, "7887": 226, "0299": 226, "2421": 226, "3525": 226, "51it": 226, "2751": 226, "3470": 226, "28it": 226, "3256": 226, "saved_results_tdlambda": 226, "fewer": 226, "load_td0": 226, "load_tdlambda": 226, "frames_td0": 226, "frames_tdlambda": 226, "evals_td0": 226, "evals_tdlambda": 226, "mavgs_td0": 226, "mavgs_tdlambda": 226, "losses_td0": 226, "losses_tdlambda": 226, "values_td0": 226, "values_tdlambda": 226, "grad_vals_td0": 226, "grad_vals_tdlambda": 226, "traj_lengths_td0": 226, "traj_lengths_tdlambda": 226, "traj_count_td0": 226, "traj_count_tdlambda": 226, "td0": 226, "goe": [226, 233], "greatli": 226, "nth": 226, "noticebli": 226, "myopic": 226, "collectorclass": 226, "till": 226, "worst": 226, "accuraci": 226, "fanci": 226, "287": [226, 230], "coding_dqn": [226, 230], "tutorials_python": 227, "tutorials_jupyt": 227, "distinct": 228, "humanoid": [228, 233], "walk": [228, 233], "env1": 228, "env1_obs_kei": 228, "observation_stand": 228, "env2": 228, "env2_obs_kei": 228, "observation_walk": 228, "tdreset1": 228, "tdreset2": 228, "tdreset": 228, "67": [228, 229], "backbon": [228, 234], "policy_common": 228, "policy_stand": 228, "policy_walk": 228, "seq": 228, "But": 228, "env1_mak": 228, "env2_mak": 228, "_single_task": 228, "td_rollout": 228, "shown": 228, "875": [228, 230], "multi_task": [228, 230], "explain": 229, "fine": 229, "tune": 229, "semat": 229, "interchang": 229, "sake": 229, "challeng": 229, "embodi": 229, "ai": 229, "env_transform": [229, 233], "s3": 229, "amazonaw": 229, "r3m_50": 229, "374m": 229, "0m": 229, "116mb": 229, "7m": 229, "150mb": 229, "41": 229, "9m": 229, "92": 229, "9mb": 229, "52": 229, "5m": 229, "3mb": 229, "85": 229, "4mb": 229, "109mb": 229, "8m": 229, "121mb": 229, "108m": 229, "114mb": 229, "120m": 229, "104mb": 229, "131m": 229, "141m": 229, "84": 229, "7mb": 229, "155m": 229, "97": 229, "167m": 229, "107mb": 229, "48": 229, "180m": 229, "112mb": 229, "191m": 229, "108mb": 229, "54": 229, "202m": 229, "89": 229, "5mb": 229, "57": 229, "213m": 229, "93": 229, "0mb": 229, "61": 229, "229m": 229, "111mb": 229, "240m": 229, "251m": 229, "262m": 229, "101mb": 229, "73": 229, "274m": 229, "76": 229, "285m": 229, "100mb": 229, "79": 229, "295m": 229, "82": 229, "307m": 229, "105mb": 229, "317m": 229, "2mb": 229, "88": 229, "328m": 229, "91": 229, "341m": 229, "106mb": 229, "352m": 229, "362m": 229, "373m": 229, "102mb": 229, "2048": 229, "trainabl": 229, "wiser": 229, "subset": 229, "163": 229, "again": [229, 233], "conclud": 229, "tmp95fxc4lf": 229, "030517578125": 229, "tmps_v9hymz": 229, "00095367431640625": 229, "tmpwg_p3hie": 229, "659": 229, "1796875": 229, "tmp8dq1_ikt": 229, "tmp0trtdbs1": 229, "haven": 229, "yet": 229, "_storag": 229, "592": [229, 230], "pretrained_model": [229, 230], "596": 230, "torchrl_demo": [230, 234], "111": [230, 234], "torch_env": [230, 233], "411": [230, 233], "126": [230, 231], "tensordict_tutori": [230, 232], "025": [230, 232], "recommand": 231, "conveni": [231, 232], "a_out": 231, "mergelinear": 231, "in_1": 231, "in_2": 231, "linear_1": 231, "linear_2": 231, "x_1": 231, "x_2": 231, "multiheadlinear": 231, "out_1": 231, "out_2": 231, "splitlinear": 231, "output_1": 231, "output_2": 231, "split_and_merge_linear": 231, "make_functional_with_buff": 231, "replica": 231, "params_expand": [231, 234], "buffers_expand": 231, "num_model": 231, "group": 231, "zeros_lik": 231, "result_td": 231, "ok": 231, "conflict": 231, "wire": 231, "tensordictsequentialand": 231, "block": 231, "demonstr": [231, 233], "architectur": 231, "vaswani": 231, "2017": 231, "asid": 231, "tokenstoqkv": 231, "to_dim": 231, "from_dim": 231, "latent_dim": 231, "x_to": 231, "x_from": 231, "splithead": 231, "num_head": 231, "to_num": 231, "from_num": 231, "d_tensor": 231, "transpos": 231, "softmax": 231, "n_head": 231, "d_in": 231, "attn": 231, "skiplayernorm": 231, "to_len": 231, "layer_norm": 231, "layernorm": 231, "x_0": 231, "ffn": 231, "dropout_r": 231, "attentionblock": 231, "tokens_to_qkv": 231, "split_head": 231, "encodertransformerblock": 231, "attention_block": 231, "x_out": 231, "decodertransformerblock": 231, "encoder_block": 231, "transformerencod": 231, "num_block": 231, "transformerdecod": 231, "from_len": 231, "attentionblocktensordict": 231, "connect": 231, "moreov": 231, "complic": [231, 232, 233], "to_nam": 231, "from_nam": 231, "thank": 231, "transformerblockencodertensordict": 231, "transformerblockdecodertensordict": 231, "token": 231, "extract": 231, "transformerencodertensordict": 231, "transformerdecodertensordict": 231, "transformertensordict": 231, "x_encod": 231, "x_decod": 231, "ve": 231, "operar": 231, "td_token": 231, "tdtransform": 231, "t1": 231, "t2": 231, "016232013702392578": 231, "t3": 231, "t4": 231, "009660005569458008": 231, "margin": 231, "deal": 232, "furthermor": 232, "awai": 232, "organ": 232, "power": 232, "segment": 232, "get_data_a": 232, "get_data_b": 232, "reusabl": 232, "lot": 232, "rewriten": 232, "modal": 232, "get_data": 232, "reus": 232, "argu": 232, "dictdataset": 232, "__getitem__": 232, "collat": 232, "collate_dict_fn": 232, "dict_list": 232, "final_dict": 232, "single_dict": 232, "simpler": 232, "collate_tensordict_fn": 232, "furtherdown": 232, "_permutedtensordict": 232, "_unsqueezedtensordict": 232, "_viewedtensordict": 232, "datastructur": 232, "explicitli": 232, "caramba": 232, "algebra": 232, "foo": [232, 233], "multidimension": 232, "insid": [232, 233], "violat": 232, "err": 232, "resp": 232, "among": 232, "tensordict_clon": 232, "tensodict": 232, "tuple_index": 232, "new_tensordict": 232, "get_sub_tensordict": 232, "subtensordict": 232, "subtd": 232, "td2": 232, "booltensor": 232, "fashion": 232, "clonned_tensordict": 232, "staked_tensordict": 232, "isinst": 232, "unbind": 232, "list_tensordict": 232, "comeback": 232, "permut": [232, 233, 234], "unsqueezed_tensordict": 232, "role": 233, "supervis": 233, "unsupervis": 233, "rom": 233, "licens": 233, "pygam": 233, "unifi": 233, "_build_env": 233, "sphinx_gallery_start_ignor": 233, "warn": 233, "filterwarn": 233, "sphinx_gallery_end_ignor": 233, "adventur": 233, "ram": 233, "airraid": 233, "alien": 233, "amidar": 233, "assault": 233, "continuousbox": [233, 234], "0605": 233, "pack": 233, "brief": 233, "exectut": 233, "reproduct": 233, "did": 233, "shortcut": 233, "tensordict_tprim": 233, "tensordict_rollout": [233, 234], "quickli": 233, "axesimag": 233, "0x7f9fb95554b0": 233, "inconsist": 233, "supplementari": 233, "swingup": 233, "swingup_spars": 233, "ball_in_cup": 233, "catch": 233, "balance_spars": 233, "three_pol": 233, "two_pol": 233, "finger": 233, "turn_easi": 233, "turn_hard": 233, "fish": 233, "swim": 233, "hopper": 233, "hop": 233, "run_pure_st": 233, "bring_bal": 233, "bring_peg": 233, "insert_bal": 233, "insert_peg": 233, "point_mass": 233, "reacher": 233, "swimmer": 233, "swimmer6": 233, "swimmer15": 233, "walker": 233, "dog": 233, "trot": 233, "humanoid_cmu": 233, "lqr": 233, "lqr_2_1": 233, "lqr_6_2": 233, "quadrup": 233, "escap": 233, "stacker": 233, "stack_2": 233, "stack_4": 233, "240": [233, 234], "wrapper1": 233, "wrapper2": 233, "obviou": 233, "truth": 233, "extern": 233, "env0": 233, "env_transformed_bi": 233, "stanc": 233, "transformeddistribut": 233, "base_dist": 233, "unboundeddiscretetensorspec": 233, "concat": 233, "mofidi": 233, "_inv_apply_transform": 233, "_apply_transform": 233, "transformedenviron": 233, "moderet": 233, "computation": 233, "legitim": 233, "side": 233, "incom": 233, "amongst": 233, "has_cuda": 233, "simplest": 233, "wor": 233, "convention": 233, "scope": 233, "difficulti": 233, "markovian": 233, "3288080526": 233, "sometim": 233, "constain": 233, "uuid1": 233, "bar_": 233, "get_someth": 233, "bar_a814b60": 233, "981a": 233, "11ed": 233, "9108": 233, "0242ac120002": 233, "aargh": 233, "ourselv": 233, "foo_list": 233, "vec_env": 233, "_dispatch_caller_parallel": 233, "0x7f9f5ac5f520": 233, "bar_abf1e0b2": 233, "bbb6": 233, "bar_abe0748a": 233, "bb1b": 233, "bar_abe8171c": 233, "8fa2": 233, "121": 233, "122": 233, "parallen": 233, "carefulli": 233, "commonli": 233, "approxim": 233, "particularili": 233, "evolv": 233, "caution": 233, "previous": 233, "steadi": 233, "approx": 233, "3005": 233, "0572": 233, "1757": 233, "9928": 233, "9231": 233, "0017": 233, "_extra_st": 233, "observation_ssq": 233, "observation_sum": 233, "1534": 233, "0790": 233, "1859": 233, "1429": 233, "1581": 233, "dispach": 233, "small": 233, "absor": 233, "demo": 234, "icml": 234, "dai": 234, "overview": 234, "vmoen": 234, "fb": 234, "question": 234, "team": 234, "decid": 234, "invest": 234, "platform": 234, "media": 234, "truli": 234, "rest": 234, "predominantli": 234, "tensordict1": 234, "tensordict2": 234, "tensordict_sampl": 234, "_sampler": 234, "_sum_tre": 234, "28791671991348267": 234, "gym_env": 234, "squash": 234, "lazyconv2d": 234, "6400": 234, "backbone_modul": 234, "value_modul": 234, "tensordict_exp": 234, "base_modul": 234, "0137": 234, "1524": 234, "0641": 234, "indexputbackward0": 234, "8728": 234, "1335": 234, "9833": 234, "3497": 234, "6889": 234, "6433": 234, "clampbackward1": 234, "1131": 234, "1761": 234, "3425": 234, "2665": 234, "2915": 234, "6207": 234, "1441": 234, "2375": 234, "1242": 234, "1372": 234, "3810": 234, "meanbackward1": 234, "tensordicts_prealloc": 234, "tensordicts_stack": 234, "disclaim": 234, "concatmodul": 234, "loss_td": 234, "loss_valu": 234, "pred_valu": 234, "pred_value_max": 234, "target_value_max": 234, "bug": 234, "year": 234, "roadmap": 234, "compris": 234, "hierarch": 234, "contributor": 234, "curiou": 234, "feedback": 234, "nascent": 234, "pypi": 234}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [22, 0, 1, "", "MultiStep"], [23, 0, 1, "", "OneHotDiscreteTensorSpec"], [24, 0, 1, "", "PrioritizedReplayBuffer"], [25, 0, 1, "", "ReplayBuffer"], [26, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [27, 0, 1, "", "TensorDictReplayBuffer"], [28, 0, 1, "", "TensorSpec"], [29, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[22, 1, 1, "", "add_module"], [22, 1, 1, "", "apply"], [22, 1, 1, "", "bfloat16"], [22, 1, 1, "", "buffers"], [22, 1, 1, "", "children"], [22, 1, 1, "", "cpu"], [22, 1, 1, "", "cuda"], [22, 1, 1, "", "double"], [22, 1, 1, "", "eval"], [22, 1, 1, "", "extra_repr"], [22, 1, 1, "", "float"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_buffer"], [22, 1, 1, "", "get_extra_state"], [22, 1, 1, "", "get_parameter"], [22, 1, 1, "", "get_submodule"], [22, 1, 1, "", "half"], [22, 1, 1, "", "ipu"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "modules"], [22, 1, 1, "", "named_buffers"], [22, 1, 1, "", "named_children"], [22, 1, 1, "", "named_modules"], [22, 1, 1, "", "named_parameters"], [22, 1, 1, "", "parameters"], [22, 1, 1, "", "register_backward_hook"], [22, 1, 1, "", "register_buffer"], [22, 1, 1, "", "register_forward_hook"], [22, 1, 1, "", "register_forward_pre_hook"], [22, 1, 1, "", "register_full_backward_hook"], [22, 1, 1, "", "register_load_state_dict_post_hook"], [22, 1, 1, "", "register_module"], [22, 1, 1, "", "register_parameter"], [22, 1, 1, "", "requires_grad_"], [22, 1, 1, "", "set_extra_state"], [22, 1, 1, "", "share_memory"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "to"], [22, 1, 1, "", "to_empty"], [22, 1, 1, "", "train"], [22, 1, 1, "", "type"], [22, 1, 1, "", "xpu"], [22, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "append_transform"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "insert_transform"], [24, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "append_transform"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "insert_transform"], [25, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[30, 0, 1, "", "PrioritizedSampler"], [31, 0, 1, "", "RandomSampler"], [32, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[30, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[33, 0, 1, "", "LazyMemmapStorage"], [34, 0, 1, "", "LazyTensorStorage"], [35, 0, 1, "", "ListStorage"], [36, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[33, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[34, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[37, 0, 1, "", "RoundRobinWriter"], [38, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[37, 1, 1, "", "add"], [37, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "extend"]], "torchrl.envs": [[39, 0, 1, "", "EnvBase"], [40, 0, 1, "", "EnvCreator"], [41, 0, 1, "", "EnvMetaData"], [42, 0, 1, "", "GymLikeEnv"], [43, 2, 1, "", "ModelBasedEnvBase"], [44, 0, 1, "", "ParallelEnv"], [45, 0, 1, "", "SerialEnv"], [46, 0, 1, "", "Specs"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 3, 1, "", "batch_locked"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "fake_tensordict"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "id0", "rand_step"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "id1", "reset"], [39, 1, 1, "id2", "rollout"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "id3", "set_seed"], [39, 1, 1, "", "share_memory"], [39, 3, 1, "", "specs"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "id4", "step"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "close"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_step"], [42, 1, 1, "", "read_action"], [42, 1, 1, "", "read_done"], [42, 1, 1, "", "read_obs"], [42, 1, 1, "", "read_reward"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset"], [42, 1, 1, "", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_info_dict_reader"], [42, 1, 1, "", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "update_kwargs"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[46, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[47, 2, 1, "", "BraxEnv"], [48, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[49, 2, 1, "", "DMControlEnv"], [50, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[51, 2, 1, "", "GymEnv"], [52, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[53, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[54, 2, 1, "", "JumanjiEnv"], [55, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[56, 2, 1, "", "VmasEnv"], [57, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[58, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[59, 0, 1, "", "BinarizeReward"], [60, 0, 1, "", "CatFrames"], [61, 0, 1, "", "CatTensors"], [62, 0, 1, "", "CenterCrop"], [63, 0, 1, "", "Compose"], [64, 0, 1, "", "DiscreteActionProjection"], [65, 0, 1, "", "DoubleToFloat"], [66, 0, 1, "", "ExcludeTransform"], [67, 0, 1, "", "FiniteTensorDictCheck"], [68, 0, 1, "", "FlattenObservation"], [69, 0, 1, "", "FrameSkipTransform"], [70, 0, 1, "", "GrayScale"], [71, 0, 1, "", "NoopResetEnv"], [72, 0, 1, "", "ObservationNorm"], [73, 0, 1, "", "ObservationTransform"], [74, 0, 1, "", "PinMemoryTransform"], [75, 0, 1, "", "R3MTransform"], [76, 0, 1, "", "Resize"], [77, 0, 1, "", "RewardClipping"], [78, 0, 1, "", "RewardScaling"], [79, 0, 1, "", "RewardSum"], [80, 0, 1, "", "SelectTransform"], [81, 0, 1, "", "SqueezeTransform"], [82, 0, 1, "", "StepCounter"], [83, 0, 1, "", "TensorDictPrimer"], [84, 0, 1, "", "ToTensorImage"], [85, 0, 1, "", "Transform"], [86, 0, 1, "", "TransformedEnv"], [87, 0, 1, "", "UnsqueezeTransform"], [88, 0, 1, "", "VIPRewardTransform"], [89, 0, 1, "", "VIPTransform"], [90, 0, 1, "", "VecNorm"], [91, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[59, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[60, 1, 1, "", "reset"], [60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[63, 1, 1, "", "forward"], [63, 1, 1, "", "reset"], [63, 1, 1, "", "to"], [63, 1, 1, "", "transform_input_spec"], [63, 1, 1, "", "transform_observation_spec"], [63, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[65, 1, 1, "", "transform_input_spec"], [65, 1, 1, "", "transform_observation_spec"], [65, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[66, 1, 1, "", "reset"], [66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FlattenObservation": [[68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[71, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[72, 1, 1, "", "init_stats"], [72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[75, 1, 1, "", "to"]], "torchrl.envs.transforms.Resize": [[76, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[79, 1, 1, "", "reset"], [79, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[80, 1, 1, "", "reset"], [80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SqueezeTransform": [[81, 1, 1, "", "forward"]], "torchrl.envs.transforms.StepCounter": [[82, 1, 1, "", "reset"], [82, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[83, 1, 1, "", "reset"], [83, 1, 1, "", "to"], [83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[84, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "reset"], [85, 1, 1, "", "transform_input_spec"], [85, 1, 1, "", "transform_observation_spec"], [85, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[86, 3, 1, "", "action_spec"], [86, 3, 1, "", "batch_locked"], [86, 1, 1, "", "eval"], [86, 3, 1, "", "input_spec"], [86, 1, 1, "", "load_state_dict"], [86, 3, 1, "", "observation_spec"], [86, 3, 1, "", "reward_spec"], [86, 1, 1, "", "set_seed"], [86, 1, 1, "", "state_dict"], [86, 1, 1, "", "to"], [86, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "transform_input_spec"], [87, 1, 1, "", "transform_observation_spec"], [87, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[89, 3, 1, "", "is_3d"], [89, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[90, 1, 1, "", "build_td_for_shared_vecnorm"], [90, 1, 1, "", "get_extra_state"], [90, 1, 1, "", "set_extra_state"], [90, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[91, 1, 1, "", "reset"]], "torchrl.envs.utils": [[92, 2, 1, "", "check_env_specs"], [93, 2, 1, "", "exploration_mode"], [94, 2, 1, "", "get_available_libraries"], [95, 2, 1, "", "set_exploration_mode"], [96, 2, 1, "", "step_mdp"]], "torchrl.modules": [[97, 0, 1, "", "CEMPlanner"], [98, 0, 1, "", "ConvNet"], [99, 0, 1, "", "DdpgCnnActor"], [100, 0, 1, "", "DdpgCnnQNet"], [101, 0, 1, "", "DdpgMlpActor"], [102, 0, 1, "", "DdpgMlpQNet"], [103, 0, 1, "", "Delta"], [104, 0, 1, "", "DistributionalDQNnet"], [105, 0, 1, "", "DreamerActor"], [106, 0, 1, "", "DuelingCnnDQNet"], [107, 0, 1, "", "IndependentNormal"], [108, 0, 1, "", "LSTMNet"], [109, 0, 1, "", "MLP"], [110, 0, 1, "", "MPCPlannerBase"], [111, 0, 1, "", "MPPIPlanner"], [112, 0, 1, "", "NoisyLazyLinear"], [113, 0, 1, "", "NoisyLinear"], [114, 0, 1, "", "NormalParamWrapper"], [115, 0, 1, "", "ObsDecoder"], [116, 0, 1, "", "ObsEncoder"], [117, 0, 1, "", "OneHotCategorical"], [118, 0, 1, "", "RSSMPosterior"], [119, 0, 1, "", "RSSMPrior"], [120, 0, 1, "", "TanhDelta"], [121, 0, 1, "", "TanhNormal"], [122, 0, 1, "", "TruncatedNormal"], [123, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[97, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[98, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[99, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[101, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[102, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[103, 1, 1, "", "log_prob"], [103, 3, 1, "", "mean"], [103, 3, 1, "", "mode"], [103, 1, 1, "", "rsample"], [103, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[104, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[105, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[106, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[107, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[108, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[109, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[110, 1, 1, "", "forward"], [110, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[111, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[112, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[114, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[115, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[116, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[117, 1, 1, "", "log_prob"], [117, 3, 1, "", "mode"], [117, 1, 1, "", "rsample"], [117, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[118, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[119, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[120, 3, 1, "", "mean"], [120, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[121, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[122, 1, 1, "", "log_prob"], [122, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[124, 0, 1, "", "Actor"], [125, 0, 1, "", "ActorCriticOperator"], [126, 0, 1, "", "ActorCriticWrapper"], [127, 0, 1, "", "ActorValueOperator"], [128, 0, 1, "", "AdditiveGaussianWrapper"], [129, 0, 1, "", "DistributionalQValueActor"], [130, 0, 1, "", "EGreedyWrapper"], [131, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [132, 0, 1, "", "ProbabilisticActor"], [133, 0, 1, "", "QValueActor"], [134, 0, 1, "", "SafeModule"], [135, 0, 1, "", "SafeProbabilisticModule"], [136, 0, 1, "", "SafeProbabilisticSequential"], [137, 0, 1, "", "SafeSequential"], [138, 0, 1, "", "ValueOperator"], [139, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[125, 1, 1, "", "get_critic_operator"], [125, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[126, 1, 1, "", "get_policy_operator"], [126, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[127, 1, 1, "", "get_policy_operator"], [127, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[134, 1, 1, "", "random"], [134, 1, 1, "", "random_sample"], [134, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[135, 1, 1, "", "random"], [135, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[139, 1, 1, "", "get_reward_operator"], [139, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[140, 0, 1, "", "DistributionalQValueHook"], [141, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[142, 0, 1, "", "ensure_tensordict_compatible"], [143, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[144, 0, 1, "", "biased_softplus"], [145, 0, 1, "", "inv_softplus"], [146, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[144, 1, 1, "", "forward"]], "torchrl.objectives": [[147, 0, 1, "", "A2CLoss"], [148, 0, 1, "", "ClipPPOLoss"], [149, 0, 1, "", "DDPGLoss"], [150, 0, 1, "", "DQNLoss"], [151, 0, 1, "", "DistributionalDQNLoss"], [152, 0, 1, "", "DreamerActorLoss"], [153, 0, 1, "", "DreamerModelLoss"], [154, 0, 1, "", "DreamerValueLoss"], [155, 0, 1, "", "HardUpdate"], [156, 0, 1, "", "KLPENPPOLoss"], [157, 0, 1, "", "PPOLoss"], [158, 0, 1, "", "REDQLoss"], [159, 0, 1, "", "ReinforceLoss"], [160, 0, 1, "", "SACLoss"], [161, 0, 1, "", "SoftUpdate"], [162, 0, 1, "", "distance_loss"], [163, 0, 1, "", "hold_out_net"], [164, 0, 1, "", "hold_out_params"], [165, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[147, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[148, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[149, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[150, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[151, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.value": [[166, 0, 1, "", "GAE"], [167, 0, 1, "", "TDEstimate"], [168, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[166, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[167, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[168, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[169, 0, 1, "", "generalized_advantage_estimate"], [170, 0, 1, "", "td_advantage_estimate"], [171, 0, 1, "", "td_lambda_advantage_estimate"], [172, 0, 1, "", "td_lambda_return_estimate"], [173, 0, 1, "", "vec_generalized_advantage_estimate"], [174, 0, 1, "", "vec_td_lambda_advantage_estimate"], [175, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[176, 2, 1, "", "TensorDictRecorder"], [177, 2, 1, "", "VideoRecorder"]], "torchrl.trainers": [[178, 0, 1, "", "BatchSubSampler"], [179, 0, 1, "", "ClearCudaCache"], [180, 0, 1, "", "CountFramesLog"], [181, 0, 1, "", "LogReward"], [182, 0, 1, "", "OptimizerHook"], [183, 0, 1, "", "Recorder"], [184, 0, 1, "", "RewardNormalizer"], [185, 0, 1, "", "SelectKeys"], [186, 0, 1, "", "Trainer"], [187, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[188, 2, 1, "", "correct_for_frame_skip"], [189, 2, 1, "", "get_stats_random_rollout"], [190, 2, 1, "", "make_a2c_loss"], [191, 2, 1, "", "make_a2c_model"], [192, 2, 1, "", "make_collector_offpolicy"], [193, 2, 1, "", "make_collector_onpolicy"], [194, 2, 1, "", "make_ddpg_actor"], [195, 2, 1, "", "make_ddpg_loss"], [196, 2, 1, "", "make_dqn_actor"], [197, 2, 1, "", "make_dqn_loss"], [198, 2, 1, "", "make_ppo_loss"], [199, 2, 1, "", "make_ppo_model"], [200, 2, 1, "", "make_redq_loss"], [201, 2, 1, "", "make_redq_model"], [202, 2, 1, "", "make_replay_buffer"], [203, 2, 1, "", "make_sac_loss"], [204, 2, 1, "", "make_sac_model"], [205, 2, 1, "", "make_target_updater"], [206, 2, 1, "", "make_trainer"], [207, 2, 1, "", "parallel_env_constructor"], [208, 2, 1, "", "sync_async_collector"], [209, 2, 1, "", "sync_sync_collector"], [210, 2, 1, "", "transformed_env_constructor"]], "torchrl.trainers.loggers": [[211, 2, 1, "", "CSVLogger"], [212, 2, 1, "", "Logger"], [213, 2, 1, "", "MLFlowLogger"], [214, 2, 1, "", "TensorboardLogger"], [215, 2, 1, "", "WandbLogger"], [216, 2, 1, "", "generate_exp_name"], [217, 2, 1, "", "get_logger"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 221, 222, 223, 224, 225, 226, 233, 234], "document": [0, 8], "tutori": 0, "refer": [0, 219], "knowledg": [0, 220], "base": [0, 220, 226], "indic": 0, "tabl": 0, "collector": [1, 225], "packag": [1, 2, 3, 221, 222, 223, 224], "data": [1, 2, 225, 234], "helper": [1, 3], "function": [1, 234], "replai": [2, 225, 234], "buffer": [2, 225, 234], "compos": [2, 63], "tensorspec": [2, 28], "util": [2, 221, 222, 223], "env": [3, 233, 234], "vector": [3, 234], "transform": [3, 85, 225, 231, 233, 234], "record": [3, 183, 225], "domain": 3, "specif": [3, 228], "librari": [3, 234], "work": [4, 5], "gym": [4, 233], "what": 4, "i": [4, 7, 232], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 232], "up": 5, "your": [5, 225], "environ": [5, 6, 225, 226, 228, 233, 234], "instal": [5, 6, 234], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 225, 226, 229, 231, 234], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 233], "all": 6, "new": 6, "bindindg": 6, "2": [6, 231], "1": [6, 231], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 225, 226], "too": 7, "slow": 7, "intermedi": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 231], "rl": [8, 234], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multonehotdiscretetensorspec": 21, "multistep": 22, "onehotdiscretetensorspec": 23, "prioritizedreplaybuff": 24, "replaybuff": 25, "tensordictprioritizedreplaybuff": 26, "tensordictreplaybuff": 27, "unboundedcontinuoustensorspec": 29, "prioritizedsampl": 30, "randomsampl": 31, "sampler": 32, "lazymemmapstorag": 33, "lazytensorstorag": 34, "liststorag": 35, "storag": 36, "roundrobinwrit": 37, "writer": 38, "envbas": 39, "envcreat": 40, "envmetadata": 41, "gymlikeenv": 42, "modelbasedenvbas": 43, "parallelenv": 44, "serialenv": 45, "spec": [46, 233], "braxenv": 47, "braxwrapp": 48, "dmcontrolenv": 49, "dmcontrolwrapp": 50, "gymenv": 51, "gymwrapp": 52, "habitatenv": 53, "jumanjienv": 54, "jumanjiwrapp": 55, "vmasenv": 56, "vmaswrapp": 57, "dreamerenv": 58, "binarizereward": 59, "catfram": 60, "cattensor": 61, "centercrop": 62, "discreteactionproject": 64, "doubletofloat": 65, "excludetransform": 66, "finitetensordictcheck": 67, "flattenobserv": 68, "frameskiptransform": 69, "grayscal": 70, "noopresetenv": 71, "observationnorm": 72, "observationtransform": 73, "pinmemorytransform": 74, "r3mtransform": 75, "resiz": 76, "rewardclip": 77, "rewardsc": 78, "rewardsum": 79, "selecttransform": 80, "squeezetransform": 81, "stepcount": 82, "tensordictprim": 83, "totensorimag": 84, "transformedenv": 86, "unsqueezetransform": 87, "viprewardtransform": 88, "viptransform": 89, "vecnorm": [90, 233], "gsdenois": 91, "check_env_spec": 92, "exploration_mod": 93, "get_available_librari": 94, "set_exploration_mod": 95, "step_mdp": 96, "cemplann": 97, "convnet": 98, "ddpgcnnactor": 99, "ddpgcnnqnet": 100, "ddpgmlpactor": 101, "ddpgmlpqnet": 102, "delta": 103, "distributionaldqnnet": 104, "dreameractor": 105, "duelingcnndqnet": 106, "independentnorm": 107, "lstmnet": 108, "mlp": 109, "mpcplannerbas": 110, "mppiplann": 111, "noisylazylinear": 112, "noisylinear": 113, "normalparamwrapp": 114, "obsdecod": 115, "obsencod": 116, "onehotcategor": 117, "rssmposterior": 118, "rssmprior": 119, "tanhdelta": 120, "tanhnorm": 121, "truncatednorm": 122, "reset_nois": 123, "actor": [124, 231], "actorcriticoper": [125, 231], "actorcriticwrapp": 126, "actorvalueoper": 127, "additivegaussianwrapp": 128, "distributionalqvalueactor": 129, "egreedywrapp": 130, "ornsteinuhlenbeckprocesswrapp": 131, "probabilisticactor": [132, 231], "qvalueactor": 133, "safemodul": 134, "safeprobabilisticmodul": 135, "safeprobabilisticsequenti": 136, "safesequenti": 137, "valueoper": 138, "worldmodelwrapp": 139, "distributionalqvaluehook": 140, "qvaluehook": 141, "ensure_tensordict_compat": 142, "is_tensordict_compat": 143, "biased_softplu": 144, "inv_softplu": 145, "map": 146, "a2closs": 147, "clipppoloss": 148, "ddpgloss": 149, "dqnloss": 150, "distributionaldqnloss": 151, "dreameractorloss": 152, "dreamermodelloss": 153, "dreamervalueloss": 154, "hardupd": 155, "klpenppoloss": 156, "ppoloss": 157, "redqloss": 158, "reinforceloss": 159, "sacloss": 160, "softupd": 161, "distance_loss": 162, "hold_out_net": 163, "hold_out_param": 164, "next_state_valu": 165, "gae": 166, "tdestim": 167, "tdlambdaestim": 168, "generalized_advantage_estim": 169, "td_advantage_estim": 170, "td_lambda_advantage_estim": 171, "td_lambda_return_estim": 172, "vec_generalized_advantage_estim": 173, "vec_td_lambda_advantage_estim": 174, "vec_td_lambda_return_estim": 175, "tensordictrecord": 176, "videorecord": 177, "batchsubsampl": 178, "clearcudacach": 179, "countframeslog": 180, "logreward": 181, "optimizerhook": 182, "rewardnorm": 184, "selectkei": 185, "trainer": [186, 223], "updateweight": 187, "correct_for_frame_skip": 188, "get_stats_random_rollout": 189, "make_a2c_loss": 190, "make_a2c_model": 191, "make_collector_offpolici": 192, "make_collector_onpolici": 193, "make_ddpg_actor": 194, "make_ddpg_loss": 195, "make_dqn_actor": 196, "make_dqn_loss": 197, "make_ppo_loss": 198, "make_ppo_model": 199, "make_redq_loss": 200, "make_redq_model": 201, "make_replay_buff": 202, "make_sac_loss": 203, "make_sac_model": 204, "make_target_updat": 205, "make_train": 206, "parallel_env_constructor": 207, "sync_async_collector": 208, "sync_sync_collector": 209, "transformed_env_constructor": 210, "csvlogger": 211, "logger": [212, 223], "mlflowlogg": 213, "tensorboardlogg": 214, "wandblogg": 215, "generate_exp_nam": 216, "get_logg": 217, "readm": [218, 227], "tuto": [218, 227], "api": 219, "contribut": [220, 234], "content": 220, "modul": [221, 234], "tensordict": [221, 232, 234], "hook": [221, 223], "model": [221, 225, 226, 229, 234], "explor": 221, "planner": 221, "distribut": 221, "object": [222, 225, 234], "dqn": [222, 226], "ddpg": [222, 225], "sac": 222, "redq": 222, "ppo": 222, "a2c": 222, "reinforc": 222, "dreamer": 222, "return": 222, "checkpoint": 223, "builder": 223, "_util": 224, "code": [225, 226, 232], "parallel": [225, 228, 233], "execut": [225, 228], "normal": 225, "observ": 225, "build": [225, 226], "evalu": 225, "hyperparamet": [225, 226], "initi": 225, "time": [225, 230], "polici": [225, 228], "experi": 225, "result": 225, "sampl": 225, "trajectori": 225, "td": [225, 226], "lambda": [225, 226], "pixel": 226, "The": 226, "problem": 226, "deep": 226, "q": 226, "network": 226, "regular": 226, "loop": 226, "conclus": 226, "possibl": 226, "improv": [226, 232], "task": 228, "multi": 228, "divers": 228, "rollout": [228, 233], "pretrain": 229, "comput": 230, "tensordictmodul": [231, 234], "exampl": 231, "simpl": 231, "usag": [231, 232], "multipl": 231, "input": 231, "3": 231, "output": 231, "4": 231, "combin": 231, "tensordictsequenti": 231, "5": 231, "compat": 231, "do": [231, 232], "": 231, "don": 231, "t": [231, 232], "probabilistictensordictmodul": 231, "showcas": 231, "implement": 231, "benchmark": 231, "modular": 232, "can": 232, "thi": 232, "python": 232, "dict": 232, "structur": 232, "dictionari": 232, "featur": 232, "get": 232, "kei": 232, "valu": 232, "updat": 232, "tensordict_or_dict": 232, "del": 232, "tensor": 232, "batch": 232, "size": 232, "devic": [232, 233], "memori": 232, "share": 232, "via": 232, "physic": 232, "oper": 232, "seed": 233, "reset": 233, "step": 233, "frame_skip": 233, "deepmind": 233, "control": 233, "run": 233, "close": 233, "access": 233, "attribut": 233, "kwarg": 233, "introduct": 234, "chang": 234, "config": 234, "sequenc": 234, "program": 234, "ensembl": 234, "meta": 234, "special": 234, "class": 234, "state": 234}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [220, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "TensorSpec": [[2, "tensorspec"], [28, "tensorspec"]], "Utils": [[2, "utils"], [221, "utils"], [222, "utils"], [223, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [225, "transforms"], [234, "transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[21, "multonehotdiscretetensorspec"]], "MultiStep": [[22, "multistep"]], "OneHotDiscreteTensorSpec": [[23, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[24, "prioritizedreplaybuffer"]], "ReplayBuffer": [[25, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[26, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[27, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[29, "unboundedcontinuoustensorspec"]], "PrioritizedSampler": [[30, "prioritizedsampler"]], "RandomSampler": [[31, "randomsampler"]], "Sampler": [[32, "sampler"]], "LazyMemmapStorage": [[33, "lazymemmapstorage"]], "LazyTensorStorage": [[34, "lazytensorstorage"]], "ListStorage": [[35, "liststorage"]], "Storage": [[36, "storage"]], "RoundRobinWriter": [[37, "roundrobinwriter"]], "Writer": [[38, "writer"]], "EnvBase": [[39, "envbase"]], "EnvCreator": [[40, "envcreator"]], "EnvMetaData": [[41, "envmetadata"]], "GymLikeEnv": [[42, "gymlikeenv"]], "ModelBasedEnvBase": [[43, "modelbasedenvbase"]], "ParallelEnv": [[44, "parallelenv"]], "SerialEnv": [[45, "serialenv"]], "Specs": [[46, "specs"]], "BraxEnv": [[47, "braxenv"]], "BraxWrapper": [[48, "braxwrapper"]], "DMControlEnv": [[49, "dmcontrolenv"]], "DMControlWrapper": [[50, "dmcontrolwrapper"]], "GymEnv": [[51, "gymenv"]], "GymWrapper": [[52, "gymwrapper"]], "HabitatEnv": [[53, "habitatenv"]], "JumanjiEnv": [[54, "jumanjienv"]], "JumanjiWrapper": [[55, "jumanjiwrapper"]], "VmasEnv": [[56, "vmasenv"]], "VmasWrapper": [[57, "vmaswrapper"]], "DreamerEnv": [[58, "dreamerenv"]], "BinarizeReward": [[59, "binarizereward"]], "CatFrames": [[60, "catframes"]], "CatTensors": [[61, "cattensors"]], "CenterCrop": [[62, "centercrop"]], "Compose": [[63, "compose"]], "DiscreteActionProjection": [[64, "discreteactionprojection"]], "DoubleToFloat": [[65, "doubletofloat"]], "ExcludeTransform": [[66, "excludetransform"]], "FiniteTensorDictCheck": [[67, "finitetensordictcheck"]], "FlattenObservation": [[68, "flattenobservation"]], "FrameSkipTransform": [[69, "frameskiptransform"]], "GrayScale": [[70, "grayscale"]], "NoopResetEnv": [[71, "noopresetenv"]], "ObservationNorm": [[72, "observationnorm"]], "ObservationTransform": [[73, "observationtransform"]], "PinMemoryTransform": [[74, "pinmemorytransform"]], "R3MTransform": [[75, "r3mtransform"]], "Resize": [[76, "resize"]], "RewardClipping": [[77, "rewardclipping"]], "RewardScaling": [[78, "rewardscaling"]], "RewardSum": [[79, "rewardsum"]], "SelectTransform": [[80, "selecttransform"]], "SqueezeTransform": [[81, "squeezetransform"]], "StepCounter": [[82, "stepcounter"]], "TensorDictPrimer": [[83, "tensordictprimer"]], "ToTensorImage": [[84, "totensorimage"]], "Transform": [[85, "transform"]], "TransformedEnv": [[86, "transformedenv"]], "UnsqueezeTransform": [[87, "unsqueezetransform"]], "VIPRewardTransform": [[88, "viprewardtransform"]], "VIPTransform": [[89, "viptransform"]], "VecNorm": [[90, "vecnorm"], [233, "vecnorm"]], "gSDENoise": [[91, "gsdenoise"]], "check_env_specs": [[92, "check-env-specs"]], "exploration_mode": [[93, "exploration-mode"]], "get_available_libraries": [[94, "get-available-libraries"]], "set_exploration_mode": [[95, "set-exploration-mode"]], "step_mdp": [[96, "step-mdp"]], "CEMPlanner": [[97, "cemplanner"]], "ConvNet": [[98, "convnet"]], "DdpgCnnActor": [[99, "ddpgcnnactor"]], "DdpgCnnQNet": [[100, "ddpgcnnqnet"]], "DdpgMlpActor": [[101, "ddpgmlpactor"]], "DdpgMlpQNet": [[102, "ddpgmlpqnet"]], "Delta": [[103, "delta"]], "DistributionalDQNnet": [[104, "distributionaldqnnet"]], "DreamerActor": [[105, "dreameractor"]], "DuelingCnnDQNet": [[106, "duelingcnndqnet"]], "IndependentNormal": [[107, "independentnormal"]], "LSTMNet": [[108, "lstmnet"]], "MLP": [[109, "mlp"]], "MPCPlannerBase": [[110, "mpcplannerbase"]], "MPPIPlanner": [[111, "mppiplanner"]], "NoisyLazyLinear": [[112, "noisylazylinear"]], "NoisyLinear": [[113, "noisylinear"]], "NormalParamWrapper": [[114, "normalparamwrapper"]], "ObsDecoder": [[115, "obsdecoder"]], "ObsEncoder": [[116, "obsencoder"]], "OneHotCategorical": [[117, "onehotcategorical"]], "RSSMPosterior": [[118, "rssmposterior"]], "RSSMPrior": [[119, "rssmprior"]], "TanhDelta": [[120, "tanhdelta"]], "TanhNormal": [[121, "tanhnormal"]], "TruncatedNormal": [[122, "truncatednormal"]], "reset_noise": [[123, "reset-noise"]], "Actor": [[124, "actor"], [231, "actor"]], "ActorCriticOperator": [[125, "actorcriticoperator"], [231, "actorcriticoperator"]], "ActorCriticWrapper": [[126, "actorcriticwrapper"]], "ActorValueOperator": [[127, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[128, "additivegaussianwrapper"]], "DistributionalQValueActor": [[129, "distributionalqvalueactor"]], "EGreedyWrapper": [[130, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[131, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[132, "probabilisticactor"], [231, "probabilisticactor"]], "QValueActor": [[133, "qvalueactor"]], "SafeModule": [[134, "safemodule"]], "SafeProbabilisticModule": [[135, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[136, "safeprobabilisticsequential"]], "SafeSequential": [[137, "safesequential"]], "ValueOperator": [[138, "valueoperator"]], "WorldModelWrapper": [[139, "worldmodelwrapper"]], "DistributionalQValueHook": [[140, "distributionalqvaluehook"]], "QValueHook": [[141, "qvaluehook"]], "ensure_tensordict_compatible": [[142, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[143, "is-tensordict-compatible"]], "biased_softplus": [[144, "biased-softplus"]], "inv_softplus": [[145, "inv-softplus"]], "mappings": [[146, "mappings"]], "A2CLoss": [[147, "a2closs"]], "ClipPPOLoss": [[148, "clipppoloss"]], "DDPGLoss": [[149, "ddpgloss"]], "DQNLoss": [[150, "dqnloss"]], "DistributionalDQNLoss": [[151, "distributionaldqnloss"]], "DreamerActorLoss": [[152, "dreameractorloss"]], "DreamerModelLoss": [[153, "dreamermodelloss"]], "DreamerValueLoss": [[154, "dreamervalueloss"]], "HardUpdate": [[155, "hardupdate"]], "KLPENPPOLoss": [[156, "klpenppoloss"]], "PPOLoss": [[157, "ppoloss"]], "REDQLoss": [[158, "redqloss"]], "ReinforceLoss": [[159, "reinforceloss"]], "SACLoss": [[160, "sacloss"]], "SoftUpdate": [[161, "softupdate"]], "distance_loss": [[162, "distance-loss"]], "hold_out_net": [[163, "hold-out-net"]], "hold_out_params": [[164, "hold-out-params"]], "next_state_value": [[165, "next-state-value"]], "GAE": [[166, "gae"]], "TDEstimate": [[167, "tdestimate"]], "TDLambdaEstimate": [[168, "tdlambdaestimate"]], "generalized_advantage_estimate": [[169, "generalized-advantage-estimate"]], "td_advantage_estimate": [[170, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[171, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[172, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[173, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[174, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[175, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[176, "tensordictrecorder"]], "VideoRecorder": [[177, "videorecorder"]], "BatchSubSampler": [[178, "batchsubsampler"]], "ClearCudaCache": [[179, "clearcudacache"]], "CountFramesLog": [[180, "countframeslog"]], "LogReward": [[181, "logreward"]], "OptimizerHook": [[182, "optimizerhook"]], "Recorder": [[183, "recorder"]], "RewardNormalizer": [[184, "rewardnormalizer"]], "SelectKeys": [[185, "selectkeys"]], "Trainer": [[186, "trainer"]], "UpdateWeights": [[187, "updateweights"]], "correct_for_frame_skip": [[188, "correct-for-frame-skip"]], "get_stats_random_rollout": [[189, "get-stats-random-rollout"]], "make_a2c_loss": [[190, "make-a2c-loss"]], "make_a2c_model": [[191, "make-a2c-model"]], "make_collector_offpolicy": [[192, "make-collector-offpolicy"]], "make_collector_onpolicy": [[193, "make-collector-onpolicy"]], "make_ddpg_actor": [[194, "make-ddpg-actor"]], "make_ddpg_loss": [[195, "make-ddpg-loss"]], "make_dqn_actor": [[196, "make-dqn-actor"]], "make_dqn_loss": [[197, "make-dqn-loss"]], "make_ppo_loss": [[198, "make-ppo-loss"]], "make_ppo_model": [[199, "make-ppo-model"]], "make_redq_loss": [[200, "make-redq-loss"]], "make_redq_model": [[201, "make-redq-model"]], "make_replay_buffer": [[202, "make-replay-buffer"]], "make_sac_loss": [[203, "make-sac-loss"]], "make_sac_model": [[204, "make-sac-model"]], "make_target_updater": [[205, "make-target-updater"]], "make_trainer": [[206, "make-trainer"]], "parallel_env_constructor": [[207, "parallel-env-constructor"]], "sync_async_collector": [[208, "sync-async-collector"]], "sync_sync_collector": [[209, "sync-sync-collector"]], "transformed_env_constructor": [[210, "transformed-env-constructor"]], "CSVLogger": [[211, "csvlogger"]], "Logger": [[212, "logger"]], "MLFlowLogger": [[213, "mlflowlogger"]], "TensorboardLogger": [[214, "tensorboardlogger"]], "WandbLogger": [[215, "wandblogger"]], "generate_exp_name": [[216, "generate-exp-name"]], "get_logger": [[217, "get-logger"]], "README Tutos": [[218, "readme-tutos"], [227, "readme-tutos"]], "API Reference": [[219, "api-reference"]], "Contributing": [[220, "contributing"], [234, "contributing"]], "Contents:": [[220, null]], "torchrl.modules package": [[221, "torchrl-modules-package"]], "TensorDict modules": [[221, "tensordict-modules"]], "Hooks": [[221, "hooks"]], "Models": [[221, "models"], [234, "models"]], "Exploration": [[221, "exploration"]], "Planners": [[221, "planners"]], "Distributions": [[221, "distributions"]], "torchrl.objectives package": [[222, "torchrl-objectives-package"]], "DQN": [[222, "dqn"]], "DDPG": [[222, "ddpg"]], "SAC": [[222, "sac"]], "REDQ": [[222, "redq"]], "PPO": [[222, "ppo"]], "A2C": [[222, "a2c"]], "Reinforce": [[222, "reinforce"]], "Dreamer": [[222, "dreamer"]], "Returns": [[222, "returns"]], "torchrl.trainers package": [[223, "torchrl-trainers-package"]], "Checkpointing": [[223, "checkpointing"]], "Trainer and hooks": [[223, "trainer-and-hooks"]], "Builders": [[223, "builders"]], "Loggers": [[223, "loggers"]], "torchrl._utils package": [[224, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[225, "coding-ddpg-using-torchrl"]], "Environment": [[225, "environment"]], "Parallel execution": [[225, "parallel-execution"]], "Normalization of the observations": [[225, "normalization-of-the-observations"]], "Building the model": [[225, "building-the-model"]], "Evaluator: building your recorder object": [[225, "evaluator-building-your-recorder-object"]], "Replay buffer": [[225, "replay-buffer"]], "Hyperparameters": [[225, "hyperparameters"], [226, "hyperparameters"]], "Initialization": [[225, "initialization"]], "Data collector": [[225, "data-collector"]], "Time to train the policy!": [[225, "time-to-train-the-policy"]], "Experiment results": [[225, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[225, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[226, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[226, "building-the-environment"]], "The problem": [[226, "the-problem"]], "Building the model (Deep Q-network)": [[226, "building-the-model-deep-q-network"]], "Regular DQN": [[226, "regular-dqn"]], "Training loop": [[226, "training-loop"], [226, "id1"]], "TD-lambda": [[226, "td-lambda"]], "Conclusion and possible improvements": [[226, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[228, "task-specific-policy-in-multi-task-environments"]], "Policy": [[228, "policy"]], "Executing diverse tasks in parallel": [[228, "executing-diverse-tasks-in-parallel"]], "Rollout": [[228, "rollout"]], "Using pretrained models": [[229, "using-pretrained-models"]], "Computation times": [[230, "computation-times"]], "TensorDictModule": [[231, "tensordictmodule"]], "TensorDictModule by examples": [[231, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[231, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[231, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[231, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[231, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[231, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[231, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[231, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[231, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[231, "benchmarking"]], "TensorDict": [[232, "tensordict"], [234, "tensordict"]], "Improving the modularity of codes": [[232, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[232, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[232, "tensordict-structure"]], "TensorDict Dictionary Features": [[232, "tensordict-dictionary-features"]], "get(key)": [[232, "get-key"]], "set(key, value)": [[232, "set-key-value"]], "keys()": [[232, "keys"]], "values()": [[232, "values"]], "update(tensordict_or_dict)": [[232, "update-tensordict-or-dict"]], "del": [[232, "del"]], "TensorDict tensor features": [[232, "tensordict-tensor-features"]], "Batch size": [[232, "batch-size"]], "Devices": [[232, "devices"]], "Memory sharing via physical memory usage": [[232, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[232, "tensor-operations"]], "TorchRL envs": [[233, "torchrl-envs"]], "Gym environments": [[233, "gym-environments"]], "Env Specs": [[233, "env-specs"]], "Seeding, resetting and steps": [[233, "seeding-resetting-and-steps"]], "Rollouts": [[233, "rollouts"]], "frame_skip": [[233, "frame-skip"]], "Rendering": [[233, "rendering"]], "DeepMind Control environments": [[233, "deepmind-control-environments"]], "Transforming envs": [[233, "transforming-envs"]], "Environment device": [[233, "environment-device"]], "Running environments in parallel": [[233, "running-environments-in-parallel"]], "Closing parallel environments": [[233, "closing-parallel-environments"]], "Seeding": [[233, "seeding"]], "Accessing environment attributes": [[233, "accessing-environment-attributes"]], "kwargs for parallel environments": [[233, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[233, "transforming-parallel-environments"]], "Introduction to TorchRL": [[234, "introduction-to-torchrl"]], "Data": [[234, "data"]], "Replay buffers": [[234, "replay-buffers"]], "Envs": [[234, "envs"]], "Changing environments config": [[234, "changing-environments-config"]], "Vectorized Environments": [[234, "vectorized-environments"]], "Modules": [[234, "modules"]], "TensorDictModules": [[234, "tensordictmodules"]], "Sequences of Modules": [[234, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[234, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[234, "specialized-classes"]], "Using Environments and Modules": [[234, "using-environments-and-modules"]], "Objectives": [[234, "objectives"]], "State of the Library": [[234, "state-of-the-library"]], "Installing the Library": [[234, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[22, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[24, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[25, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[28, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[29, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[30, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[30, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[31, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[33, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[33, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[34, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[34, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[35, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[36, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[37, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[37, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[37, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[38, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[38, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[38, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[39, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[39, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[39, "id0"], [39, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[39, "id1"], [39, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[39, "id2"], [39, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[39, "id3"], [39, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[39, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[39, "id4"], [39, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[40, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[41, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[42, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[43, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[43, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[43, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[43, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[43, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[43, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[44, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[45, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[46, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[46, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[47, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[48, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[50, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[52, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[53, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[54, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[55, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[56, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[57, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[58, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[59, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[60, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[60, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[61, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[62, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.DiscreteActionProjection"]], "doubletofloat (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[65, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[65, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[65, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.ExcludeTransform"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[66, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[66, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[68, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.FrameSkipTransform"]], "grayscale (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[70, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[71, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[72, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[72, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[75, "torchrl.envs.transforms.R3MTransform.to"]], "resize (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[76, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[77, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[78, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[79, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[79, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.SelectTransform"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[80, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[80, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.SqueezeTransform"]], "forward() (torchrl.envs.transforms.squeezetransform method)": [[81, "torchrl.envs.transforms.SqueezeTransform.forward"]], "stepcounter (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.StepCounter"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[82, "torchrl.envs.transforms.StepCounter.reset"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[82, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[83, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[83, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[83, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[84, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[85, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[85, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[85, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[85, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[85, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[86, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[86, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[86, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[86, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[86, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[86, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[86, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[86, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[86, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[86, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[86, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[87, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[87, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[87, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[87, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[88, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[88, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.VIPTransform"]], "is_3d (torchrl.envs.transforms.viptransform property)": [[89, "torchrl.envs.transforms.VIPTransform.is_3d"]], "to() (torchrl.envs.transforms.viptransform method)": [[89, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[90, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[90, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[90, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[90, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[91, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[92, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[93, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[94, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[95, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[96, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[97, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[97, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[98, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[98, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[99, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[99, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[100, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[100, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[101, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[101, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[102, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[102, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[103, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[103, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[103, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[103, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[103, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[103, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[104, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[104, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[105, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[105, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[106, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[106, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[107, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[107, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[108, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[108, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[109, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[109, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[110, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[110, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[110, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[111, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[111, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[112, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[112, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[113, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[114, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[114, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[115, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[115, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[116, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[116, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[117, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[117, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[117, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[117, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[117, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[118, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[118, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[119, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[119, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[120, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[120, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[120, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[121, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[121, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[122, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[122, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[122, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[123, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[124, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[125, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[125, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[125, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[126, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[126, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[126, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[127, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[127, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[127, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[128, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[128, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[128, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[130, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[130, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[131, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[131, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[134, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[134, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[134, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[135, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[135, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[139, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[139, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[140, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[141, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[142, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[143, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[144, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[144, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[145, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[146, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[147, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[147, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[148, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[148, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[149, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[149, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[150, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[150, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[151, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[151, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[152, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[152, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[153, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[153, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[154, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[154, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[155, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[156, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[156, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[157, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[157, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[158, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[158, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[159, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[159, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[160, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[160, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[161, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[162, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[163, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[164, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[165, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[166, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[166, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[167, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[167, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[168, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[168, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[169, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[170, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[171, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[172, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[173, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[174, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[176, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[177, "torchrl.record.VideoRecorder"]], "batchsubsampler (class in torchrl.trainers)": [[178, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[179, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[180, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[181, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[182, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[183, "torchrl.trainers.Recorder"]], "rewardnormalizer (class in torchrl.trainers)": [[184, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[185, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[186, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[187, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[188, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[189, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[190, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[191, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[192, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[193, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[194, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[195, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[196, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[197, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[198, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[199, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[200, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.transformed_env_constructor"]], "csvlogger() (in module torchrl.trainers.loggers)": [[211, "torchrl.trainers.loggers.CSVLogger"]], "logger() (in module torchrl.trainers.loggers)": [[212, "torchrl.trainers.loggers.Logger"]], "mlflowlogger() (in module torchrl.trainers.loggers)": [[213, "torchrl.trainers.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.trainers.loggers)": [[214, "torchrl.trainers.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.trainers.loggers)": [[215, "torchrl.trainers.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.trainers.loggers)": [[216, "torchrl.trainers.loggers.generate_exp_name"]], "get_logger() (in module torchrl.trainers.loggers)": [[217, "torchrl.trainers.loggers.get_logger"]]}})